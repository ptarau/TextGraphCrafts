--T
The Discrete Cosine Transform.
--A
Each discrete cosine transform (DCT) uses $N$ real basis vectors whose components are cosines. In the DCT-4, for example, the $j$th component of $\boldv_k$ is $\cos (j These basis vectors are orthogonal and the transform is extremely useful in image processing. If the vector $\boldx$ gives the intensities along a row of pixels, its cosine series $\sum c_k \boldv_k$ has the coefficients $c_k=(\boldx,\boldv_k)/N$.  They are quickly computed from a Fast Fourier Transform.  But a direct proof of orthogonality, by calculating inner products, does not reveal how natural these cosine vectors are.    We prove orthogonality in a different way. Each DCT basis contains the eigenvectors of a symmetric "second difference" matrix. By varying the boundary conditions we get the established transforms DCT-1 through DCT-4. Other combinations lead to four additional cosine transforms. The type of boundary condition (Dirichlet or Neumann, centered at a meshpoint or a midpoint) determines the applications that are appropriate for each transform. The centering also determines the period: $N-1$ or $N$ in the established transforms, $N-\frac{1}{2}$ or $N+ \frac{1}{2}$ in the other four. The key point is that all these "eigenvectors of cosines" come from simple and familiar matrices.
--B
Introduction
Just as the Fourier series is the starting point in transforming and analyzing periodic func-
tions, the basic step for vectors is the Discrete Fourier Transform (DFT). It maps the "time
domain" to the "frequency domain." A vector with N components is written as a combination
of N special basis vectors v k . Those are constructed from powers of the complex
number
The vectors v k are the columns of the Fourier matrix Those columns are orthog-
onal. So the inverse of F is its conjugate transpose, divided by k v k . The discrete
Fourier series
Fc. The inverse for the
(complex) Fourier coefficients.
Two points to mention, about orthogonality and speed, before we come to the purpose
of this note. For these DFT basis vectors, a direct proof of orthogonality is very efficient:
The numerator is zero because w 1. The denominator is nonzero because k 6= '. This
proof of (v is short but not very revealing. I want to recommend a different proof,
which recognizes the v k as eigenvectors. We could work with any circulant matrix, and we
will choose below a symmetric A 0 . Then linear algebra guarantees that its eigenvectors v k
are orthogonal.
Actually this second proof, verifying that A 0 v brings out a central point of
Fourier analysis. The Fourier basis diagonalizes every periodic constant coefficient operator.
Each frequency k (or 2-k=N) has its own frequency response - k . The complex exponential
vectors v k are important in applied mathematics because they are eigenvectors!
The second key point is speed of calculation. The matrices F and F \Gamma1 are full, which
normally means N 2 multiplications for the transform and the inverse transform:
and y. But the special form F of the Fourier matrix allows a factorization
into very sparse and simple matrices. This is the Fast Fourier Transform (FFT). It is easiest
when N is a power 2 L . The operation count drops from N 2 to 1
2 NL, which is an enormous
saving. But the matrix entries (powers of w) are complex.
The purpose of this note is to consider real transforms that involve cosines. Each matrix
of cosines yields a Discrete Cosine Transform (DCT). There are four established types, DCT-
through DCT-4, which differ in the boundary conditions at the ends of the interval. (This
difference is crucial. The DCT-2 and DCT-4 are constantly applied in image processing;
they have an FFT implementation and they are truly useful.) All four types of DCT are
orthogonal transforms. The usual proof is a direct calculation of inner products of the N
basis vectors, using trigonometric identities.
We want to prove this orthogonality in the second (indirect) way. The basis vectors of
cosines are actually eigenvectors of symmetric second-difference matrices. This proof seems
more attractive, and ultimately more useful. It also leads us, by selecting different boundary
conditions, to four less familiar cosine transforms. The complete set of eight DCT's was
found in 1985 by Wang [10], and we want to derive them in a simple way. We begin now
with the DFT.
1. The Periodic Case and the DFT
The Fourier transform works perfectly for periodic boundary conditions (and constant coef-
ficients). For a second difference matrix, the constant diagonals contain \Gamma1 and 2 and \Gamma1.
The diagonals with \Gamma1 loop around to the upper right and lower left corners, by periodicity,
to produce a circulant matrix:
For this matrix A 0 , and every matrix throughout the paper, we look at three things:
1. The interior rows
2. The boundary rows (rows 0 and
3. The eigenvectors
The interior rows will be the same in every matrix! The jth entry of A 0 u is \Gammau
which corresponds to \Gammau 00 . This choice of sign makes each matrix positive
definite (or at least semidefinite). No eigenvalues are negative.
At the first and last rows (j = 0 and difference involves u
and uN . It reaches beyond the boundary. Then the periodicity
produces the \Gamma1 entries that appear in the corners of A 0 .
Note: The numbering throughout this paper goes from 0 to N \Gamma 1, since SIAM is glad to
be on very friendly terms with the IEEE. But we still use i for p
\Gamma1! No problem anyway,
since the DCT is real.
We now verify that v is an eigenvector of A 0 . It is periodic
because w 1. The jth component of A 0 v is the second difference
\Gammaw (j \Gamma1)k
A 0 is symmetric and those eigenvalues -
are real. The smallest is -
corresponding to the eigenvector v In applications it is very useful to have
this flat DC vector (direct current in circuit theory, constant gray level in image processing)
as one of the basis vectors.
Since A 0 is a real symmetric matrix, its orthogonal eigenvectors can also be chosen real.
In fact the real and imaginary parts of the v k must be eigenvectors:
sin 2k-
sin 4k-
':The equal pair of eigenvalues - gives the two eigenvectors c k and s k . The exceptions
are 1), and for even N also -
Those two eigenvectors have length
N , while the other c k and
N=2. It is these exceptions that make the real DFT (sines together with
cosines) less attractive than the complex form. That factor
2 is familiar from ordinary
Fourier series. It will appear in the for the DCT-1 and DCT-2, always with the
flat basis vector
We expect the cosines alone, without sines, to be complete over a half-period. In Fourier
series this changes the interval from [\Gamma-] to [0; -]. Periodicity is gone because cos 0 6=
cos -. The differential equation is still \Gammau -u. The boundary condition that produces
cosines is u there are two possibilities, Neumann and Dirichlet, at the other
Zero slope: u eigenfunctions u k
Zero value: eigenfunctions u k
The two sets of cosines are orthogonal bases for L 2 [0; -]. The eigenvalues from \Gammau 00
are
All our attention now goes to the discrete case. The key point is that every boundary
condition has two fundamental approximations. At each boundary, the condition on u
can be imposed at a meshpoint or at a midpoint. So each problem has four basic discrete
approximations. (More than four, if we open up to further refinements in the boundary
conditions - but four are basic.) Often the best choices use the same centering at the two
ends - both meshpoint centered or both midpoint centered.
In our problem, u at one end and u at the other end yield
eight possibilities. Those eight combinations produce eight cosine transforms. Starting
from there are also eight sine transforms. Our purpose is to
organize this approach to the DCT (and DST), by describing the second difference matrices
and identifying their eigenvectors.
Each of the eight (or sixteen) matrices has the tridiagonal form
\Omega \Omega
The boundary conditions decide the eigenvectors, with four possibilities at each end: Dirichlet
or Neumann, centered at a meshpoint or a midpoint. The reader may object that
symmetry requires off-diagonal \Gamma1's in the first and last rows. The meshpoint Neumann
condition produces \Gamma2. So we admit that the eigenvectors in that case need a rescaling at
the end (only involving
2) to be orthogonal. The result is a beautifully simple set of basis
vectors. We will describe their applications in signal processing.
2. The Discrete Cosine Transform
The discrete problem is so natural, and almost inevitable, that it is really astonishing
that the DCT was not discovered until 1974 [1]. Perhaps this time delay illustrates an
underlying principle. Each continuous problem (differential equation) has many discrete
approximations (difference equations). The discrete case has a new level of variety and
complexity, often appearing in the boundary conditions.
In fact the original paper by Ahmed, Natarajan, and Rao derived the DCT-2 basis
as approximations to the eigenvectors of an important matrix, with entries ae jj \Gammakj . This
is the covariance matrix for a useful class of signals. The number ae (near 1) measures
the correlation between nearest neighbors. The true eigenvectors would give an optimal
"Karhunen-Lo'eve basis" for compressing those signals. The simpler DCT vectors are close
to optimal (and independent of ae).
The four standard types of DCT are now studied directly from their basis vectors (recall
that j and k go from 0 to N \Gamma 1). The jth component of the kth basis vector is
when j or k is 0 or
DCT-2: cos
(divide by
(divide by
DCT-4: cos
Those are the orthogonal columns of the four DCT matrices C 1 , C 2 , C 3 , C 4 . The matrix C 3
with top row 1
is the transpose of C 2 . All columns of C 2 , C 3 , C 4 have length
N=2. The immediate goal is to prove orthogonality.
Proof ! These four bases (including the rescaling by
are eigenvectors of symmetric
second difference matrices. Thus each basis is orthogonal. We start with matrices A 1 , A 2 ,
A 3 , A 4 in the form (1), whose eigenvectors are pure (unscaled) cosines. Then symmetrizing
these matrices introduces the
2 scaling; the eigenvectors become orthogonal. Three of the
matrices were studied in an unpublished manuscript [12] by David Zachmann, who wrote
down the explicit eigenvectors. His paper is very useful. He noted earlier references for the
eigenvalues; a complete history would be virtually impossible.
We have seen that A 0 , the periodic matrix with \Gamma1, 2, \Gamma1 in every row, shares the
same cosine and sine eigenvectors as the second derivative. The cosines are picked out by a
zero-slope boundary condition in the first row.
3. Boundary Conditions at Meshpoints and Midpoints
There are two natural choices for the discrete analogue of u
Symmetry around the meshpoint
Symmetry around the midpoint
The first is called whole-sample symmetry in signal processing, the second is half -sample.
Symmetry around 0 extends evenly across the left boundary to
extends the signal to
Those are the simplest reflections of a discrete vector. We substitute the two options for
in the second difference \Gammau 1 that straddles the boundary:
Symmetry at meshpoint: u
Symmetry at midpoint: u
Those are the two possible top rows for the matrix A:
At the other boundary there are the same choices in replacing u Substituting
in the second difference \Gammau N \Gamma2 gives the two
forms for the Neumann condition in the last row of A:
meshpoint: \Theta \Theta = \Gamma2 2 and midpoint: \Theta
The alternative at the right boundary is the Dirichlet condition The meshpoint
condition removes the last term of \Gammau N \Gamma2 . The midpoint condition
simple too, but the resulting matrix will be a little surprising. The 2
turns into 3:
meshpoint: \Theta
Now we have 2 \Theta combinations. Four of them give the standard basis functions of
cosines, listed above. Those are the DCT-1 to DCT-4, and they come when the centering
is the same at the two boundaries: both meshpoint centered or both midpoint centered.
Zachmann [12] makes the important observation that all those boundary conditions give
second-order accuracy around their center points. Finite differences are one-sided and less
accurate only with respect to the wrong center! We can quickly write down the matrices
A 1 to A 4 that have these cosines as eigenvectors.
4. The Standard Cosine Transforms
Notice especially that the denominator in the cosines (which is agrees with
the distance between "centers." This distance is an integer, measuring from meshpoint to
meshpoint or from midpoint to midpoint. We also give the diagonal matrix D that makes
and makes the eigenvectors orthogonal:
Centers
Components cos jk -
diag
\Gammap
Centers
Centers
Components cos j
Centers
Recently Sanchez et al [7] provided parametric forms for all matrices that have the DCT
bases as their eigenvectors. These are generally full matrices of the form "Toeplitz plus
near-Hankel." Particular tridiagonal matrices (not centered differences) were noticed by
Kitajima, Rao, Hou, and Jain. We hope that the pattern of second differences with different
centerings will bring all eight matrices into a common structure. Perhaps each matrix
deserves a quick comment.
DCT-1: The similarity transformation D \Gamma1
yields a symmetric matrix. This multiplies
the eigenvector matrix for A 1 by D \Gamma1
1 . (Notice that leads to
(D x.) The eigenvectors become orthogonal for both odd N and even
1 divides the first and last components by
2:
pj
ip
pj
ip
pj
The first and last eigenvectors have length
the others have length
DCT-2: These basis vectors cos
are the most popular of all, because
gives the flat vector first and last components are not exceptional. The
boundary condition is a zero derivative centered on a midpoint. Similarly the
right end has those outside values are eliminated, the boundary rows of
A 2 have the neat 1 and \Gamma1.
c 6
Att. >= 310.6215 dB Mirr Att. >= 320.1639 dB Stopband Att. >= 9.9559 dB Cod.
Normalized Frequency
Magnitude
Response

Figure

1: The eight DCT-2 vectors and their Fourier transforms (absolute values).
I believe that this DCT-2 (often just called the DCT) should be in applied mathematics
courses along with the DFT. Figure 1 shows the eight basis vectors (when
the right are the Fourier transforms of those vectors. Maybe you can see the first curve
especially its second lobe, rising to 13 decibels (which is
the top. This is not a big dropoff! Like the closely connected Gibbs phenomenon, it does
not improve as N increases. A good lowpass filter can drop by 40 or 50 db. The other seven
transforms vanish at zero frequency (no leakage of the direct current DC term). Those
seven vectors are orthogonal to (1;
This basis was chosen for the JPEG algorithm in image compression. Each 8 \Theta 8 block in
the image is transformed by a two-dimensional DCT. We comment below on the undesirable
blocking artifacts that appear when the transform coefficients are compressed.
DCT-3: The vectors cos j
are the discrete analogues of cos(k+ 1
)x. The Neumann
condition at the left and Dirichlet condition at the right are centered at meshpoints.
For orthogonality we need the
3 that divides the first components by
2. This
basis loses to the DCT-4.
DCT-4: We had never seen the final entry "3" in the matrix A 4 but MATLAB insisted it
was right. Now we realize that a zero boundary condition at a midpoint gives uN - \Gammau N \Gamma1
(the extension is antisymmetric). Then \Gamma1, 2, \Gamma1 becomes \Gamma1, 3. The eigenvectors are
even at the left end and odd at the right end. This attractive property leads to
2 and
2 and a symmetric eigenvector matrix C 4 . Its applications to "lapped transforms" are
described below.
Remember our proof of orthogonality! It is a verification that the cosine vectors are
eigenvectors of A 1 , A 2 , A 3 , A 4 . For all the \Gamma1, 2, \Gamma1 rows this needs to be done only
once (and it reveals the eigenvalues There is an irreducible minimum of
trigonometry when the jth component of the kth vector c k is cos j' in Types 1 and 3, and
Types 2 and 4:
This is on all interior rows. The angle is
for
Type 2. It is
for A 3 and A 4 . This leaves only the first and last components
of k to be verified in each case.
Let us do only the fourth case, for the last row \Gamma1, 3 of the symmetric matrix A 4 . A
last row of \Gamma1, 1 would subtract the component from the
Trigonometry gives those components as
sin 1'
sin 3'
We subtract using sin a \Gamma sin
. The difference is
\Gamma2 cos
sin 1'
The last row of A 4 actually ends with 3, so we still have 2 times the last component
to include with (2):
sin2
This is just - k times the last component of c k . The final row of A 4 c
There are also Discrete Sine Transforms DST-1 through DST-4. The entries of the basis
vectors s k are sines instead of cosines. These s k are orthogonal because they are eigenvectors
of symmetric second difference matrices, with a Dirichlet (instead of Neumann) condition at
the left boundary. In writing about the applications to signal processing [9], we presented
a third proof of orthogonality-which simultaneously covers the DCT and the DST, and
shows their fast connection to the DFT matrix of order 2N . This is achieved by a neat
matrix factorization given by Wickerhauser [11]:
e \Gamma-i=4N R T F 2N
The entries of S 4 are sin(j
. The connection matrix R is very sparse, with
R =p-
with
R T and F 2N and R have orthogonal columns, so do C 4 and S 4 .
5. Cosine Transforms with
2 and N + 1There are four more combinations of the discrete boundary conditions. Every combination
that produces a symmetric matrix will also produce (from the eigenvectors of that matrix)
an orthogonal transform. But you will see 1in the denominators of the
cosines, because the distance between centers is no longer an integer. One center is a
midpoint and the other is a meshpoint.
The transforms DCT-5 to DCT-8, when they are spoken of at all, are called "odd."
They are denoted by DCT-IO to DCT-IV O in [5] and [7]. Three of the tridiagonal matrices
are quite familiar:
Centers
Centers
Components cos
A 6 =6 6 6 6 4
Centers
Centers
Components cos
We could study A 8 by reflection across the left boundary, to produce the pure Toeplitz \Gamma1,
2, (which is my favorite example in teaching). The eigenvectors become discrete
sines on a double interval-almost. The length of the double interval is not 2N , because
the matrix from reflection has odd order. This leads to the new "period length"
2 in
the cosines.
Notice that A 5 has the boundary conditions (and eigenvector components) in reverse
order from A 6 . The first eigenvectors of A 5 and A 6 are (1; corresponding to
This "flat vector" can represent a solid color or a fixed intensity by itself (this
is terrific compression). The DCT-5 and DCT-6 have a coding gain that is completely
comparable to the DCT-2.
So we think through the factors that come from D
2). The symmetrized
2 in the two lower right entries, where A 6 has \Gamma1 and \Gamma2. The
last components of the eigenvectors are divided by
2; they are orthogonal but less beau-
tiful. We implement the DCT-6 by keeping the matrix C 6 with pure cosine entries, and
accounting for the correction factors by diagonal matrices:2N diag
6 diag
The cosine vectors have squared length 2N \Gamma1
4 , except the all-ones vector that is adjusted
by the first diagonal matrix. The last diagonal matrix corrects the Nth components as D 6
requires. The inverse of C 6 is not quite C T
6 (analysis is not quite the transpose of synthesis,
as in an orthogonal transform) but the corrections have trivial cost. For
the matrix identity (4) involves cos 1-
2 and cos 3
Malvar has added a further good suggestion: Orthogonalize the last vectors
against the all-ones vector. Otherwise the DC component (which is usually largest) leaks
into the other components. Thus we subtract from each c 6
(with k ? its projection onto
the flat c 6
~
c 6
The adjusted basis vectors are now the columns of e
C 6 , and (5) becomes
This replacement in equation (4) also has trivial cost, and that identity becomes e
e
The coefficients in the cosine series for x are
6 x. Then x is reconstructed from e
(possibly after compressing y). You see how we search for a good basis.
Transforms 5 to 8 are not used in signal processing. The half-integer periods are a
disadvantage, but reflection offers a possible way out. The reflected vectors have an integer
"double period" and they overlap.
6. Convolution
The most important algebraic identity in signal processing is the convolution rule. A slightly
awkward operation in the time domain (convolution, from a Toeplitz matrix or a circulant
becomes beautifully simple in the frequency domain (just multiplication). This
accounts for the absence of matrices in the leading textbooks on signal processing. The
property of time invariance (delay of input simply delays the output) is always the starting
point.
We can quickly describe the rules for doubly infinite convolution and cyclic convolution.
A vector h of filter coefficients is convolved with a vector x of inputs. The output is
with no boundary and x in the cyclic (periodic) case:
Those are matrix-vector multiplications On the whole line (n 2 Z) the doubly
infinite matrix H is Toeplitz; the number h k goes down its kth diagonal. In the periodic
case (n 2 ZN ) the matrix is a circulant; the kth diagonal continues with the same h k onto
the diagonal. The eigenvectors of these matrices are pure complex exponentials.
So when we switch to the frequency domain, the matrices are diagonalized. The eigenvectors
are the columns of a Fourier matrix, and F \Gamma1 HF is diagonal. Convolution with h becomes
multiplication by the eigenvalues H(!) in the diagonal matrix:
ji
The infinite case (Discrete Time Fourier Transform) allows all frequencies j!j -. The
cyclic case (DFT) allows the N roots of w 1. The multiplications in (7) agree with
the convolutions in (6) because e \Gammaikx e . The question is:
What convolution rule goes with the DCT?
A complete answer was found by Martucci [5]. The finite vectors h and x are symmetrically
extended to length 2N or 2N \Gamma 1, by reflection. Those are convolved in the ordinary
cyclic way (so the double length DFT appears). Then the output is restricted to the original
N components. This symmetric convolution h   s x corresponds in the transform domain to
multiplication of the cosine series.
The awkward point, as the reader already knows, is that a symmetric reflection can
match u \Gamma1 with u 0 or u 1 . The centering can be whole sample or half sample at each
boundary. The extension of h can be different from the extension of x! This confirms again
that discrete problems have an extra degree of complexity beyond continuous problems.
(And we resist the temptation to compare combinatorics and linear algebra with calculus.)
In the continuous case, we are multiplying two cosine expansions. This corresponds to
symmetric convolution of the coefficients in the expansions.
7. The DCT in Image Processing
Images are not infinite, and they are not periodic. The image has boundaries, and the
left boundary seldom has anything to do with the right boundary. A periodic extension
can be expected to have a discontinuity. That means a slow decay of Fourier coefficients
and a Gibbs oscillation at the jump - the one place where Fourier has serious trouble!
In the image domain this oscillation is seen as "ringing." The natural way to avoid this
discontinuity is to reflect the image across the boundary. With cosine transforms, a double
length periodic extension becomes continuous.
A two-dimensional image may have (512) 2 pixels. The gray level of the pixel at position
(i; is given by an integer x(i; (between 0 and 255, thus 8 bits per pixel). That long
vector x can be filtered by x   h, first a row at a time (j fixed) and then by columns (using
the 1D transforms of the rows). This is computationally and algebraically simplest: the 2D
Toeplitz and circulant matrices are formed from 1D blocks.
Similarly the DCT-2 is applied to rows and then to columns; 2D is the tensor product
of 1D with 1D. The JPEG compression algorithm (established by the Joint Photographic
Experts Group) divides the image into 8 \Theta 8 blocks of pixels. Each block produces 64 DCT-2
coefficients. Those 64-component vectors from the separate blocks are compressed by the
quantization step that puts coefficients into a discrete set of bins. Only the bin numbers
are transmitted. The receiver approximates the true cosine coefficient by the value at the
middle of the bin (most numbers go into the zero bin). Figures 2-5 show the images that
the receiver reconstructs at increasing compression ratios and decreasing bit rates:
1. The original image (1:1 compression, all 8 bits per pixel)
2. Medium compression (8:1, average 1 bit per pixel)
3. High compression (32:1, average 1
4 bit per pixel)
4. Very high compression (128:1, average 1bit per pixel)
You see severe blocking of the image as the compression rate increases. In teleconferencing at
a very low bit rate, you can scarcely recognize your friends. This JPEG standard for image
processing is quick but certainly not great. The newer standards allow for other transforms,
with overlapping between blocks. The improvement is greatest for high compression.
One personal comment on quantization: This more subtle and statistical form of round-off
should have applications elsewhere in numerical analysis. Numbers are not simply
rounded to fewer bits, regardless of size. Nor do we sort by size and keep only the largest
(this is thresholding, when we want to lose part of the signal - it is the basic idea in
denoising). The bit rate is controlled by the choice of bin sizes, and quantization is surprisingly
cheap. Vector quantization, which puts vectors into multidimensional bins, is more
expensive but in principle more efficient. This technology of coding is highly developed [3]
and it must have more applications waiting to be discovered.
A major improvement for compression and image coding was Malvar's extension of the
ordinary DCT to a lapped transform. Instead of dividing the image into completely separate
blocks for compression, his basis vectors overlap two or more blocks. The overlapping has
been easiest to develop for the DCT-4, using its even-odd boundary conditions-which the
DCT-7 and DCT-8 share. Those conditions help to maintain orthogonality between the
tail of one vector and the head of another. The basic construction starts with a symmetric
lowpass filter of length 2N . Its coefficients are modulated (shifted in
frequency) by the DCT-4:
The kth basis vector has jth component p(j) cos
.
There are N basis vectors of length 2N , overlapping each block with the next block. The
1D transform matrix becomes block bidiagonal instead of block diagonal. It is still an
orthogonal matrix [4, 9] provided each j. This is Malvar's
Modulated Lapped Transform, which is heavily used by the Sony mini disc and Dolby AC-3.
(It is included in the MPEG-4 standard for video.) We naturally wonder if this MLT basis
is also the set of eigenvectors for an interesting symmetric matrix. Coifman and Meyer
found the analogous construction [2] for continuous wavelets.
The success of any transform in image coding depends on a combination of properties-
mathematical, computational, and visual. The relation to the human visual system is
decided above all by experience. This article was devoted to the mathematical property of
orthogonality (which helps the computations). There is no absolute restriction to second
difference matrices, or to these very simple boundary conditions. We hope that the eigenvector
approach will suggest more new transforms, and that one of them will be fast and
visually attractive.
Web Links
JPEG http://www.jpeg.org/public/jpeglinks.htm
compression-faq/top.html (includes source code)
Author http://www-math.mit.edu/-gs/



--R

IEEE Trans.
Remarques sur l'analyse de Fourier
Digital Coding of Waveforms
Signal Processing with Lapped Transforms
Symmetric convolution and the discrete sine and cosine transforms

Diagonalizing properties of the discrete cosine transforms
The search for a good basis
Wavelets and Filter Banks
The discrete W-transform
Adapted Wavelet Analysis from Theory to Software
Eigenvalues and eigenvectors of finite difference matrices
--TR

--CTR
Bozhan Zhechev, Invariant spaces and cosine transforms DCT - 2 and DCT - 6, Proceedings of the 5th international conference on Computer systems and technologies, June 17-18, 2004, Rousse, Bulgaria
Bozhan Zhechev, The discrete cosine transform DCT-4 and DCT-8, Proceedings of the 4th international conference conference on Computer systems and technologies: e-Learning, p.260-265, June 19-20, 2003, Rousse, Bulgaria
Alexander Olshevsky , Vadim Olshevsky , Jun Wang, A comrade-matrix-based derivation of the eight versions of fast cosine and sine transforms, Contemporary mathematics: theory and applications, American Mathematical Society, Boston, MA, 2001
Angelika Bunse-Gerstner , Valia Guerra-Ones , Humberto Madrid de La Vega, An improved preconditioned LSQR for discrete ill-posed problems, Mathematics and Computers in Simulation, v.73 n.1, p.65-75, 6 November 2006
David J. Gorsich , Marc G. Genton , Gilbert Strang, Eigenstructures of spatial design matrices, Journal of Multivariate Analysis, v.80 n.1, p.138-165, January 2002
David J. Gorsich , Marc G. Genton, On the discretization of nonparametric isotropic covariogram estimators, Statistics and Computing, v.14 n.2, p.99-108, April 2004
Emrah Kilic , Dursun Tasci, Factorizations and representations of the backward second-order linear recurrences, Journal of Computational and Applied Mathematics, v.201 n.1, p.182-197, April, 2007
Ira S. Moskowitz , LiWu Chang , Richard E. Newman, Capacity is the wrong paradigm, Proceedings of the 2002 workshop on New security paradigms, September 23-26, 2002, Virginia Beach, Virginia
fast direct method for solving the two-dimensional Helmholtz equation, with Robbins boundary conditions, Contemporary mathematics: theory and applications, American Mathematical Society, Boston, MA, 2001
