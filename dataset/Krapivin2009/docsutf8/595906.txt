--T
Communication across Viewpoints.
--A
A case situation arising in a normal interaction among people is the
baseline for discussing properties of the theory of viewpoints. In
particular we consider how to ensure agreement on the meaning of certain
utterances by agents who have different perspectives on the situation, while
maintaning other knowledge as private. We argue that communication should be
modeled as adding facts to the common knowledge of agents. We introduce the
principle of referent sharing in communications and argue that common
knowledge resulting from communication should only use constants whose
referent is manifest to the parties involved.
--B
Introduction
When several agents interact, their understanding of each other behaviour depends on some common
knowledge they all share as well as on assumptions about each other private knowledge. The
question arises then of how such common knowledge comes about. Communication between agents
seems to involve two aspects: ensuring that they all understand the subjects of their sentences and
becoming all aware that the information has been transferred.
The first aspect requires that the "referents" in communications be shared. The second entails that
communication not only involves transfer of knowledge from one agent to another but also extends
their common knowledge. These two facts together imply that common knowledge resulting from
communication should only use constants whose referent is "manifest" to the parties involved.
We explore these issues in the framework of the theory of viewpoints [2, 4, 5]. This theory was
conceived as a general and unified formalism for expressing several varieties of relativised
beliefs contexts, situations, truth, partitioning a knowledge base in microtheories and so on. Each
of these notions can be represented through viewpoints whose specific properties are captured by
axioms, added to the basic theory in order to characterise those viewpoints [26].
The theory of viewpoints is a reflective first order logic which amalgamates object and metalanguage
by using names for each term and statement of the language and which contains an axiomatisation
of provability in the style of natural deduction. Reflection rules provide the link between object and
metalanguage and lead to a non conservative but consistent extension of first order logic; these rules
have been carefully formulated in order to avoid paradoxes arising from self referential sentences,
which trickle in by diagonalisation [20].
Viewpoints denote sets of sentences which represent the assumptions of a theory. A statement of
the form in(
where vp is a viewpoint expression, is interpreted as "statement A is entailed
by the assumptions denoted by vp in the current interpretation" 1 .
The motivations and properties of the theory of viewpoints differ in several important respects from
existing proposals and formal accounts of contexts [18, 13, 25, 7, 8].
In the formal system by Buva-c and Mason for example [8], the semantics of ist(c; p), to be read as
"it is true in context c that p", is essentially (language restrictions apart) entailment: the semantics
associates to a context a set of models and p is assessed to be true in such models. As a consequence
a context will have complete information of what is true in other contexts:
Moreover the context structure, at least in the quantified version [9], is flat, according to their own
In the theory of viewpoints, since they are meant also for modeling belief contexts, the perspective
of observation is important: the fact that something holds in a viewpoint does not imply that "the
fact that it holds" is true in any other viewpoint. Therefore the property
is not desired and is not valid. To achieve this, the semantics provided for in is not entailment
but rather contextual entailment, so that the viewpoint vp 1
is resolved (interpreted) with respect
to the context where it appears (i.e. vp 2
rather than in a global context. This means that the
viewpoint expression vp 1
in the antecedent might denote a different set of assumptions from the
set of assumptions denoted by the vp 1
in the consequent. Note however that:
is valid, since contextual entailment ensures that viewpoint expressions at different levels of nesting
are interpreted coherently: the entailment is in fact restricted to a subclass of all models, those
"coherent" with the current context in the interpretation of the viewpoint expressions.
As an additional consequence the rules for entering and exiting a context have to preserve the
nesting of contexts, as argumented in [6] and as in the propositional version of the theory of
contexts by Buva-c and Mason [7, 8] but unlike in their quantified version [9].
The expressivity we require calls for implicitly defined viewpoints and a syntactic treatment of in,
so that self referential and mutually referential viewpoints can be defined. In many real applications
1 The notation 0
is an abbreviation for a term denoting sentence A. The naming device is not important in this
paper; we will feel free to drop quotes inside in when there is no risk of ambiguities.
contexts cannot be characterised explicitly by listing the complete set of assumptions. This is also
an issue raised by McCarthy when he suggests that contexts are to be considered rich objects [18].
Therefore, in addition to viewpoints expressed by means of sentence names, we also allow for
viewpoint constants and functions and rely on a partial characterisation by means of axioms stating
what holds in a viewpoint. In particular one can express the rules for the derivation of facts of type
vp). Examples of such assertions are lifting rules [18], which relate two separate viewpoints;
for example it is possible to state that whenever a formula satisfying some condition holds in a
viewpoint vp 1
then a related formula holds in viewpoint vp 2
As a special case, we can state that vp 1
subsumes vp 2
This allows for compact statements of problems and leaves to the logic machinery the burden
of extracting statement present in viewpoints as necessary during proofs from the rules which
charaterise them.
Note that the possibility of quantification over sentences inside the in operator, excluded in modal
logics, is essential to this aim; hence our choice of a syntactic treatment of the in operator.
Another important characteristic of the theory of viewpoints is that it is a reflective theory, as
opposed to a stratification of theories as in [27, 12], despite the troubles created by paradoxes. This
allows expressing facts which simply cannot be stated without the use of self referential viewpoints.
Here are some examples.
"John believes that he has a false belief " [21]
"Agent a believes that whatever he and agent b believe is true, while b does not believe so"
"Agent a and agent b have common knowledge (or belief) that p"
Note that to faithfully represent common knowledge it is not enough to state that both agents
know p, but it is also necessary to express that they know that they know p, that they know that
they know that they know
The possibility of recursive fedinitions of viewpoints (for example through lifting axioms or in
particular "auto-lifting" axioms such as CK-3) and of expressing self referential viewpoints leads
to non finite viewpoints.
2 Syntax and proof theory
The logic of viewpoints has the syntax of classical first order logic, extended with the statements
is the name of a statement and vp can be:
1. a finite set of statement names: f 0 A 0; 0 A 0; :::; 0 A 0
2. a viewpoint term, consisting of a viewpoint function and a list of terms. A viewpoint function
of no argument is a viewpoint constant.
For each symbol s of the language (either variable, function, predicate or viewpoint), we denote by
its name. Names for terms and literals are obtained through an appropriate naming schema as
in [5].
In the following we use the convention that A, B are metavariables for statements, 0 A 0 , are
quoted statements while vp; vp 1
are metavariables for viewpoints, i.e. expressions denoting
sets of sentences. To simplify the notation, we will sometimes use vp;
for sets of sentences
or, in the case of finite viewpoints, for the sentence which is the conjunction of the sentences
in the viewpoint. It should be clear from the context which is the intended meaning for such
meta-variables.
The proof theory for viewpoints can be conveniently presented in the style of natural deduction.
2.1 Inference rules for classical natural deduction
As customary, the notation \Gamma ' A indicates the pending assumptions \Gamma in the proof of A in
rules where some of the assumptions are discharged, like in the cases of implication introduction
and negation introduction. When the pending assumptions are the same in the antecedent and
consequent of a rule they are omitted.
The rules for natural deduction are quite standard. For example:
(- E)
are the rules for conjunction introduction and elimination, respectively, and
E)
are the rules for implication introduction and elimination. The full set of classical rules used is
presented in [6].
2.2 Metalevel axioms
The behaviour of in is characterised by the following axioms and inference rules, which allow classical
reasoning to be performed inside any viewpoint, and at any level of nesting.
The first axiom asserts that all the sentences which constitute a viewpoint hold in the viewpoint
itself, while the second states monotonicity of viewpoints.
An additional axiom establishes a principle which could be called positive introspection, if we choose
an epistemic interpretation for in.
(Positive introspection)
2.3 Metalevel inference rules
The following are the rules of reflection and proof in context for the theory of viewpoints: they
are more powerful than classical reflection and reification rules, but still safe from paradoxes as
discussed in [4].
(Reflection)
We have argued elsewhere for the usefulness of such a strong version of reflection [4], [5].
The metalevel should have the same inferencing capabilities of the object level. This could be
provided by means of one meta-inference rule for each classical object level inference rule, as
described in [5], or, more succintly, through the following rule of proof in context, together with a
meta-rule for implication introduction, which could be regarded as a principle of decontextualisation
[13]. Axiom1 and Axiom2 are also necessary to allow for classical reasoning in any viewpoint.
(Proof in context)
where the vp 1
in the antecedent is a finite set of sentences and the vp 1
in the consequent should be
read as the conjunction of the formulae in vp 1
. The notation 'C stands for classically derivable or
derivable without using reflection and positive introspection.
(Decontextualisation)
The converse rule of contextualisation is a derived rule:
The rule of proof in context asserts that a classical proof can be performed in any viewpoint
provided the premises of the proof are in the viewpoint. Notice that the consequent of the rule is
still a classical derivation, therefore the rule can be applied repeatedly, to carry out a proof at any
level of nesting within viewpoints. Therefore, if A 'C B then:
A corollary of proof in context is the following:
Theorem 1 in(
logical theorem A of classical natural deduction and for any view-point
vp.
Proof in context is more powerful and a much more useful rule than classical reification when
working with implicit viewpoints [6]. Classical reification is also a derived rule:
vp 'C A
(Reification)
2.4 Entering and exiting contexts
A useful mechanism when performing proofs in context is the ability to switch contexts and perform
natural deduction proofs within viewpoints. The safest way to interpret context switching in the
framework of natural deduction proofs with pending assumptions and implicit contexts is simply
to go one level deeper or shallower in nesting, or in other words unnesting and nesting.
This means for instance that in order to prove a statement of the form
one may pretend to move inside vp 1
, and perform a proof using available facts of the form
). If the formula A is itself of the form in(
one will have to go one level deeper to
prove B by using this time just facts of the form in(
In [6] we introduced a box notation for natural deduction proofs and viewpoints, making visible
the structure of dependencies and nested viewpoints in contextual reasoning. The notation is an
extension of the box notation introduced by Kalish and Montague [16].
For example, the following schema corresponds to the inference rule of negation introduction and
should be read as: "if assuming A a contradiction is reached, then :A is proved".
A (assum.)
The box notation is useful to visualise the scope of the assumptions made during a natural deduction
proof. In performing a proof within a box one can use facts proved or assumed in the same box or
in enclosing boxes. Facts cannot be exported from within a box to an enclosing or unrelated box.
For proofs in context we introduce a different kind of box, with a double border, to suggest boundaries
which are more difficult to traverse. The double box represents a viewpoint, i.e. a theory,
whose assumptions, if known, are listed in the heading of the box. If the assumptions are not
known the name of the viewpoint is shown. The only two rules for carrying facts in and out of a
double box are the rules corresponding to unnesting and nesting.
Importing a fact in a viewpoint:
vp
A
Exporting a fact from a viewpoint:
vp
A
(nesting)
The only way to import a fact A in a double box vp is to have a statement in(
in the environment
immediately outside the box. Symmetrically one can obtain in(
in the environment
immediately outside a double box vp if A appears in a line immediately inside the double box (not
inside a further single or double box within the double box). Note that to import a fact into a
nested double box the rule of unnesting must be applied repeatedly.
According to Axiom1, the assumptions of a viewpoint can also be used inside the viewpoint:
The main problem in providing a semantics to a reflective theory is to decide which truth value to
assign to statements of the form R , F ( 0 :R 0 ), which can be built by diagonalisation. Solutions
proposed in the context of logics for truth, can be a source of inspiration.
Kripke's account of truth [17] is based on Kleene's three valued logic. In his model the law of
excluded middle holds, while the principle of bivalence does not: in(
does not hold whenever
A is a classical tautology, like B - :B. A counterexample is R - :R, where R is a paradoxical
sentence. The solution by Perlis [21] also does not preserve the principle of bivalence.
We adopt therefore a different solution based on the idea of reaching a stable truth value for a
formula through an iterative process of revision as in Gupta-Herzberger semantic theory [14, 15].
We however retain the notion of truth and validity which Gupta-Herzberger leave undeterminate
for some statements.
An adequate semantics must avoid to sanction dangerous formulae. For example in consistent
reflective theories, a T axiom like
is often allowed, but in this case the reification rule (called necessitation in the context of modal
logics) must be restricted so that
is not derivable. Its derivation in fact would immediately lead to an inconsistent theory [20]. The
same argument applies to the reified positive introspection.
Another problem is accounting for positive introspection, which is a useful principle for our pur-
poses, without also having to admit the slightly different, stronger
which is not desirable and in fact cannot be proved in our theory. As a consequence, an interpretation
of in as straightforward entailment or derivability is not satisfactory. Our answer to this
problem is an interpretation of in as contextual entailment , i.e. entailment restricted to a subclass
of all models, to ensure that viewpoints at different levels of nesting are interpreted coherently.
We want to interpret in(t 1
in a certain model M, as entailment of t 1
from t 2
, i.e. that whenever
holds, then t 1
holds. However M establishes an interpretation for viewpoint functions some
of which may appear in t 1
; we must ensure that the same interpretation is used in evaluating t 1
Consider for instance:
When examining the validity of the consequent, we are already restricted to models where vp is
a viewpoint which entails A. Therefore, when we consider whether vp entails in(
must
carry over this restriction, and in fact we conclude that in all such models A is entailed by vp.
The interpretation of in as contextual entailment rests upon the notion of coherence of models. We
say that two models are coherent with respect to a viewpoint expression vp when they agree on the
interpretation given to the viewpoint constants and functions appearing in vp; formally:
Coherence is a reflexive, symmetric and transitive relation between models.
An interpretation structure M for the theory of viewpoints is a pair hD; Ii defined as follows:
1. The domain of interpretation D contains also the set of statements S of the language.
2. I associates an n-ary function f I : D n ! D, to each n-ary function symbol f of the language,
except the syntax constructors, i.e. those functions that we use to name sentences and terms
of the language, whose interpretation is fixed.
3. I associates to each n-ary predicate symbol p of the language, an n-ary predicate p I ' D n .
4. I associates to each n-ary viewpoint function vp, a function vp I : D n ! RecSubs(S); the
recursive subsets of S.
Terms are interpreted with respect to an assignment function g, which assigns elements of D to
variables. The interpretation of terms is classical except for naming terms, whose interpretation is
the term or statement they name. In particular:
In short we could write, for any term t without variables:
For each formula A, means that A is true in the interpretation M with assignment function
g. The notation g[i=x] represents the assignment function identical to g except that x is bound to
i.
For the interpretation of statements we proceed by defining the notion of true at level n. For
statements which do not contain variables quantified across in statements, the level corresponds to
the level of nesting of in statements. A statement with a nesting level of n will receive its definitive
truth value at level n; while paradoxical statements, to which no finite level of nesting can be
assigned, will keep oscillating periodically between true and false.
At level 0, all statements are considered false: not
M;g A.
For any n ? 0:
M;g (:A) iff not
M;g A
M;g A and
M;g A or
M;g (8x:A) iff for all d in D, 9k:
M;g[d=x] A
The truth of in statements at level n is defined on the basis of the truth at level n \Gamma 1. The
interpretation of in is contextual entailment , i.e. entailment restricted to a subclass of all models,
to ensure that viewpoints at different levels of nesting are interpreted coherently.
such that (N j t 2
M), not
or
In most cases, this process of revision stabilises in the sense that the truth value of statements settles
to either true or false from a certain level onward. There are however paradoxical statements, like
the counterpart of the liar statement, which do not stabilise at any finite level of revision but
continue to oscillate between different truth values. To such statements false will be assigned as
ultimate truth value.
A statement is said to be stably true accordingly to whether or not the revision process stabilises:
M;g A
Stable truth is however too coarse, since all statements which do not stabilise are considered false:
therefore for any such statement R both R and :R would be false. One further step is necessary
to distinguish among the statements which do not stabilise.
The notion of truth is classical except for in statements which relies on stable
Validity is defined as usual:
The notation vp j= A means that A is true in every model of vp.
We can verify that our semantics has the required properties.
Note. The law of excluded middle holds both at the object level:
A - :A
and at the metalevel:
However this does not imply that in(
which would be undesirable since it would
sanction the completeness of any viewpoint.
Consider the formula R, such that R , in(
which corresponds to the Liar sentence. The
paradox is avoided since the Liar sentence is false in every model:
We summarise a few relevant properties of our semantics:
1.
M A implies A but not vice versa.
2. in(
3. (in( 0 A
4. in(
is not valid.
5. in(
vp) is not valid.
6. in(
7. in(
) is not valid.
4 Sharing of referents in communication
We will illustrate with an example several features of the theory of viewpoints and how to reason
in it. The example is meant to illustrate several issues related to the modeling of communications
among agents holding different viewpoints about the same state of affairs and in particular using
different expressions to denote the objects of interest.
One morning Beppe told Maria about the following dream.
You and me are traveling by train, and you have both our tickets. I go to the toilet.
After my return the ticket inspector passes and asks for unchecked tickets.
I do nothing, since I know that you have my ticket. You do nothing since you have
already shown both tickets to the inspector while I was away. The inspector does not
remember seeing my ticket and therefore he asks me for it. At this point I ask you why
you do not show the ticket to the inspector.
We will attempt a formalisation of the reasoning of each agent involved in the situation described
above at different times, providing a rational account for the agent's behaviour.
In the reasoning by the inspector and by Maria, they both assume knowing certain information
about each other. Each one should have obtained such information through the transaction that
happened between them when Maria showed the tickets to the inspector. The transaction should
be modeled in such a way that some information flows from one agent to the other and that both
agents become aware not only of the transaction but also that the other is aware of the information
conveyed in the transaction.
The proper way to model the effect of a communication act is by extending the common knowledge
of the participants. The effect is not only that some information is added to the knowledge of
the recipients of the communication, but also that the recipients' awareness of such information
enriches the viewpoint of the originator of the communication, and the recipients become aware of
this and so on.
Communication also raises a problem about terms and denotations: i.e. which constants should be
used in the formalisation of the communicated knowledge. For instance, in the interaction between
Maria and the inspector while Beppe is away, how can Maria refer to Beppe? In our solution we
decided that she can't refer to Beppe directly, since she has no way to ensure that her reference to
Beppe will be the same as the one of the inspector.
The only things to which she can refer in her interaction with the inspector are what we call
"manifest constants", i.e. constants to which she can point directly (for instance because they are
objects in the scene), or indirectly through terms built upon other manifest constants (for instance
Husband-of(M), or Person-sitting(there)). We could even use Person-named("Beppe"), since the
name "Beppe" is part of the common vocabulary, however the referent of such name may not be
the same in all viewpoints.
Quine speaks about "observations terms", which are terms that are or can be taught by ostension,
and whose application in each particular case can therefore be checked intersubjectively [24].
Learning, and in particular language learning, is predicated on observation terms and hence on
ostension: as children learning the language, we get on to various simple terms and key phrases by
direct association with appropriate experiences. When we have progressed a bit with this kind of
learning, we learn further usages contextually [23].
We require that any statement expressing common knowledge between two agents, gained as a result
of a communication, only uses manifest constants: we call this the principle of referent sharing in
communicating knowledge.
Therefore in the example, the transaction between Maria and the inspector will be expressed by
means of the manifest constant ticket2 which refers to the actual ticket that Maria hands over to
the inspector. If we were to use T icket(B), where B is the constant denoting Beppe, we would
unduly transfer Maria's knowledge that Beppe's ticket has been checked to the viewpoint of the
inspector.
A different approach would be not to worry about terms used in the communication and rely on
a theory which provides for different denotations of terms in different contexts, as for example the
theories of context discussed by Buva-c, Guha and McCarthy.
5 Formalisation of Beppe's dream
The following notation will be used in the formalisation of the example introduced above.
B: Beppe
Beppe's viewpoint at time t
Maria's viewpoint at time t
vp(C; t): the ticket inspector's viewpoint at time t
knowledge of the set of agents denoted by x at time t;
in the example we will use All for everybody,
BM for Beppe and Maria and MC for Maria and the inspector;
Has(x;
shows ticket y to the inspector at time t;
ticket x has been checked.
Common knowledge of a set of agents plays a significant role in this example and we express it as
one theory for lifting axioms provided for each involved agent to access it. A general formulation
of common knowledge which will serve the purpose of the example, is the following.
Axioms for common knowledge:
to be used in conjunction with the following:
Axioms (1) and (2) provide a proper account of common knowledge to a group of agents, allowing
to derive the commonly known facts in any viewpoint, no matter how nested. In particular axiom
(2) is used to achieve the appropriate level of nesting in CK, and axiom (1) to lift from the CK
viewpoint at time t to any other relevant viewpoint at time t.
For example assuming:
(a)
it is possible to derive
which will appear in the proof as line (33), with the following steps:
(c) in(in(Has(M; Ticket(B)); vp(M; t 3
(d) in(in(Has(M; Ticket(B)); vp(M; t 3
To be more concise, we will skip similar derivation steps from common knowledge from now on.
The specific knowledge of the problem can be expressed as follows:
Both Beppe and Maria know that Maria has both tickets, at any time;
Corresponds to the common sense knowledge that only one person can hold a given object.
Next we need axioms to describe Maria's act of showing the tickets to the inspector and its effect,
i.e. the information conveyed in that act. They deserve some discussion.
In formalising the information flow one must avoid that also unintended information be transferred
between viewpoints.
For example, one might express as follows the fact that once Maria has shown her tickets, the
inspector checks them and thereafter they both know that they have been checked:
Maria knows that she has shown both tickets at time t 0
Maria knows that the second ticket is Beppe's;
It is common knowledge that after Maria has shown a ticket, at any later time she and the
inspector know that the ticket has been checked.
However this solution has a flaw: applying the law of substitutivity in Maria's viewpoint, Maria
knows that Shows(M; ticket2; t 0
therefore she can con-
clude, for instance, that in(Checked(Ticket(B)); vp(C; t 3 )). The effect is therefore that she unduly
transfers her information about ticket2 being Beppe's ticket to the viewpoint of the inspector.
The solution is then to separate the information flow from the conclusion that each agent is able
to draw from the information gathered.
First, we state that showing the ticket is common knowledge of both Maria and the inspector. This
is the information that is actually transmitted.
Maria and the inspector know that she has shown both tickets at time t 0
while the first ticket
can be referred to as Maria's ticket the second one is simply ``a second ticket'' in the common
knowledge viewpoint;
Maria knows that the second ticket is Beppe's (while the inspector doesn't);
The first statement uses ticket2 and cannot use T icket(B) since this is not a manifest constant and
is therefore forbidden by the principle of referent sharing in a statement on common knowledge.
And now we allow each agent to draw his own conclusion about which tickets have been checked:
It is common knowledge of Maria and the inspector that after Maria has shown a ticket, the
ticket has been checked.
Using these statements, we can easily prove the following two lemmas that will be used in the
formal account of the reasoning. The first lemma, corresponds to the fact that Maria knows that
her ticket and Beppe's have been checked by the inspector.
The second lemma, that will be used in Maria's reasoning, corresponds to the fact that she knows
that the inspector is aware of having checked her ticket and a second one, referred to as ticket2.
in particular, the following facts that Maria will use in her reasoning, can also be proved in viewpoint
while it is not the case that the inspector, nor Maria reasoning about the inspector, can deduce:
Finally we formalise the first request from the inspector (the request to show unseen tickets), which,
at time t 1
, becomes part of common knowledge in the following form:

Figure

1 summarises the axioms that have been used in the statement of the problem.
We can now proceed to give a formal account of the reasoning of the different agents at the different
times involved.
This is the reasoning in Beppe's viewpoint, at time t 1

Figure

1: Problem statement
Maria has my ticket;
I do not have my ticket;
Since I do not have a ticket the request from the inspector does not apply to me.
I do not have to show my ticket.
Therefore Beppe does nothing. Maria reasons as follows at the same time.
The inspector has already checked our tickets;
The request of the inspector does not apply to Beppe's ticket;
I do not have to show Beppe's ticket;
The request of the inspector does not apply to my ticket;
I do not have to show my ticket.
Therefore also Maria has good reasons for doing nothing. After this, at time t 2
, the common
knowledge is enriched as follows for the fact that nobody shows any ticket:
Moreover we have the fact that the inspector doesn't remember seeing Beppe's ticket, which is part
of the statement of the problem; this however is not common knowledge but it is asserted outside
any viewpoint.
Reasoning about the inspector in the external viewpoint, where the problem has been stated, and
including axioms (1)-(10) plus axiom (21).
the inspector notices, as anybody, that nobody shows Beppe's ticket at time t 1
he reasons that either the ticket has been checked or nobody has Beppe's ticket.
Assume the inspector believes that somebody has Beppe's the ticket;
he should at least believe that Beppe's ticket has been checked; but he doesn't by (21),
therefore:
the inspector cannot deduce that somebody has Beppe's ticket.
This same reasoning can be performed by the inspector himself, provided we postulate the addi-
tional, and reasonable, assumption that he is aware of the fact that he doesn't remember. This can
be made explicit in the statement of the problem or alternatively derived from (21) by negative
introspection (assuming this is a valid principle in general).
a realisation by the inspector of the fact that he cannot tell whether somebody has Beppe's
ticket.
As a consequence he asks Beppe to show his ticket. It is now common knowledge, at time t 3 , that
the inspector does not know whether somebody has Beppe's ticket.
Beppe now, at time t 3
The inspector does not know whether somebody has my ticket;
Assume the inspector thinks that he has seen my ticket;
He should also believe that somebody has my ticket, but he doesn't by (30);
therefore he does not believe that my ticket has been checked;
Maria knows that she did not show my ticket when asked;
Maria knows that she has the ticket;
Maria is aware of what the inspector said;
Maria believes that my ticket has been checked.
Therefore Beppe notices a difference between the inspector's viewpoint and Maria's viewpoint (lines
33 and 37); that's why he asks Maria why she doesn't show his ticket.
Finally, solicited by the request of the inspector and, further, from Beppe himself, Maria reasons
The inspector is not aware of the fact that he checked Beppe's ticket
(similar to Beppe's reasoning above).
but he certainly remembers having checked a second ticket;
he doesn't realize that the second ticket is Beppe's one
(otherwise there would be a contradiction).
she decides that in order to resolve the question she must tell the inspector that the second
ticket is Beppe's one. This goes a little beyond Beppe's dream, but it looks like a plausible reason
of the fact that the inspector does not remember: Maria, showing both tickets Beppe being absent
could not refer to Beppe as the owner of the second ticket.
6 Technical points about this example
The reasoning performed by the agents involved in the situation described by the example is simple
and intuitive, yet it appears that its formal account has some requisites in terms of expressivity of
the logical representation language to make it an interesting case study. In the following we will
discuss additional aspects of the proposed formalisation.
6.1 Viewpoint functions
We have several agents (Maria, Beppe, the inspector) and several times corresponding to situations
with different knowledge involved. We use vp(a; t), a viewpoint function denoting the viewpoint
of agent a at time t; the example shows the importance of viewpoint functions with variables
quantified in; this way it is possible to express, for example, that a certain fact holds from a certain
time on, or, if necessary, that there is a time when a fact holds.
6.2 Propagation of ignorance
The inspector does not remember having checked Beppe's ticket, and as a consequence he makes
everybody aware of the fact that he does not know whether Beppe has a ticket, and as a further
consequence Maria can realize that the inspector does not know that the second ticket he has seen
is Beppe's ticket.
Note that in the example we do not deal with deduction of ignorance from the fact somebody cannot
deduce something, a property which is in general undecidable in a first order setting (see [1, 10] for
examples of this approach). In other words ignorance in not "introduced" but only "propagated".
All we do is to use a much more conservative and sound pattern of reasoning for propagation of
ignorance, namely: if we have :in(A; vp) and we want to prove :in(B; vp), we can assume in(B; vp)
and try to prove in(A; vp); if this succeeds, we have succeeded in proving :in(B; vp).
In other words the following is a sound rule of inference:
(Propagation of Ignorance)
6.3 Viewpoint consistency is an option
In the example we do not deal with nonmonotonic aspects such as changes of mind, assumptions by
default, resolving contradictions, and so on. In this problem once a piece of knowledge is acquired
in a viewpoint it is also assumed to hold in successive viewpoints in time.
Dealing with nonmonotonic aspects would require writing problem dependent axioms stating what
changes and what doesn't from one viewpoint to the next in time.
In this respect some of the ideas presented in connection with the step/active logics by Perlis and
co-authors look promising [22, 19]. As an example we could exploit their approach to resolving
contradictions, once they manifest explicitly, by failing to inherit to the next step contradicting
assumptions.
This can be done since consistency of viewpoints is an option: the axiom :in(false; vp) does not
hold in general; a viewpoint can become inconsistent without affecting other viewpoints nor the
global reasoning context. This means that in the presence of a contradictory viewpoint, without the
consistency axiom, the inconsistency does not propagate outside and one can consistently reason
about it and adopt the best strategy available to create a new consistent viewpoint.
7 Implementation of viewpoints
The implementation of the Omega description logic [3] provided a viewpoints mechanism which
emphasised a hierarchical organisation of viewpoints. Viewpoints, as the other descriptions of
the Omega system, could be arranged in a lattice, where a viewpoint inherited from another by
including all the sentences belonging to it. Thereafter a viewpoint would inherit all the logical
consequences from its ancestor viewpoints. This proved useful for instance to create viewpoints
describing a basic theory (e.g. natural deduction), from which more specific viewpoints could be
created by adding new statements.
A new implementation of the theory of viewpoints is in progress using the Coq Proof Assistant
which supports the development of higher order logics [11]. The logical language used by Coq is a
variety of type theory, called the Calculus of Inductive Constructions.
The -calculus notation can be used as a uniform encoding for expressions, assertions and proofs.
Type checking rules enforce well-formedness conditions. According to the Curry-Howard isomor-
phism, assertions are represented as types and proofs are represented as terms whose type is the
formula they prove. Proving a formula is therefore seen as exhibiting a term of a given type (proving
constructively that the type is populated).
For defining a new logic system one has to provide:
1. a definition of wff's: by defining a signature for terms and formulas;
2. a definition of the logical axioms: asserting the existence of constants, whose type is the
formula corresponding to the axiom schema;
3. a definition of the inference rules: asserting the existence of constants, of functional type,
mapping the premises into the conclusions;
Using the higher order features of the language the naming device used for reifying sentences at
the metalevel and for the formulation of the reflection rules is greatly simplified: sentences are
represented as terms at any level.
An important task will be to prove that the presentation of the logic (by means of a specific
signature) is adequate in the sense that the encoding is a compositional bijection between the
syntactic entities (terms, formulas, proofs) of the logical system and certain valid -terms in the
signature. In particular we will have to prove that the higher order does not introduce any additional
theorems.
8 Conclusion
We have discussed properties of a theory of viewpoints which extends a classical natural deduction
calculus with sentences of the type in(A; vp) and with axioms and inference rules for contextual
reasoning.
We argued that an appropriate formalisation of the effect of communication acts is to extend the
common knowledge of the participants with statements which can only contain terms made out of
manifest constants, so that referent sharing is ensured.



--R

Reasoning about Knowledge and Ignorance
Metalanguage and reasoning across viewpoints
A Description Oriented Logic for Building Knowledge Bases
Reflections about reflection
A formalisation of viewpoints
Proofs in context
Propositional Logic in Context
Metamathematics of Contexts
Quantificational Logic of Context
Agent Reasoning with Belief Contexts: the Approach and a Case Study
The Coq Proof Assistant

Contexts: A Formalization and Some Applications
Truth and paradox
Notes on naive semantics
Logic: techniques of formal reasoning
Outline of a theory of truth
Notes on Formalizing Context
Context Shifts and Clashes in Dialogues: An Active Logic Perspective
Syntactical treatment of modalities
Languages with self-reference I: foundations
Reasoning Situated in Time I: Basic Concepts
On Mental Entities
Linguistics and Philosophy
Varieties of contexts
Viewpoints subsume belief
Prolegomena to a theory of mechanized formal reasoning
--TR

--CTR
Richard W. Weyhrauch , Marco Cadoli , Carolyn L. Talcott, Using Abstract Resources to Control Reasoning, Journal of Logic, Language and Information, v.7 n.1, p.77-101, January 1998
