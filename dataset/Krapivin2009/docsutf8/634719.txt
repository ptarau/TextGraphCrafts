--T
Recurrence equations and their classical orthogonal polynomial solutions.
--A
The classical orthogonal polynomials are given as the polynomial solutions pn(x) of the differential equation (x)y''(x) is a polynomial of at most second degree and (x) is a polynomial of first degree.In this paper a general method to express the coefficients An, Bn and Cn of the recurrence equation in terms of the given polynomials (x) and (x) is used to present an algorithm to determine the classical orthogonal polynomial solutions of any given holonomic three-term recurrence equation, i.e., a homogeneous linear three-term recurrence equation with polynomial coefficients.In a similar way, classical discrete orthogonal polynomial solutions of holonomic three-term recurrence equations can be determined by considering their corresponding difference equation (x)y(x) denote the forward and backward difference operators, respectively, and a similar approach applies to classical q-orthogonal polynomials, being solutions of the q-difference equation denotes the q-difference operator.
--B
Introduction
Families of orthogonal polynomials p n (x) (corresponding to a positive-definite measure) satisfy
a three-term recurrence equation of the form
with C n A n A e.g. [6, p. 20]. Moreover, Favard's theorem states that the converse
is also true.
On the other hand, in practice one is often interested in an explicit solution of a given
recurrence equation. Therefore it is an interesting question to ask whether a given recurrence
equation has classical orthogonal polynomial solutions.
In this paper an algorithm is developed which answers this question for a large class
of classical orthogonal polynomial systems. Furthermore, we present results of our corresponding
Maple implementation retode and compare these with the Maple implementation
rec2ortho of Koornwinder and Swarttouw [13]. These programs overlap, but rec2ortho
does not cover Bessel, Hahn and q-polynomials, whereas retode does not include the Meixner-
case.
Classical Orthogonal Polynomials
A family
of polynomials of degree exactly n is a family of classical continuous orthogonal polynomials
if it is the solution of a differential equation of the type
is a polynomial of at most second order and
is a polynomial of first order ([4], [14]). Since one demands that p n (x) has exact degree n,
by equating the coefficients of x n in (3) one gets
Similarly, a family p n (x) of polynomials of degree exactly n, given by (2), is a family of
classical discrete orthogonal polynomials if it is the solution of a difference equation of the
type
where
denote the forward and backward difference operators, respectively, and
and are again polynomials of at most second and of first order, respectively,
see e.g. [19]. Again, (4) follows.
Finally, a family p n (x) of polynomials of degree exactly n, given by (2), is a family of
classical q-orthogonal polynomials if it is the solution of a q-difference equation of the type
where
denotes the q-difference operator [7], and are again
polynomials of at most second and of first order, respectively. By equating the coefficients
of x n in (6) one gets
where the abbreviation
denotes the so-called q-brackets. Note that lim q!1
It can be shown (see e.g. [15]) that any solution p n (x) of either (3), (5) or (6) satisfies a
recurrence equation (1).
The following is a general procedure to find the coefficients of the recurrence equation (as
well as of similar structural formulas for classical orthogonal polynomials, see [11]) in terms
of the coefficients a; b; c; d and e of oe(x) and -(x):
1. Substitute p n
in the differential equation (3), in
the difference equation (5) or in the q-difference equation (6), respectively.
2. Equating the coefficients of x n yields - n , given by (4) and (7), respectively.
3. Equating the coefficients of x
respectively, as rational
multiples of k n .
4. Substitute p n (x) in the proposed equation, and equate again the three highest coeffi-
cients. In the case of the recurrence equation (1), this yields
and
e
by linear algebra.
5. Substituting the values of k 0
n given in step (3) in these equations yields the
three unknowns in terms of a; b; c; d; e; n; k
With regard to the recurrence equation coefficients, we collect these results in
Theorem 1 Let p n family of polynomial solutions of the
differential equation (3). Then the recurrence equation (1) is valid with
and
in terms of the coefficients a; b; c; d and e of the given differential equation.
family of polynomial solutions of the difference
equation (5). Then the recurrence equation (1) is valid with
and
in terms of the coefficients a; b; c; d and e of the given difference equation.
family of polynomial solutions of the q-difference
equation (6). Then the recurrence equation (1) is valid with
a
a
and
in terms of the coefficients a; b; c; d and e of the given q-difference equation. 2
3 The Inverse Characterization Problem
It is well-known ([4], see also [5], [14]) that polynomial solutions of (3) can be classified
according to the zeros of oe(x), leading to the normal forms of Table 1 besides linear transformations
x 7! Ax+B. The type of differential equation that we consider is invariant under
such a transformation.
family
1.
2. 1 \Gamma2x H n (x) Hermite polynomials
3. x \Gammax
5.

Table

1: Normal Forms of Polynomial Solutions
This shows that the only orthogonal polynomial solutions are linear transforms of the
Hermite, Laguerre, Bessel and Jacobi polynomials (for details see e.g. [11]), hence using a
mathematical dictionary one can always deduce the recurrence equation. Note, however,
that this approach except than being tedious may require the work with radicals, namely
the zeros of the quadratic polynomial oe(x), whereas our approach is completely rational:
Given k n+1 =k n 2 Q(n), the recurrence equation is given rationally by Theorem 1.
Moreover, Theorem 1 represents the recurrence equation by a unique formula. It is valid
also in the cases of Table 1:1 and 4a, with the trivial solution p In both cases we
have the recurrence equation p n+1
Now, we will use the fact that these equations are given explicitly to solve an inverse
problem.
Assume one knows that a polynomial system satisfies a differential equation (3). Then
by the classification of Table 1 it is easy to identify the system. On the other hand, given
an arbitrary holonomic three-term recurrence equation
it is less obvious to find out whether there is a polynomial
system
satisfying (15), being a linear transform of one of the classical systems (Hermite, Laguerre,
Jacobi, Bessel), and to identify the system in the affirmative case. In this section we present
an algorithm for this purpose. Note that Koornwinder and Swarttouw [13] have also considered
this question and in their Maple implementation rec2ortho propose a solution based
on the careful ad hoc analysis of the input polynomials q n ; r n ; and s n . Their Maple implementation
deals with the following families: Hermite, Charlier, Laguerre, Meixner-Pollaczek,
Meixner, Krawtchouk, and Jacobi.
Let us start with a recurrence equation of type (15). Without loss of generality we assume
that neither q has a nonnegative integer zero w.r.t. n. Otherwise, a suitable
shift can be applied, see Algorithm 1 and Example 1.
Therefore, in the sequel we assume that the recurrence equation
is valid, but neither q nonnegative integer
zeros. We search for solutions
Next, we divide (16) by q n (x), and replace n by n \Gamma 1. This brings (16) into the form
For being a linear transform of a classical orthogonal system, there is a recurrence
equation (1)
therefore (18) and (19) must agree. We would like to conclude that t n
This follows if we can show that p n (x)=p x). For a proof of this
assertion, see [10].
Therefore we can conclude that t n Hence if (18)
does not have this form, i.e., if either t n (x) is not linear in x or u n (x) is not a constant
with respect to x, we see that p n (x) cannot be a linear transform of a classical orthogonal
polynomial system. In the positive case, we can assume the form (19).
Since we propose solutions (17), equating the coefficients of x n+1 in (19) we get
(v
Hence the given A generates the term ratio k n+1 =k n . In particular k n turns
out to be a hypergeometric term, (i.e., k n+1 =k n is rational,) and is uniquely determined by
(20) up to a normalization constant k the zeros of w n are a subset of the
zeros of q is defined by (20) for all n 2 N from k 0 .
In the next step we can eliminate the dependency of k n by generating a recurrence
equation for the corresponding monic polynomials e
. For e p n (x), we get by
e
A n
e
e
e
with
e
A n
Then our formulas (9)-(10) read in terms of e
e
d)
and
e
\Gamman d)
(a
and these are independent of k n by construction.
Now we would like to deduce a; b; c; d and e from (21)-(22). Note that as soon as we have
found these five values, we can apply a linear transform (according to the zeros of oe(x)) to
bring the differential equation in one of the normal forms of Table 1 which finally gives us
the desired information.
We can assume that e
C n are in lowest terms. If the degree of either the numerator
or the denominator of e
B n is larger than 2, then by (21) p n (x) is not a classical system.
Similarly, if the degree of either the numerator or the denominator of e
C n is larger than 4, by
(22) the same conclusion follows.
Otherwise we can multiply (21) and (22) by their common denominators, and bring them
therefore in polynomial form. Both resulting equations must be polynomial identities in the
variable n, hence all of their coefficients must vanish. This gives a nonlinear system of
equations for the unknowns a; b; c; d and e. Any solution of this system with not both a
and d being zero yields a differential equation (3), and hence given such a solution one can
characterize it via Table 1. Therefore our question can be resolved in this case. In particular,
if one of the cases Table 1.1 or 1.4a applies, then there are no orthogonal polynomial solutions.
If the nonlinear system does not have such a solution, we deduce that no such values
a; b; c; d and e exist, hence no such differential equation is satisfied by p n (x), implying that
the system is not a linear transformation of a classical orthogonal polynomial system.
Hence the whole question boils down to decide whether the given nonlinear system has
nontrivial solutions, and to find these solutions in the affirmative case. As a matter of
fact, with Gr-obner bases methods, this question can be decided algorithmically ([16]-[18]).
Such an algorithm is implemented, e.g., in the computer algebra system REDUCE [17], and
Maple's solve command can also solve such a system.
Note that the solution of the nonlinear system is not necessarily unique. For example,
the Chebyshev polynomials of the first and second kind T n (x) and U n (x) satisfy the same
recurrence equation, but a different differential equation. We will consider this example in
more detail later.
If we apply this algorithm to the recurrence equation p n+2 of the power
generates the complete solution set, given by Table 1:1 and 1:4a.
The following statement summarizes the above considerations.
Algorithm 1 This algorithm decides whether a given holonomic three-term recurrence
equation has shifted, linear transforms of classical orthogonal polynomial solutions, and
returns their data if applicable.
1. Input: a holonomic three-term recurrence equation
2. Shift: Shift by
nonnegative integer zero
is a zero of q
3. Rewriting: Rewrite the recurrence equation in the form
If either t n (x) is not a polynomial of degree one in x or u n (x) is not constant with respect to
x, then return "no orthogonal polynomial solution exists"; exit.
4. Standardization: Given now A
define
(v
according to (20).
5. Make monic: Set
e
A n
and bring these rational functions in lowest terms. If the degree of either the numerator or the
denominator of e
B n is larger than 2, or if the degree of either the numerator or the denominator
of e
C n is larger than 4, return "no classical orthogonal polynomial solution exists";
exit.
6. Polynomial
e
d)
and
e
d)
(a
using the as yet unknowns a; b; c; d and e. Multiply these identities by their common denom-
inators, and bring them therefore in polynomial form.
7. Equating Coefficients: Equate the coefficients of the powers of n in the two resulting
equations. This results in a nonlinear system in the unknowns a; b; c; d and e. Solve this
system by Gr-obner bases methods. If the system has no solution or only one with
then return "no classical orthogonal polynomial solution exists"; exit.
8. Output: Return the classical orthogonal polynomial solutions of the differential equations
(3) given by the solution vectors (a; b; c; d; e) of the last step, according to the classification
of

Table

1, together with the information about the standardization given by (20). This
information includes the density
ae(x)
e
R -(x)
(see e.g. [14]), and the supporting interval through the zeros of oe(x). 1 2
Remark Assume that a given recurrence equation contains parameters. Then our implementation
determines for which values of the parameters there are orthogonal polynomial
solutions, by solving not only for a; b; c; d and e, but moreover for those parameters.
Example 1 As a first example, we consider the recurrence equation
1 If the zeros of oe(x) are not real, then these orthogonal polynomials are not positive-definite. The Bessel
system is never positive-definite [2].
we see that the shift p n (x) := P n+1 (x) is necessary, i.e. (23). For
we have the recurrence equation
In the first steps this recurrence equation is brought into the form
hence
and therefore
Moreover, for monic e
e
hence e
1. The polynomial identities concerning e
C n of step 5 of the
algorithm yield
At this point we have already determined
Hence possible classical orthogonal polynomial solutions of (24) are defined in the interval
In the first of the above cases, i.e. for and the differential equation
corresponding to the density
e
R -(x)
The corresponding orthogonal polynomials are multiples of translated Chebyshev polynomials
of the first kind
(see e.g. [1],

Table

22.2, and (22.5.11); C n (x) are monic, but C
hence finally
In the second of the above cases, i.e. for one gets the equation
a
with two possible solutions that give the differential equations
and
They correspond to the densities
r
and
r
respectively, hence the orthogonal polynomials are multiples of the Jacobi polynomials
Finally, in the third of the above cases, i.e. for
corresponding to the density
e
R -(x)
The corresponding orthogonal polynomials are multiples of translated Chebyshev polynomials
of the second kind
(see e.g. [1],

Table

22.2, and (22.5.13); S n (x) are monic, see also Table 22.8), hence
U
We see that the recurrence equation (24) has four different (shifted) linearly transformed
classical orthogonal polynomial solutions!
Using our implementation, these results are obtained by
strict:=true:
Warning: several solutions found
@
@x
@
@x
@
@x
@x
which gives the corresponding differential equations, the intervals and densities, as well as
the the term ratio k n+1 =k
With Koornwinder-Swarttouw's rec2ortho, these results are obtained by the statements
rec2ortho((n+2)/(n+1),0,n/(n+1)), rec2ortho((n+2)/(n+1),0,n/(n+1),4,0),
rec2ortho((n+2)/(n+1),0,n/(n+1),2,-1), and rec2ortho((n+2)/(n+1),0,n/(n+1),2,1),
respectively. Note that here the user must know the initial values to determine possible orthogonal
polynomial solutions, whereas our approach finds all possible solutions at once.
Example 2 As a second example, we consider the recurrence equation
depending on the parameter ff 2 R. Here obviously the question arises whether or not
there are any instances of this parameter for which there are classical orthogonal polynomial
solutions. In step 6 of Algorithm 1 we therefore solve also for this unknown parameter. This
gives a slightly more complicated nonlinear system, with the unique solution
ae
oe
Hence the only possible value for ff with classical orthogonal polynomial solutions is
in which case one gets the differential equation
with density
in the interval [\Gamma1=2; 1], corresponding to linearly transformed Laguerre polynomials.
Using our implementation, these results are obtained by
strict:=false:
Warning : parameters have the values;
[2
@
@x
With Koornwinder-Swarttouw's rec2ortho, this result can also be obtained. On the other
hand, the Bessel polynomials are not accessible with Koornwinder-Swarttouw's rec2ortho.
4 Classical Discrete Orthogonal Polynomials
In this section, we give similar results for classical orthogonal polynomials of a discrete
variable (see Chapter 2 of [19]). The classical discrete orthogonal polynomials are given by
a difference equation (5).
family
1. 1 ff x
translated Charlier
2a. x 0 x n falling factorial
3. x - (fl
4. x p
pols.
5.
pols.

Table

2: Normal Forms of Discrete Polynomials
These polynomials can be classified similarly as in the continuous case according to
the functions oe(x) and -(x); up to linear transformations the classical discrete orthogonal
polynomials are classified according to Table 2 (compare [19], Chapter 2). In particular, case
(2a) corresponds to the non-orthogonal solution x n in Table 1. Similarly as for the powers
d
dx
the falling factorials x n :=
It turns out that they are connected with the Charlier polynomials by the limiting process
lim
\Gamman
where we used the hypergeometric representation given in [19, (2.7.9)].
Note, however, that other than in the differential equation case the above type of difference
equation is not invariant under general linear transformations, but only under integer
shifts. We will have to take this under consideration.
The classical discrete orthogonal polynomials satisfy a recurrence equation (1)
with A given by Theorem 1.
Similarly as in the continuous case, this information can be used to generate an algorithm
to test whether or not a given holonomic recurrence equation has classical discrete orthogonal
polynomial solutions. Obviously the first three steps of this algorithm agree with those given
in Algorithm 1.
Algorithm 2 This algorithm decides whether a given holonomic three-term recurrence
equation has classical discrete orthogonal polynomial solutions, and returns their data if
applicable.
1. Input: a holonomic three-term recurrence equation
2. Shift: Shift by maxfn 2 N 0 jn is zero of either q necessary.
3. Rewriting: Rewrite the recurrence equation in the form
If either t n (x) is not a polynomial of degree one in x or u n (x) is not constant with respect to
return "no orthogonal polynomial solution exists"; exit.
4. Linear Transformation: Rewrite the recurrence equation by the linear transformation
x 7! x\Gammag
f
with (as yet) unknowns f and g.
5. Standardization: Given now A
define
(v
according to (8).
6. Make monic: Set
e
A n
and bring these rational functions in lowest terms. If the degree of either the numerator or
the denominator of e
B n is larger than 2, if the degree of the numerator of e
C n is larger than
6, or if the degree of the denominator of e
C n is larger than 4, then return "no classical
discrete orthogonal polynomial solution exists"; exit.
7. Polynomial Identities: Set
e
according to (11), and
e
according to (12), in terms of the unknowns a; b; c; d; e; f and g. Multiply these identities by
their common denominators, and bring them therefore in polynomial form.
8. Equating Coefficients: Equate the coefficients of the powers of n in the two resulting
equations. This results in a nonlinear system in the unknowns a; b; c; d; e; f and g. Solve this
system by Gr-obner bases methods. If the system has no solution, then return "no classical
discrete orthogonal polynomial solution exists"; exit.
9. Output: Return the classical orthogonal polynomial solutions of the difference equations (5)
given by the solution vectors (a; b; c; d; e; f; g) of the last step, according to the classification
given in Table 2, together with the information about the standardization given by (8). This
information includes the necessary linear transformation g, as well as the discrete
weight function ae(x) given by
ae(x)
(see e.g. [19]).
Proof: The proof is an obvious modification of Algorithm 1. The only difference is that
we have to take a possible linear transformation fx into consideration since the difference
equation (5) is not invariant under those transformations. This leads to step 4 of the
algorithm. 2
Note that an application of Algorithm 2 to the recurrence equation p n+2
which is valid for the falling factorial p n generates the difference
equation x\Deltarp n of Table 2:2a.
Example 3 We consider again the recurrence equation (31)
depending on the parameter ff 2 R. This time, we are interested in classical discrete orthogonal
polynomial solutions.
According to step 4 of Algorithm 2, we rewrite (31) using the linear transformation
x 7! x\Gammag
f
with as yet unknowns f and g. Step 5 yields the standardization
=f
In step 8, we solve the resulting nonlinear system for the variables fa; b; c; d; e; f; resulting
in
ae
d
d
d
oe
This is a rational representation of the solution. However, since we assume ff to be arbitrary,
we solve the last equation for b. This yields
which cannot be represented without radicals. Substituting this into (32) yields the solution
ae
d
oe
d and e being arbitrary. It turns out that for ff ! 1=4 this corresponds to Meixner or
Krawtchouk polynomials.
With Koornwinder-Swarttouw's rec2ortho, this result can be also obtained. Moreover,
rec2ortho determines that for ff ? 1=4 one gets Meixner-Pollaczek polynomials. These
polynomials are not accessible by our approach.
Example 4 Here we want to discuss the possibility that a given recurrence equation might
have several classical discrete orthogonal solutions. Whereas the recurrence equation of the
Hahn polynomials h (ff;fi)
(x; N) has (besides several linear transformations) only this single
classical discrete orthogonal solution, the case results in two essentially different
solutions.
Here one has the recurrence equation
An application of Algorithm 2 shows that this recurrence equation corresponds to the two
different difference equations
and
Using our implementation, these results are obtained by
strict:=true:
Warning : parameters have the values;
ag
Warning : parameters have the values;
ag
Warning: several solutions found
Note that Hyperterm(upper,lower,z,x) denotes the hypergeometric term (= summand)
of the hypergeometric function hypergeom(upper,lower,z) with summation variable x, see
[9].
Hahn polynomials are not accessible with Koornwinder-Swarttouw's rec2ortho.
5 Classical q-Orthogonal Polynomials
In this section, we consider the same problem for classical q-orthogonal polynomials ([7],
[12], see e.g. [8]). The classical q-orthogonal polynomials are given by a q-difference equation
(6).
These polynomials can be classified similarly as in the continuous and discrete cases according
to the functions oe(x) and -(x); up to linear transformations the classical q-orthogonal
polynomials are classified according to Table 3.
family
1.
2.
3. pols.
4. 1 a+1\Gammax
(a)
pols.
5. x xq+a+q
7. x
pols.
8.
9.
pols.
alternative q-Charlier pols.
11.
pols.
12.
pols.
13.
U (a)
pols.
14.
15. (q

Table

3: Normal Forms of q-Polynomials
For the sake of completeness we have included all families from [8], Chapter 3, although
they overlap in several instances. The non-orthogonal polynomial solutions are the powers
x n and the q-Pochhammer functions
The classical q-orthogonal polynomials satisfy a recurrence equation (1)
with A given by Theorem 1.
Similarly as in the continuous and discrete cases, this information can be used to generate
an algorithm to test whether or not a given holonomic recurrence equation has classical q-
orthogonal polynomial solutions.
Algorithm 3 This algorithm decides whether a given holonomic three-term recurrence
equation has classical q-orthogonal polynomial solutions, and returns their data if applicable

1. Input: a holonomic three-term recurrence equation
2. Shift: Shift by maxfn 2 N 0 jn is zero of either q necessary.
3. Rewriting: Rewrite the recurrence equation in the form
If either t n (x) is not a polynomial of degree one in x or u n (x) is not constant with respect to
return "no q-orthogonal polynomial solution exists"; exit.
4. Linear Transformation: Rewrite the recurrence equation by the linear transformation
x 7! x\Gammag
f
with (as yet) unknowns f and g.
5. Standardization: Given now A
define
(v
6. Make monic: Set
e
A n
and bring these rational functions in lowest terms. If the degree (w.r.t N := q n ) of the
numerator of e
B n is larger than 3, the degree of the denominator of e
B n is larger than 4, the
degree of the numerator of e
C n is larger than 7, or the degree of the denominator of e
C n is
larger than 8, then return "no classical q-orthogonal polynomial solution exists";
exit.
7. Polynomial Identities: Set
e
according to (13), and
e
according to (14), in terms of the unknowns a; b; c; d; e; f and g. Multiply these identities by
their common denominators, and bring them therefore in polynomial form.
8. Equating Coefficients: Equate the coefficients of the powers of in the two resulting
equations. This results in a nonlinear system in the unknowns a; b; c; d; e; f and g. Solve this
system by Gr-obner bases methods. If the system has no solution, then return "no classical
q-orthogonal polynomial solution exists"; exit.
9. Output: Return the q-classical orthogonal polynomial solutions of the q-difference equations
given by the solution vectors (a; b; c; d; e; f; g) of the last step, according to the classification
given in Table 3, together with the information about the standardization given by
(8). This information includes the necessary linear transformation as well as the
q-discrete weight function ae(x) given by
ae(qx)
ae(x)
Proof: The proof is an obvious modification of Algorithms 1 and 2. 2
Example 5 We consider the recurrence equation
depending on the parameter ff 2 R. This time, we are interested in classical q-orthogonal
polynomial solutions.
According to step 4 of Algorithm 3, we rewrite (31) using the linear transformation
x 7! x\Gammag
f
with as yet unknowns f and g. Step 5 yields the standardization
=f
In step 8, we solve the resulting nonlinear system for the variables fa; b; c; d; e; f; resulting
in the following nontrivial solution
that corresponds-for 1-to the q-difference equation
x
Hence for every ff 2 R and every scale factor f there is a q-classical solution that corresponds
to q-Hermite I polynomials, see Table 3, which have real support for ff ! 0.
Using our implementation, these results are obtained by
Warning : parameters have the values;
ae(x)
Note that q-polynomials are not accessible with Koornwinder-Swarttouw's rec2ortho.
Note
The Maple implementation retode, and a worksheet retode.mws with the examples of this
article can be obtained from http://www.imn.htwk-leipzig.de/~koepf/research.html.

Acknowledgment

The first named author thanks Tom Koornwinder and Ren'e Swarttouw for helpful discussions
on their implementation rec2ortho [13]. Examples 2 and 4 given by recurrence equation
were provided by them. Thanks to the support of their institutions I had a very pleasant
and interesting visit at the Amsterdam universities in August 1996.



--R

Handbook of Mathematical Functions.
The Bessel polynomials.
A set of orthogonal polynomials that generalize the Racah coefficients or 6-j symbols

On polynomial solutions of a class of linear differential equations of the second order.
An Introduction to Orthogonal Polynomials.

The Askey-scheme of hypergeometric orthogonal polynomials and its q-analogue
Hypergeometric Summation.
Algorithms for classical orthogonal polynomials.
Representations of orthogonal polynomials.
Compact quantum groups and q-special functions
rec2ortho: an algorithm for identifying orthogonal polynomials given by their three-term recurrence relation as special functions
Die Charakterisierung der klassischen orthogonalen Polynome durch Sturm- Liouvillesche Differentialgleichungen

Solving polynomial equation systems by Groebner type methods.
Algebraic solution of nonlinear equation systems in REDUCE.
On decomposing systems of polynomial equations with finitely many solutions.
Classical orthogonal polynomials of a discrete variable.
--TR
Representations of orthogonal polynomials
