--T
Closing the smoothness and uniformity gap in area fill synthesis.
--A
Control of variability in the back end of the line, and hence in interconnect performance as well, has become extremely difficult with the introduction of new materials such as copper and low-k dielectrics. Uniformity of chemical-mechanical planarization (CMP) requires the addition of area fill geometries into the layout, in order to smoothen the variation of feature densities across the die. Our work addresses the following smoothness gap in the recent literature on area fill synthesis. (1)The very first paper on the filling problem (Kahng et al., ISPD98 [7]) noted that there is potentially a large difference between the optimum window densities in fixed dissections vs. when all possible windows in the layout are considered. (2)Despite this observation, all filling methods since 1998 minimize and evaluate density variation only with respect to a fixed dissection. This paper gives the first evaluation of existing filling algorithms with respect to "gridless" ("floating-window") mode, according to both the effective and spatial density models. Our experiments indicate surprising advantages of Monte-Carlo and greedy strategies over "optimal" linear programming (LP) based methods. Second, we suggest new, more relevant methods of measuring a local uniformity based on Lipschitz conditions, and empirically demonstrate that Monte-Carlo methods are inherently better than LP with respect to the new criteria. Finally, we propose new LP-based filling methods that are directly driven by the new criteria, and show that these methods indeed help close the "smoothness gap".
--B
INTRODUCTION
Chemical-mechanical planarization (CMP) and other manufacturing
steps in nanometer-scale VLSI processes have
varying effects on device and interconnect features, depending
on the local characteristics of the layout. To improve
manufacturability and performance predictability, foundry
rules require that a layout be made uniform with respect
to prescribed density criteria, through insertion of area fill
(dummy fill) geometries.
All existing methods for synthesis of area fill are based
on discretization: the layout is partitioned into tiles, and
filling constraints or objectives (e.g., minimizing the maximum
density variation) are enforced for square windows that
each consists of r \Thetar tiles. Thus, to practically control layout
density in arbitrary windows, density bounds are enforced in
only a finite set of windows. More precisely, both foundry
rules and EDA physical verification and layout tools attempt
to enforce density bounds within r 2 overlapping fixed dissec-
tions, where r determines the "phase shift" w=r by which
the dissections are offset from each other. The resulting
fixed r-dissection (see Figure 1) partitions the n \Theta n layout
into tiles T ij , then covers the layout by w \Theta w-windows W ij ,
1, such that each window W ij consists of
Two main filling objectives are considered in the recent
literature:
ffl (Min-Var Objective) the variation in window density
(i.e., maximum window density minus minimum window
density) is minimized while the window density
does not exceed the given upper bound U ;
ffl (Min-Fill Objective) the number of inserted fill geometries
is minimized while the density of any window
remains in the given range (L; U ).
Recent methods on area fill synthesis also focused exclusively
on the fixed-dissection context, including:
ffl Linear Programming (LP) methods based on rounding
relaxation of the corresponding integer linear program
formulations. The LP formulations for filling were first
proposed by Kahng et al. in [6] and adapted to other
objectives and CMP models in [12, 13]);
ffl Greedy methods which iteratively find the best tile for
the next filling geometry to be added into the layout.
These methods were first used in [3] for ILD thickness
control, and also used for shallow-trench isolation
(STI) CMP model in [13]);
ffl Monte-Carlo (MC) methods, which are similar to greedy
methods but insert the next filling geometry randomly.
Due to its efficiency and accuracy, these were used for
both flat [3, 4] and hierarchical [2] layout density con-
trol; and
ffl Iterated Greedy (IGreedy) and Iterated Monte-Carlo
methods, which improve the solution quality
by iterating the insertions and deletions of dummy fill
features with respect to the density variation ([3]).
The motivation for our present work is a "smoothness
gap" in the fill literature. All existing filling methods fail to
consider the potentially large difference between extremal
densities in fixed-dissection windows and extremal densities
when all possible windows are considered. On the other
hand, the very first paper in the fill synthesis literature
(Kahng et al., ISPD98 [7]) already pointed out the gap between
fixed-dissection and "gridless" analyses, for both tile
density and window density. 1 The potential consequence
of the smoothness gap is that the fill result will not satisfy
either given upper bounds on post-fill window density,
or given bounds on density variation between windows. As
post-CMP variation for oxide ILD polishing is essentially
monotone in window density variation [11], this smoothness
gap can compromise manufacturability of the layout, particularly
given the small values of r in recent design rules.
We first address the discretization gap in existing analyses
(i.e., evaluations) methods. Previous works compare density
control methods only with respect to a given fixed grid,
which underestimates the actual "gridless" density varia-
tion, but has been justified on grounds that gridless analysis
is impractical. In this paper, we show for the first time the
viability of gridless or floating window analyses, originally
developed for the spatial density model [6], and extend it for
the more accurate effective density model [9]. Second, previous
research in layout density control concentrated on the
global uniformity achieved by minimizing the window density
variation over the entire layout. However, the density
variation between locations which are far from each other
is actually not so critical, in that the pressure/speed of the
polishing pad can be (self-)adjusted during CMP. Thus, we
propose and analyze criteria for "local uniformity" as a measure
of smoothness in filling solutions. We evaluate existing
methods with respect to the new criteria, and we suggest LP-based
methods that directly optimize filling solutions with
respect to smoothness.
The rest of the paper is organized as follows. In Section
2 we show how to apply floating window density analysis
1 Bounding the spatial density in a fixed set of w \Thetaw windows
can incur substantial error, since other windows may still
violate the density bounds [6].
methods (such as extremal-density window and multilevel
density analyses) to spatial and effective density models.
We then give the first "gridless" evaluation of existing filling
algorithms, under the effective as well as spatial density
models. Our experiments indicate surprising advantages of
Monte-Carlo and greedy methods over "optimal" linear programming
(LP) based methods. In Section 3 we introduce
new Lipschitz-like measures for layout smoothness and describe
new LP-based filling methods driven by such mea-
sures. We also compare the results of existing and new filling
approaches, with respect to the new smoothness criteria.
Section 4 concludes with directions for future work.
2. LAYOUT DENSITY ANALYSES
As noted above, for the sake of tractability, previous works
have used fixed dissections to decide the amount and positions
of dummy fill features[6]. A smoothness gap thus exists
because a filling solution based on a fixed-dissection does not
address the true post-filling density variation. Here we first
summarize the two main density models used in the current
literature. We then introduce two extremal-density analysis
algorithms (for spatial and effective density, respectively)
which we use to compute post-fill layout density. Finally, we
evaluate existing filling methods according to (near-)gridless
density variation.
2.1 Density Models for Oxide CMP
We focus on layout density control for (oxide) interlevel
dielectric CMP. 2 Several models have been proposed in [8],
including the model of [10], where the interlevel dielectric
thickness z at location (x; y) is calculated as:
(1)
The crucial element of this model is the determination of the
effective initial pattern density, ae(x; y). The simplest model
for ae(x; y) is the local areal feature density, i.e., the window
density is simply equal to the sum:
area(Tkl ) (2)
where area(Tkl ) denotes the original layout area of the tile
Tkl . This spatial density model is due to [6], which solved
the resulting filling problem using linear programming.
A more accurate model considers the deformation of the
polishing pad during the CMP process [5]: effective local
density ae(x; y) is calculated as the sum of weighted spatial
pattern densities within the window, relative to an elliptical
weighting function:
with experimentally determined constants c0 , c1 , and c2 [12].
The discretized effective local pattern density ae for a window
ij in the fixed-dissection regime (henceforth referred to as
effective density) is:
recent works, particularly by Wong et al., have
studied alternative arenas for dummy fill, including shallow-
trench isolation and dual-damascene copper. For such are-
nas, density calculations and physical polish mechanisms are
different from those in the oxide context. Consideration of
these alternate models is orthogonal to our contribution;
certainly, the concept of a "smoothness gap" applies to all
filling contexts.
arbitrary window W
window
tile
shrunk fixed
dissection window
fixed dissection
bloated fixed
dissection window

Figure

2: An arbitrary floating w \Theta w-window W
always contains a shrunk (r \Gamma 1) \Theta (r \Gamma 1)-window
of a fixed r-dissection, and is always covered by a
bloated (r+1)\Theta(r+1)-window of the fixed r-dissection.
A standard r \Theta r fixed-dissection window is shown
with thick border. A floating window is shown in
light gray. The white window is the bloated fixed-
dissection window, and the dark gray window is the
shrunk fixed-dissection window.
area(Tkl
where the arguments of the elliptical weighing function f
are the x- and y-distances of the tile Tkl from the center of
the window W ij .
2.2 Window Density Analyses
The authors of [6] proposed optimal extremal-density (i.e.,
minimum or maximum window density in the layout) analysis
algorithms. Their ALG1, with complexity O(k is the
number of rectangles in layout), is proposed as a means of
checking the gridless post-filling density variation. However,
with a large number of original and dummy fill features, this
algorithm may be infeasible in practice.
Another method of [6] overcomes the intractability of optimal
extremal-density analysis, based on the following fact
(see Fig. 2).
Lemma 1. Given a fixed r-dissection, any arbitrary w \Theta w
window will contain some shrunk w(1 \Gamma 1=r) \Theta w(1 \Gamma 1=r)
window of the fixed r-dissection, and will be contained in
some bloated w(1 window of the fixed
r-dissection.
The authors of [6] implemented the above Lemma within
a multi-level density analysis algorithm (see Fig. 3). Here
used to denote the required user-defined accuracy in
finding the maximum window density. The lists TILES and
WINDOWS are byproducts of the analysis. Since any floating
w \Theta w-window W is contained in some bloated window,
the filled area in W ranges between Max (maximum w \Theta w-
window filled area found so far) and BloatMax (maximum
bloated window filled area found so far). The algorithm terminates
when the relative gap between Max and BloatMax
is at most 2 \Delta ffl, and then outputs the middle of the range
(Max,BloatMax).
We use this algorithm (with accuracy = 1.5%) throughout
this paper to achieve an accurate, efficient post-filling density
analysis. 3 To handle the effective density model, the
3 For the test cases used in this paper, the runtimes of the
Multi-Level Density Analysis Algorithm
Input: n \Theta n layout and accuracy ffl ? 0
Output: maximum density of w \Theta w window with accuracy ffl
(1) Make a list ActiveTiles of all w=r \Theta w=r-tiles
(3) While Accuracy do
(a) Find all rectangles in w=r \Theta w=r-tiles from ActiveTiles
(b) Find area of each window consisting of tiles from
ActiveTiles, add such window to the list WINDOWS
(c) maximum area of standard window with tiles
from ActiveTiles
maximum area of bloated window
with tiles from ActiveTiles
(e) For each tile T from ActiveTiles which do not belong to
any bloated window of area more than Max do
remove T from ActiveTiles
(f) Replace in ActiveTiles each tile with four of its subtiles
(4) Move all tiles from ActiveTiles to TILES

Figure

3: Multi-level density analysis algorithm.
multi-level density analysis based on bloated and shrunk
windows must be refined somewhat. To obtain more accurate
results, the multi-level density analysis algorithm divides
the r-dissection into smaller grids, so that more windows
will be considered. With the effective density model,
the discretized formulation (effective) shows that effective
local pattern density is dependent on the window size w
and the r-dissection. That is, we have to consider the effect
on the formulation of the further division of layout during
post-filling density analysis. We assume here that the effective
local pattern density is still calculated with the value of
r-dissection used in the filling process. The only difference is
that the windows phase-shift will be smaller. For example,
in

Figure

4(a) we calculate the effective density of the window
shown in light gray by considering 5 \Theta 5 tiles (also called
"cells") during the filling process. In Figure 4(b) the layout
is further partitioned by a factor of 4. The effective density
of the light gray window will be still calculated with the 5 \Theta 5
"cells". Here each "cell" has the same dimension as a tile in
the filling process and consists of 2 \Theta 2 smaller tiles. More
windows (e.g., the window with thick border) with smaller
phase-shifts will be considered in the more gridded layout.
2.3 Accurate Analysis of Existing Methods
Here we compare the performance of existing fill synthesis
methods, using the accurate multilevel floating-window
density analysis. All experiments are performed using part
of a metal layer extracted from an industry standard-cell
layout 4 (Table 2.3). Benchmark L1 is the M2 layer from an
8,131-cell design and benchmark L2 is the M3 layer from a
20,577-cell layout.
multi-level analysis with accuracy = 1:5% appear reason-
able. Our (unoptimized) implementation has the following
runtimes for Min-Var LP solutions and the spatial density
model: L1/32 (45 sec), L1/16 (183 sec), L2/28 (99 sec),
L2/14 (390 sec), For the effective density model, the run-times
are: L1/32 (49 sec), L1/16 (194 sec), L2/28 (109 sec),
4 Our experimental testbed integrates GDSII Stream input,
conversion to CIF format, and internally-developed geometric
processing engines, coded in C++ under Solaris. We use
CPLEX version 7.0 as the linear programming solver. All
runtimes are CPU seconds on a 300 MHz Sun Ultra-10 with
1GB of RAM.
(a) (b)
window
tile
cell

Figure

4: Post-filling density analysis for the effective
density model. (a): a fixed-dissection, where
each window consists of 5 \Theta 5 cells (the same size
as tiles); (b): a fixed-dissection for post-filling density
analysis, where each window consists of
smaller tiles and each cell consists of 2 \Theta 2 tiles.

Table

2 shows that underestimation of the window density
variation as well as violation of the maximum window density
in fixed-dissection filling can be severe: e.g., for the LP
method applied to the case L2/28/4 for the spatial (resp.
effective) density model, the density variation is underestimated
by 210% (resp. 264%) and the maximum density
is violated by 21% (resp. 15%). Even for the finest grid
(L2/28/16), the LP method may still yield considerable er-
ror: 11% (resp. 23%) in density variation and 1.2% (resp.
3.2%) in maximum density violation. Note that the LP
method cannot easily handle a finer grid since the runtime
is proportional to r 6 .
Our comparisons show that the winning method is IMC
and the runner-up is IGreedy. IMC and IGreedy can be run
for much finer grids since its runtime is proportional to r 2
log r). Although for L2/28/16 errors in density
variation and the maximum density violation are similar,
the iterative methods become considerably more accurate.
test case L1 L2
layout size n 125,000 112,000
rectangles k 49,506 76,423

Table

1: Parameters of four industry test cases.
Here 40 units are equivalent to 1 micron.
3. LOCAL DENSITY VARIATION
The main objective of layout filling is to improve CMP
and increase yield. Traditionally, layout uniformity has been
measured by global spatial or effective density variation over
all windows. Such a measure does not take in account that
the polishing pad during CMP can change (adjust) the pressure
and rotation speed according to the pattern distribution
(see [11]). Boning et al. [1] further point out that while the
effective density model is excellent for local CMP effect pre-
diction, it fails to take into account global step heights. The
influence of density variation between far-apart regions can
be reduced by a mechanism of pressure adjustment, which
leads to the contact wear model proposed in [1]. Within each
local region, the area fill can be used to improve the CMP
performance. Therefore, density variation between two windows
in opposite corners of the layout will not cause problems
because of the polishing dynamics. According to the
integrated contact wear and effective density model, only a
significant density variation between neighboring windows
will complicate polishing pad control and may cause either
dishing or underpolishing. Thus, it is more important to
measure density variation between neighboring windows.
3.1 Lipschitz Measures of Smoothness
Depending on the CMP process and the polishing pad
movement relative to the wafer, we may consider different
window "neighborhoods". Below we propose three relevant
Lipschitz-like definitions of local density variation which differ
only in what windows are considered to be neighbors.
ffl Type I: The maximum density variation of every r
neighboring windows in each row of the fixed-dissection.
The intuition here is that the polishing pad is moving
along window rows and therefore only overlapping
windows in the same row define a neighborhood.
ffl Type II: The maximum density variation of every
cluster of windows which cover one tile. The idea here
is that the polishing pad can touch all overlapping windows
almost simultaneously.
ffl Type III: The maximum density variation of every
cluster of windows which cover one square consisting
of r=2 \Theta r=2 tiles. The difference between this and the
previous definition is the assumption that the polishing
pad is moving slowly; if windows overlap but are still
too far from each other, then we can disregard their
mutual influence.
We compared the behaviors of existing filling methods
with respect to these Lipschitz characteristics. The results
in

Table

3 show that there is a gap between the traditional
Min-Var objective and the new "smoothness" objectives:
the solution with the best Min-Var objective value does not
always have the best value in terms of "smoothness" objec-
tives. For the spatial (resp. effective) density model, though
LP yields the best result for the case L2/28/4 with Min-Var
objective with fixed-dissection model, it can not obtain the
best result with respect to Lipschitz type-I variation. Thus,
"smoothness" objectives may be considered separately for
the filling process. We also notice that Monte-Carlo methods
can achieve better solutions than LP with respect to
the "smoothness" objectives (note that although LP is "op-
timal", it suffers from rounding and discreteness issues when
converting the LP solution to an actual filling solution).
3.2 Smoothness Objectives for Filling
Obviously, all Lipschitz conditions are linear and can be
implemented as linear programming formulations. We describe
four linear programming formulations for the "smooth-
ness" objectives with respect to the spatial density model.
(The linear programming formulations for the effective density
model are similar.)
The first Linear Programming formulation for the Min-
Lip-I objective is:
Minimize: L
Subject to:
st
nr
area(T st
st
LP Greedy MC IGreedy IMC
Test case OrgDen FD Multi-Level FD Multi-Level FD Multi-Level FD Multi-Level FD Multi-Level
T/W/r MaxD MinD DenV MaxD DenV DenV MaxD DenV DenV MaxD DenV DenV MaxD DenV DenV MaxD DenV
Spatial Density Model
Effective Density Model

Table

2: Multi-level density analysis on results from existing fixed-dissection filling methods. Notation:
T/W/r: Layout / window size / r-dissection; LP: linear programming method; Greedy: Greedy method;
MC: Monte-Carlo method; IGreedy: iterated Greedy method; IMC: iterated Monte-Carlo method; OrgDen:
density of original layout; FD: fixed-dissection density analysis; Multi-Level: multi-level density analysis;
MaxD: maximum window density; MinD: minimum window density; DenV: density variation.
Test case LP Greedy MC IGreedy IMC
T/W/r LipI LipII LipIII LipI LipII LipIII LipI LipII LipIII LipI LipII LipIII LipI LipII LipIII
Spatial Density Model
Effective Density Model
L1/16/4 4.048 4.333 3.864 5.332 5.619 5.190 3.631 4.166 3.448 3.994 4.254 3.132 4.245 4.481 3.315
L2/28/4 2.882 5.782 4.855 2.694 6.587 6.565 1.498 5.579 5.092 2.702 6.317 5.678 2.532 5.640 4.981

Table

3: Different behaviors of existing filling methods on "smoothness" objectives. Note: All data for
effective density model have been timed by 10 3 . Notation: LipI: Lipschitz condition I; LipII: Lipschitz
condition II; LipIII: Lipschitz condition III.
Here, U is the given upper bound of the effective tile densi-
ties. The constraints (5) imply that features can be added
but not deleted from any tile. The slack constraints (6) are
computed for each tile. The pattern-dependent coefficient
pattern denotes the maximum pattern area which can embedded
in an empty unit square. If a tile T ij is originally
overfilled, then we set slack(T ij In the LP solution,
the values of p ij indicate the fill amount to be inserted in
each tile T ij . The constraint (7) says that no window can
have density greater than than U (unless it was initially over-
filled). The constraints (8) imply that the auxiliary variable
L is an upper bound on all variation between (2r
in the same row.
The second Linear Programming formulation for the Min-
Lip-II objective replaces the constraints (8) with the following
constraints
Here, the auxiliary variables minDen(i; j) and maxDen(i;
are the minimum and maximum tile effective densities in
centered at T i;j . The constraints
above ensure that the density variations among all windows
which cover T i;j is less than the auxiliary variable L.
The Min-Lip-III objective strives to minimize the maximum
density variation of every cluster of windows which
cover one square consisting of k tiles. The constraints
are changed to the following:
r
The constraints (10) ensure that the density variation between
any two windows which cover r \Theta r tiles is less than
the auxiliary variable L.
Finally, in order to consider the "smoothness" objectives
together with the Min-Var objective, we propose another
LP formulation with the combined objective which is the
linear summation of Min-Var, Lip-I, and Lip-II objectives
with specific coefficients.
Minimize: C0   M
Lip-I Constraints (8), Lip-II (9) and Min-Var constraints
are added for the combined objective:
Here, the auxiliary variables LI and LII are the maximum
Lipschitz condition type-I and type-II, and the auxiliary
variable M is a lower bound on all tile densities.
3.3 Computational Experience
We tested the smoothness of filling solutions generated
using the same test cases, with smoothness evaluated using
finest-r density analysis with 64. Runtimes of the
new methods are substantially longer than for the original
Min-Var LP formulation, because many more constraints are
added for each layout window due to the Lipschitz condition
objectives. For example, for L2/28/8 and the spatial den-
Test case Min-Var LP LipI LP LipII LP LipIII LP Comb LP
Spatial Density Model
Effective Density Model

Table

4: Comparison among the LP methods on Min-Var and Lipschitz condition objectives. Notation: Min-
Var LP: LP with Min-Var objective; LipI LP: LP with Min-Lip-I objective; LipII LP: LP with Min-Lip-II
objective; LipIII LP: LP with Min-Lip-III objective; Com LP: LP with combined objective.
sity model, the runtime of Min-Var LP is 6.9 seconds, while
the Lip-I LP runtime is 3.41 seconds, the Lip-II LP runtime
is 994 seconds and the Lip-III LP runtime is 71.4 seconds.
For L2/28/8 and the effective density model, the runtime
of Min-Var LP is 2.3 seconds, while the Lip-I LP runtime
is 708 seconds, the Lip-II LP runtime is 5084 seconds and
the Lip-III LP runtime is 2495 seconds. Since fill generation
is a post-processing step (currently performed in PV tools),
we do not believe that these runtimes are prohibitive. Our
major win is that LP is tractable with Lipschitz objectives
(as opposed to intractable with large values of r). Of course,
finding smoothness objectives that result in smaller LPs is
a direction for future work.
The performances of the new LP formulations with "smooth-
ness" objectives are studied in Table 4. We use the coefficients
(0.4/0.4/0.2) in the combined objective; these values
were derived from the greedy testing of all coefficient combi-
nations. Because of LP's rounding error, 5 some new LPs do
not achieve the best value on certain test cases. From the
comparison between the new LPs and Min-Var LP, it appears
that neither Min-Var LP nor the Lipschitz condition-
derived LPs are dominant. At the same time, when compared
against existing filling methods in Table (3), the new
LP with combined objective normally achieves the best comprehensive
solutions in terms of trading off among the Min-
Den, Lipschitz conditions I and II. Another interesting observation
is that the LP with combined objective can achieve
even smaller density variations than the Min-Var LP. This
shows that the solution qualities of LP methods can be significantly
damaged by rounding effects, and that a better
non-LP method may be possible.
4. CONCLUSIONS&FUTURERESEARCH
To improve manufacturability and performance predictabil-
ity, it is necessary to "smoothen" a layout by the insertion
of "filling (dummy) geometries". In this paper, we pointed
out the potentially large difference between fixed-dissection
filling results and the actual maximum or minimum window
density in optimal density analyses. We compared existing
filling algorithms in gridless mode using the effective as well
as the spatial density models. We also suggested new methods
of measuring local uniformity of the layout based on
Lipschitz conditions and proposed new filling methods based
on these properties. Our experimental results highlight the
advantages of Monte-Carlo and greedy -based methods over
previous linear program based approaches.
5 The desired fill area specified for each tile in the LP solution
must be rounded to an area that corresponds to an an integer
number of dummy fill features.
Ongoing work addresses extensions of multi-level density
analyses to measuring local uniformity ("smoothness") with
respect to other CMP physical models. We also seek improved
methods for optimizing fill synthesis with respect to
our new (and possibly other alternative) local uniformity
objectives.
5.



--R

"Models for Pattern Dependencies: Capturing Effects in Oxide, STI, and Copper CMP"
"Hierarchical Dummy Fill for Process Uniformity"
"Practical Iterated Fill Synthesis for CMP Uniformity"
"New Monte-Carlo Algorithms for Layout Density Control"
"Effect of Fine-line Density and Pitch on Interconnect ILD Thickness Variation in Oxide CMP Process"
"Filling Algorithms and Analyses for Layout Density Control"
"Filling and Slotting: Analysis and Algorithms"
"Modeling of Chemical-Mechanical Polishing: A Review"
"An Integrated Characterization and Modeling Methodology for CMP Dielectric Planarization"
"A Closed-Form Analytical Model for ILD Thickness Variation in CMP Processes"
"Rapid Characterization and Modeling of Pattern Dependent Variation in Chemical Mechanical Polishing"
"Model-Based Dummy Feature Placement for Oxide Chemical Mechanical Polishing Manufacturability"
"Dummy feature placement for chemical-mechanical polishing uniformity in a shallow trench isolation process "
--TR
Filling and slotting
Model-based dummy feature placement for oxide chemical-mechanical polishing manufacturability
Practical iterated fill synthesis for CMP uniformity
Monte-Carlo algorithms for layout density control
Dummy feature placement for chemical-mechanical polishing uniformity in a shallow trench isolation process
Hierarchical dummy fill for process uniformity

--CTR
Hua Xiang , Liang Deng , Ruchir Puri , Kai-Yuan Chao , Martin D.F. Wong, Dummy fill density analysis with coupling constraints, Proceedings of the 2007 international symposium on Physical design, March 18-21, 2007, Austin, Texas, USA
Performance-impact limited area fill synthesis, Proceedings of the 40th conference on Design automation, June 02-06, 2003, Anaheim, CA, USA
Hua Xiang , Kai-Yuan Chao , Ruchir Puri , Martin D.F. Wong, Is your layout density verification exact?: a fast exact algorithm for density calculation, Proceedings of the 2007 international symposium on Physical design, March 18-21, 2007, Austin, Texas, USA
Andrew B. Kahng, Research directions for coevolution of rules and routers, Proceedings of the international symposium on Physical design, April 06-09, 2003, Monterey, CA, USA
