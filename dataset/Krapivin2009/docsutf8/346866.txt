--T
Analytical comparison of local and end-to-end error recovery in reactive routing protocols for mobile ad hoc networks.
--A
In this paper we investigate the effect of local error recovery vs. end-to-end error recovery in reactive protocols. For this purpose, we analyze and compare the performance of two protocols: the Dynamic Source Routing protocol (DSR[2]), which does end-to-end error recovery when a route fails and the Witness Aided Routing protocol (WAR[1]), which uses local correction mechanisms to recover from route failures. We show that the performance of DSR degrades extremely fast as the route length increases (that is, DSR is not scalable), while WAR maintains both low latency and low resource consumption regardless of the route length.
--B
Introduction
Routing protocols for ad hoc networks can be classified in two
general categories: reactive and proactive, depending on their
reaction to changes in the network topology. Proactive proto-
cols, such as distance-vector protocols (DSDV[4]), are highly
sensitive to topology changes. They require mobile hosts to periodically
exchange information in order to maintain an accurate
image of the network. While convergence is faster in such
protocols, the cost in wireless bandwidth required to maintain
routing information can be prohibitive. Moreover, mobile
hosts are engaged in route construction and maintenance even
when they do not need to communicate, which means that a
percentage of the collected routing information may never be
used. Therefore, many researchers have proposed to use reactive
protocols (like WAR[1], DSR[2], SSA[6], AODV[3] etc.),
which only trigger route construction or update based on the
mobility and needs of mobile hosts.
There have been several simulation studies which have attempted
to characterize various performance aspects of existing
routing protocols. Boppana et al. [9] compared reactive-
style protocols with proactive protocols by looking at their performance
under different network loads. They found that re-active
protocols do not perform as well as proactive ones under
heavy network loads. On the other hand, simulation studies
conducted by Borch et. al. [10] on four different protocols
(DSR [2], AODV [3], DSDV [4] and TORA [5]) indicate that
reactive routing protocols may outperform the proactive routing
protocols. Their work focused on packet delivery ratio,
routing overhead and path optimality. In particular, they suggested
that DSR tends to be superior under most scenarios experimented
with. However, it is unclear from their results how
DSR scales as the network size (route length) increases.
Along with simulation experiments, a few attempts have been
made to evaluate the performance of routing protocols using
mathematical modeling. Jacquet and Laouiti [11] did a preliminary
analytical comparison between reactive and proactive
protocols, using a random graph model. Although this model
limits the network size to indoor or short range outdoor net-
works, it provides useful insights in the performance of reactive
protocols, particularly about the impact of route non-optimality
and/or symmetry.
In this paper we focus on the performance of reactive proto-
cols. More precisely, we analyze and compare the error recovery
techniques used by existing reactive protocols. Unlike protocols
from the proactive family, reactive protocols are more
likely to experience route errors because of their more conservative
approach in collecting topology information. In general,
such errors may have several causes. First, radio links are inherently
sensitive to noise and transmission power fluctuations.
This, as well as problems like the hidden terminal, can cause
temporary or permanent disruption in service at the wireless
link level, in one direction or in both. Second, host mobility can
further increase link instability, reducing the probability that a
packet is successfully transmitted over a link. The effect of link
instability is magnified as route length increases, which makes
the way routing protocols cope with route errors a critical issue.
There are two general ways to deal with route errors: local and
end-to-end error recovery. We present an analytical comparison
between the performance of reactive protocols which use
local error recovery and reactive protocols which use end-to-
error recovery. The goal is to determine which error recovery
mechanism is suitable at a given mobility rate in the mobile
ad hoc network and to quantify its performance in terms of average
packet latency and cost of packet delivery (in terms of
bandwidth consumed) as a function of parameters such as route
length, size of the network, mobility rate and packet arrival
rate. In particular, we analyze the performance of WAR (which
employs local error recovery) and DSR (which uses end-to-end
error recovery) and compare them using two metrics: the probability
that a packet is delivered to its destination in one attempt
and the traffic generated (data plus control packets) to successfully
route a packet (T routing ). Our analysis shows that,
unless some local error recovery technique is employed to deal
with failures along the route to destination, the performance of
reactive protocols is not scalable with the size of the network
(in terms of route length).
The rest of the paper is organized as follows. Section 2 presents
a qualitative comparison between end-to-end and local error re-
covery. This section also provides a brief description of the
recovery techniques used in DSR and WAR. In Section 3 we
develop the analytical tools needed to characterize the performance
of WAR and DSR. Numerical results are discussed in
Section 4 and conclusions based on these results are outlined
in Section 5.
Recovery
When a packet encounters a link error, the routing protocol has
three choices:
1. report the error to the sender of the packet immediately
(negative acknowledgment)
2. do nothing (the sender will timeout waiting for a positive
3. invoke some localized correction mechanism to attempt
to bypass the link in error
A protocol which implements one of the first two options uses
end-to-end error recovery, whereas a protocol which implements
the third option uses local error recovery. Among the
existing reactive protocols (WAR, DSR, AODV, TORA, ABR,
SSR), only WAR, ABR and TORA 1 include a local error recovery
mechanism. The others use either negative acknowledgments
or timeouts to detect errors and recover them by having
the original host resend the packet. Our attention will focus
on two related protocols: WAR, which uses local error recovery
and DSR, which uses end-to-end error recovery. The next
section gives a brief description of the two protocols and emphasizes
differences and similarities between them.
recovery technique is based on link reversal and therefore
it is not applicable in networks with unidirectional links
2.1 WAR vs. DSR
WAR and DSR are members of the same family of protocols
(reactive) and they use source routing to forward packets from
one host to another. While their route construction mechanism
is generally the same, WAR implements a different route selection
and maintenance scheme. Both protocols allow mobile
hosts to operate in promiscuous receive mode, but with different
goals: in DSR, packet snooping is done for route maintenance
purposes, while WAR uses snooping to help the routing
process. However, two essential aspects distinguish WAR and
DSR and have a major impact on their performance: routing in
the presence of unidirectional links and error handling.
2.1.1 Routing in the presence of unidirectional links
Although DSR is claimed ([2] and [10]) to be able to handle
unidirectional links, its ability is limited to only computing
routes which avoid such links. That is, DSR routing will fail if
such links appear for short periods of time after the routes are
computed. Transient events in the network are very likely to
cause certain links to temporarily appear as non-operational (in
one direction or in both), in which case DSR will fail to route
packets and will instead spend time and network resources to
re-discover what might be only temporarily out of order routes.
On the other hand, WAR uses witness hosts [1] to overcome
such transient problems, which greatly reduces the overall
packet delivery time and the network traffic generated by (ex-
pensive!) route discovery messages. Witness hosts of a given
host X are essentially routers which act on X's behalf when they
detect that a packet sent out by X did not appear to reach its
target. An illustration of how witnesses participate in the routing
process is shown in Fig.1. Both W1 and W2 hear X's transmission
to Y, which makes them potential active witnesses of
X with respect to the packet P (X!Y ) sent to Y. At this point,
they will wait to see if Y attempts to deliver the packet to Z,
which would mean that Y received it from X. If that is the case,
their role with respect to the packet P (X!Y ) reduces to sending
an acknowledgment to X (to avoid an error in case X could
not hear Y's transmission to Z). If neither W 1 nor W 2 hear Y's
transmission to Z, they conclude that the packet P (X!Y ) failed
to reach Y. In this case, they will both attempt to deliver the
packet directly to Z, although, indirectly, they target Y as well.
Since W1 and W2 do not necessarily have a way to communicate
with each other and avoid contention, they will ask Z for
arbitration before sending the packet. If Z rejects their request,
it means that it has already received the packet from Y and their
role reduces to sending the acknowledgment to X. Otherwise,
the one selected by Z will deliver the packet and then inform X
about it.
2.1.2 handling
When a route problem is detected and no alternative route is immediately
available, DSR sends a negative acknowledgment to
Y
Z

Figure

1.
and W 2
help transmitting
the packet from X to Y or Z
the original sender of the packet. This method has two draw-
backs. First, when link errors occur far away from the sender
and close to the destination, the fact that the packet succeeded
in traversing a long path is not exploited. This increases the
overall packet delivery time and the network resources used by
the routing protocol. Second, negative acknowledgments tend
to add to the network overhead precisely when the network is
overloaded (i.e. in case of congestion).
WAR uses a localized error recovery mechanism to correct the
problem without involving the original sender in this process.
The operation of the recovery mechanism is illustrated in Fig.
2. Initially, host X looks up an alternate route to the destination
in its own route cache. If one is available, X uses it to forward
the packet. Otherwise, it broadcasts a copy of the original mes-
sage, with the tag changed to Rrecovery , to its neighbors. After
sending out the recovery message, X will drop the original
message, and its role in the routing process ends. No acknowledgment
is necessary for recovered messages. As soon as one
of the hosts in the remaining route (indicated in the message
header) is reached, the message tag is changed back into
and it continues its travel as a normal data packet.W
Y
Z

Figure

2. If witnesses W 1
and W 2
can't contact
Y or Z, host X initiates the route recovery
protocol
The number of steps a message can travel as a route recovery
message (with a Rrecovery tag) is indicated in the constraint
field attached to the original data packet by the sender (the Recovery
Depth value). When the Recovery Depth counter becomes
zero (being decremented by each host which receives
the Rrecovery message), the message is no longer propagated
and the recovery fails (on that branch of the network). This
way, WAR also provides a framework for setting message pri-
orities. A greater Recovery Depth will cause the recovery protocol
to be more insistent, increasing the chances of success,
whereas a low Recovery Depth will cause the packet to be
dropped if no fast recovery is possible.
3 Analysis of Reactive Protocols
This section focuses on the development of analytical tools
which will be used to study the behavior of WAR.We first introduce
basic notions related to the network (parameters, assump-
tions, etc.), then we examine a few general results related to the
class of reactive protocols, and finally we analyze the performance
of WAR and compare it with the performance of DSR.
3.1 Preliminaries
Let X and Y be two arbitrary hosts in the network. If X and Y
are within transmission range of each other (that is, Y may hear
packets sent by X and X may hear packets sent by Y), then we
say that there is a link between X and Y, and we denote it by
(X,Y). Further, if the link (X,Y) has existed during the interval
of time if at time t host X needs to transmit a packet
to Y, the link can be in one of the following states:
ffl broken: if Y is no longer in the transmission range of X.
ffl non-operational: if X and Y are still within range but
cannot hear each other (due to noise, etc.
ffl unidirectional: if one and only one of the following conditions
is
a) Y can hear X (the link is direct operational), or
b) X can hear Y (the link is reverse operational).
ffl bidirectional: if Y can hear X and X can hear Y.
failure: A link (X,Y) fails when host Y does not
receive (directly from X or from a witness host) a packet sent
to it by X. Note that by this definition, a direct operational link
cannot fail.
Route failure: A route fX1 ; fails if a
packet sent by X 1 to X k does not reach X k (that is, the packet
needs to be resent by X 1 ).
3.2 Assumptions
In order to simplify the analysis, we make the following assumptions
about the network and about the routing protocol(s)
discussed:
i. The average route length between any two hosts is a
known value EL . Determination of EL is a research topic
in itself and it is out of the scope of this paper.
Name Description
- packet arrival rate (communication frequency)
location change arrival rate (move frequency)
n number of mobile hosts in the network
A total area of the network (in square meters)
r transmission range of a mobile host (in meters)
U probability that a (non-broken) link is
non-operational in at least one direction
EL expected route length between any two hosts

Table

1. System parameters
ii. The time between calls (packets) between hosts is exponentially
distributed, with mean 1=-.
iii. The time between location changes for each host is also
exponentially distributed, with mean 1=-. Note that - can
be 0, in which case the network is static.
iv. The probability that a link is not bidirectional is a known
parameter, p U . A non-bidirectional link is equally likely
to be non-operational in either direction.
v. The locations of mobile hosts are uniformly distributed
within the network area.
vi. All mobile hosts have the same transmission range, r.
vii. Mobile hosts store only one route to a given destination
(that is, although a protocol may allow multiple routes to
a given destination to be cached at a mobile host, a second
route will not be available in case the primary route fails).

Table

1 displays the parameters which are assumed to be known
about the system. Also, we will be using the notation N for
the random variable representing the number of neighbors for
a mobile host and EN for the expected value of N .
3.3 General Results
This section provides the necessary tools for the analysis of
WAR, without getting into protocol dependent details.
Lemma 1 The probability that a particular mobile host Y is in
the vicinity of a host X is:
ae
A
oe
Proof: The coverage zone of X has an area of -r 2 , while the
total number of places where Y can be is A, which proves the
result.
Theorem 2 The average number of neighbors for a mobile
host, E[N ], is
Proof: Using p0 from Lemma 1, it follows that the probability
of any k neighbors being in the transmission range of X is
Thus, the expected value of N
(defined in Section 3.2) is E[N
the theorem. In what follows, we will use
Theorem 3 The probability that a link is broken when a packet
needs to be transmitted is:
Proof: By definition, a link (S; R) is broken when host R is no
longer in the transmission range of S. In other words, a broken
link is detected when a transmission from S happens after
R moved out of the transmission range of S. Let T and M be
random variables which describe the waiting time until a transmission
occurs and the waiting time until a move occurs, re-
spectively. We assumed (in Section 3.2) that T and M have
exponential distributions with parameters - (the transmission
frequency) and - (the location change frequency), respectively.
Thus, the probability that a move occurs before a transmission
in the interval [t; t + ffit] is given by:
Z t+ffit
Hence, the unconditional probability that a transmission from
S to R occurs after R moved out of the transmission range of
S is
which leads to:
Remark 1 Note that p B is not the probability that a link is broken
at all times, but the probability that the link is not available
when a packet needs to be transmitted. Also, the probability p U
is only defined when the link is not broken. Thus, the probability
that a link is bidirectional when a packet needs to be transmitted
is not
Lemma 4 The probability that a non-broken link is operational
in one direction is
Proof: Let p dir (p rev ) be the probability that a link (X; Y ) is
direct (reverse) operational. We have:
(from the assumptions in Section 3.2), we
get that:
Corollary 4.1 The probability that a non-broken link is non-operational
in both directions is 2
Proof: This probability is given by
3.3.1 Cost analysis
Lemma 5 If p L is the probability that a packet is successfully
transmitted over a link, then the average number of links successfully
passed by a packet along a route before an error occurs
is:
Proof: The number of links passed to encounter an error (in-
cluding the link in error) is a geometric r.v. Q, with distribution
expected value
Hence, the average number of links successfully
passed before an error occurs is:
For WAR, p L is given by Theorem 9.
Lemma 6 If p S is the probability that a packet is successfully
routed to its final destination, then the average number of routing
failures for a given packet is
Proof: Let Z be a r.v. which describes the number of routing
attempts needed to successfully deliver a packet to its final des-
tination. Z has a geometric distribution given by P
and the expected value
that the average number of routing failures before a success is:
For WAR, p S is given by Theorem 11.
Theorem 7 If C LS is the cost of a successful link transmission
and C LF the cost of handling an error at link level, then the
average cost of routing a packet to its final destination in a re-active
protocol is:
Proof: In computing the overall cost of routing a packet from
source to destination, we have to account for possible routing
errors. Thus, the cost of routing a packet is the sum between
the cost generated by (possible) failures and the cost of the final
(error free) attempt:
where z is the expected number of failures (Lemma 6).
The cost of a route failure, C RF is determined by the cost of
partially routing the packet up to the link in error and the cost
of informing the sender about the error (error handling):
where q is the number of links successfully passed (Lemma 5).
Finally, the cost of error free routing, C RS is determined by the
route length EL and the cost of successful link transmission,
Thus, we have:
and using Lemma 6 and Lemma 5 the result is straightforward.
are protocol dependent val-
ues. We will discuss each of these values for WAR in Section 3.4
and for DSR in Section 4. On the other hand, C LS and C LF
are generic values; they may represent different quantities, depending
on the purpose of the analysis (i.e. time, amount of
traffic, etc.)
3.4 Analysis of WAR
Considering that packets may be dropped, delayed and/or re-sent
several times before they are successfully delivered to the
destination, we are interested in an estimate of the following
quantities for WAR:
1. the probability p S that a packet is routed successfully in
one attempt (without being resent), and
2. the total amount of traffic T routing generated to successfully
route a packet from source to destination.
We will first determine the following probabilities, which will
help in the derivation of our target results:
probability that at least a witness host can bypass
a problematic link
probability that link transmission succeeds
R probability that a link failure is recovered from
probability that a packet arrives at its final
destination without being resent (route success)
Lemma 8 The probability that at least one of the EN neighbors
of X can deliver a packet on behalf of X is given by:
\Theta
Proof: Let Y be the direct receiver of the packet sent by X and
let W be a witness of X. In order for W to be able to pass the
packet to Y, the links (X,W) and (W,Y) must not be broken and
must be bidirectional. That is, the probability that W can pass
the packet to Y and then inform X is
Let H be a discrete r.v. representing the number of witness
hosts which are able to help the packet from X to Y. H has a
binomial distribution, given by:
which means that the probability that at least one witness can
help a packet from X to reach Y is:
Theorem 9 The probability that a link transmission succeeds
in WAR is:
Proof: A direct transmission from host X to host Y succeeds
in WAR if Y receives the packet either from X or from a witness
of X and then X is informed about the success. That is, the
transmission succeeds if:
1. the link is not broken and it is bidirectional, or
2. the link is not broken, it is unidirectional and a witness
delivers the packet, or
3. the link is broken but a witness delivers the packet.
Theorem is the recovery depth for a given packet, then
the probability that a route a recovery succeeds in WAR is:
C A
Proof: Let X be the host which detects the route problem and
let k be the number of hops the packet still needs to travel.
At the first step of the recovery, X sends the recovery packet
to all its neighbors. The probability that none of the remaining
k hosts on the route is in the neighborhood of X is p F 0
At step two, the probability that none of remaining hosts along
the route is among those queried is
EN neighbors of host X attempt forward the recovery request).
Similarly, at step i we have p F . Therefore, the
probability that the recovery does not succeed at all is:
from which we get
Let P be a r.v. representing the position along the route where
the error occurs. Since all links are equally likely to present
problems, P has a uniform distribution with mean EL =2. Thus,
we can substitute in the above equation, which completes
the proof.
Theorem 11 If the average route length in the network is EL ,
the probability that a packet is successfully routed by WAR to
its final destination in one attempt is:
Proof: A packet arrives at its destination in one attempt if it
successfully passes all the links along the route without being
resent by the original host. That is, it either passes each link
without error, or, if an error occurs, the recovery mechanism
corrects it. Therefore, we have:
3.4.1 Traffic generated to successfully route a data
packet
generated to successfully route a data packet
\Psi, we understand the total amount of data and control packets
sent over the wireless medium from the moment \Psi is sent by the
source host until the moment it is received by the destination
host.
We first analyze the traffic needed to deliver a packet over a
link.

Table

2 summarizes the notations used to distinguish between
various types of traffic.
Name Description
T DATA the size of a data packet.
T ACK the size of an explicit ACK packet.
T RTS the size of an RTS (request to send) packet.
T CTS the size of a CTS (clear to send) packet.

Table

2. Traffic associated with data and
control packets
The traffic generated to deliver a data packet over the direct link
between host X and host Y is:
where Twitness is the traffic generated by the witness hosts to
assist the delivery of a data packet from X to Y.
Using Eq.8, we derive:
with T no help and T help explained below.
If the data packet sent by X arrives at Y without any help from
the witness hosts (with probability
U , from
Eq.8), then (the worst case) traffic generated by witnesses is
given by:
since all witnesses which are aware of the success will attempt
to send an ACK to X.
If the packet needs help from the witness hosts (with probability
U , from Eq.8) to reach Y (or the next host
along the route, say Z), then the traffic generated if the k th witness
succeeds is:
Hence, the traffic generated by witnesses to help a packet is:
where
is the probability that witness i succeeds in
delivering the packet on behalf of X. The value of p W i
can be
approximated by p W =EN (see Eq.7), which leads to:
3.4.2 Traffic generated to recover from a link error
The traffic generated to recover from a link error depends on
the depth of the recovery (which is controlled by the Recovery
Depth field within the message). The recovery process is a local
broadcast, for up to Recovery Depth steps. Thus:
Even though in most cases Recovery Depth should be 2 or 3, we
can assume that an upper bound on the number of steps needed
to reach every host in the network is dn=EN e (n is defined in

Table

1). Hence, an upper bound on Trecovery is:
Trecovery - T
Performance Comparison WAR vs. DSR
We are interested in two values: the probability that a packet
is routed without errors (that is, first attempt succeeds) and the
traffic required to successfully deliver a packet (considering
that multiple attempts may be necessary).
4.1 Probability of error-free routing
As shown in Theorem 9, the probability of link success
for WAR is p for DSR, this
probability is
Further, the probability that a packet is successfully routed to
its destination without being resent in WAR is p
(Eq. 12). For DSR, this probability equals:

Figure

3 shows a comparison between the performance of
WAR and DSR in terms of the probability that a packet arrives
at its final destination from the first attempt. DSR's performance
degrades as the route length increases and the probability
of successful delivery from the first attempt drops to almost
zero for route lengths greater than 5. On the other hand,
for recovery depths greater than 1, WAR exhibits a different
behavior: it improves its performance as the route length in-
creases. The probability that WAR delivers a packet from the
first attempt approaches 1 for routes longer than 5 as long as
the recovery depth is 3. This suggests that WAR gains significant
performance even with a very small extra-cost (i.e. a very
large, expensive recovery depth does not seem to be necessary).
4.2 Traffic generated to successfully route a
data packet
Using eq. 6 and the values computed in equations 14, 21, 8 and
12 , we have that the traffic generated by WAR to successfully
route a packet is:
link
Trecovery
For DSR, we have:
with p L;DSR and p S;DSR from eq. 22 and eq. 23 respectively.
Although WAR generates more traffic at link level in order to
pass a data packet between neighboring hosts, the overall traffic
generated to successfully route the packet to its final destination
is several orders of magnitude smaller than the one generated
by DSR. Figure 4 shows a comparison between WAR
and DSR for route lengths between 1 and 10. While still close
to the traffic generated by WAR for small routes (one to five
hops), DSR's traffic grows extremely fast as we increase the
route length, because the probability of encountering problems
is higher for longer routes, and DSR does nothing to reduce it.
It is clear from Fig. 4 that WAR maintains low traffic (and implicitly
bandwidth consumption) for all route lengths as long as
the recovery depth is greater than 1.
Probability of success from the first attempt in WAR1020 1350.250.75Route length Recovery depth
Probability of success
Probability of success from the first attempt in WAR
1350.250.75Route length Recovery depth
Probability of success
Probability of success from the first attempt in DSR
1350.250.75Route length Recovery depth
Probability of success

Figure

3. Probability of packet delivery
success.
Conclusions
Our analysis, exemplified on WAR and DSR, shows that unless
some local error recovery technique is employed, reactive
protocols might not be suitable for large ad hoc networks. We
have experimented with various network sizes and parameters,
and the results exhibited similar trends regardless of how we
varied these parameters. As network size (and implicitly route
length) increases, the performance of protocols that use end-to-
recovery (like DSR in our study) degrades rapidly, and the
amount of network resources consumed per packet routed increases
equally fast. On the other hand, although local recovery
requires more network resources at link level, the overall performance
and resource consumption is only slightly affected by
the increase in the route length. The results we obtained analytically
indicate that WAR, which uses local error correction at
two levels (first by involving witness hosts in the routing process
and secondly by implementing an error recovery scheme
to cope with cases when witnesses cannot help) provides a scalable
routing solution for wireless ad hoc networks.



--R

A Witness-Aided Routing Protocol for Mobile Ad-Hoc Networks with Unidirectional Links
Dynamic source routing in ad hoc wireless networks.

Highly dynamic destination-sequenced distance-vector routing (DSDV) for mobile comput- ers
A highly adaptive distributed routing algorithm for mobile wireless networks.
Signal stability based adaptive routing (SSA) for ad-hoc mobile networks
The Cambridge Ad-Hoc Mobile Routing Protocol
A review of current routing protocols for ad hoc mobile wireless networks.
An analysis of routing techniques for mobile ad hoc networks.
A performance comparison of multi-hop wireless ad hoc network routing protocols

--TR
Highly dynamic Destination-Sequenced Distance-Vector routing (DSDV) for mobile computers
A performance comparison of multi-hop wireless ad hoc network routing protocols
Wireless ATM and Ad-Hoc Networks
A Witness-Aided Routing Protocol for Mobile Ad-Hoc Networks with Unidirectional Links
Ad-hoc On-Demand Distance Vector Routing
A Highly Adaptive Distributed Routing Algorithm for Mobile Wireless Networks

--CTR
Giovanni Resta , Paolo Santi, An analysis of the node spatial distribution of the random waypoint mobility model for ad hoc networks, Proceedings of the second ACM international workshop on Principles of mobile computing, October 30-31, 2002, Toulouse, France
Douglas M. Blough , Giovanni Resta , Paolo Santi, A statistical analysis of the long-run node spatial distribution in mobile ad hoc networks, Proceedings of the 5th ACM international workshop on Modeling analysis and simulation of wireless and mobile systems, September 28-28, 2002, Atlanta, Georgia, USA
Douglas M. Blough , Giovanni Resta , Paolo Santi, A statistical analysis of the long-run node spatial distribution in mobile ad hoc networks, Wireless Networks, v.10 n.5, p.543-554, September 2004
Christian Bettstetter , Giovanni Resta , Paolo Santi, The Node Distribution of the Random Waypoint Mobility Model for Wireless Ad Hoc Networks, IEEE Transactions on Mobile Computing, v.2 n.3, p.257-269, March
