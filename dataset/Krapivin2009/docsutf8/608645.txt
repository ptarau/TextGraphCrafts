--T
Emergent Properties of a Market-based Digital Library with Strategic Agents.
--A
The University of Michigan Digital Library (UMDL) is designed as an open system that allows third parties to build and integrate their own profit-seeking agents into the marketplace of information goods and services. The profit-seeking behavior of agents, however, risks inefficient allocation of goods and services, as agents take strategic stances that might backfire. While it would be good if we could impose mechanisms to remove incentives for strategic reasoning, this is not possible in the UMDL. Therefore, our approach has instead been to study whether encouraging the other extrememaking strategic reasoning ubiquitousprovides an answer.Toward this end, we have designed a strategy (called the p-strategy) that uses a stochastic model of the market to find the best offer price. We have then examined the collective behavior of p-strategy agents in the UMDL auction. Our experiments show that strategic thinking is not always beneficial and that the advantage of being strategic decreases with the arrival of equally strategic agents. Furthermore, a simpler strategy can be as effective when enough other agents use the p-strategy. Consequently, we expect the UMDL is likely to evolve to a point where some agents use simpler strategies and some use the p-strategy.
--B
Introduction
When building a multiagent system, a designer (or a group
of designers) has to worry about two issues: mechanism
design (which dictates the way that agents interact), and
individual-agent design. Of course, these two design issues
are interdependent; a well-designed mechanism can
simplify the design of individual agents (and vice versa).
For instance, Vickery's auction mechanism (Vickery, 1961)
makes rational agents bid their true reservation prices such
that even self-interested agents, if they are rational, will
behave honestly (and not try in vain to outsmart other
However, designing a good mechanism that exhibits
certain properties-which is called incentive engineering
or mechanism design (Rosenschein & Zlotkin, 1994)-is
difficult, especially for dynamic systems where the
participants and their interactions evolve over time. The
example of such dynamic systems that we use throughout
this paper is the University of Michigan Digital Library
(UMDL). In the UMDL project, we aim to provide an
infrastructure for rendering library services in a networked
information environment (Durfee et al., 1998). We have
designed the UMDL as a multiagent system, where agents
(representing users, collections, and services of the digital
library) sell and buy information goods and services
through auctions. While supporting flexibility and
scalability, the open multiagent architecture and market
infrastructure create dynamics (agents participating in an
auction change, matches between buyers and sellers vary,
and auctions themselves evolve), which adds additional
complexity to mechanism design.
As system architects, we strive for an efficient system.
Although the UMDL market allows the self-interested
agents to seek profits, we do not want strategic agents to
undermine the overall system performance (efficiency in
market), nor such agents to reap profits against other agents
(efficiency in allocation). That is, we want an incentive-compatible
mechanism that makes strategic reasoning
unnecessary (Zlotkin & Rosenschein, 1996; Wellman,
1993). Unfortunately, we do not have such a mechanism
yet for the UMDL system; we fully expect strategic agents
who try to take advantage of other agents to emerge in the
system.
So, does it mean the UMDL will become inefficient?
(and should) a UMDL agent spend much of its
computational power trying to outsmart other agents? What
happens if all the agents behave strategically? In this paper,
we answer the above questions, by studying the properties
of the UMDL with strategic agents. Instead of developing a
auction mechanism may be inappropriate for certain
settings. For limitations of Vickery auctions, see the work by
Sandholm (Sandholm, 1996).
mechanism that prevents strategic thinking (which is hard),
we use a bottom-up approach: we design a strategy that the
UMDL agents may use and experiment with such strategic
agents to learn about the system properties. In particular,
we are interested in whether making strategic reasoning
ubiquitous (instead of preventing it) reduces its negative
effects.
In the following, we review some of the previous work
on multiagent system design issues and briefly describe the
target system, the UMDL service market society. We
explain a strategy called p-strategy and demonstrate its
advantages over other simpler strategies. Then, by
experimenting with multiple p-strategy agents, we
investigate some emergent properties of the UMDL
system.
Related Work
A multiagent system can be designed to exhibit certain
desirable properties. A single designer (or a group of
designers sharing common goals) can calibrate the system
to follow its goals (Briggs & Cook, 1995; Shoham &
Tennenholtz, 1995). For instance, agents and mechanism
can be built in certain ways (e.g., share information, be
honest, and so on) conducive to cooperation. Social laws
and conventions, however, are unsuitable for the UMDL
where agent designers do not share common goals and
system architects cannot impose limitations on the
individual, self-interested agents.
When designing multiagent systems with self-interested
agents, many researchers have turned to game theory to
lead systems to desired behaviors (e.g., discourage agents
from spending time and computation trying to take
advantage of others) (Sandholm & Lesser, 1995; Brafman
1996). For instance, Rosenschein and
Zlotkin have identified two building blocks of a multiagent
system, protocol and strategy (which are mechanism and
individual agent in our terminology, respectively), and
focused on designing a protocol which ".motivates agents
towards telling the truth." (Rosenschein & Zlotkin, 1994).
Unfortunately, game theory tends to be applied to highly
abstract and simplified settings. We do not use game theory
because the UMDL is too complex to model and because
we cannot assume rationality in agents.
Another approach to designing multiagent systems with
self-interested agents is to let manipulation from agents
happen and live with it. This may sound like bad
engineering, but preventing strategic behavior of individual
agents is unrealistic for many complex systems. Instead, by
studying how the individual, strategic agents impact the
overall system behavior, we gain insights on properties of
agent societies, such as characterizing the types of
environments and agent populations that foster social and
anti-social behavior (Vidal & Durfee, 1996; Hu &
Wellman, 1996). Our approach falls into this category, and
our goal is to explain how strategic agents affect the
UMDL in terms of market and allocation efficiency.
The UMDL Service Market Society
The UMDL Service Market Society (SMS) is a market-based
multiagent system where agents buy and sell goods
and services from each other. Instead of relying solely on
internally-designed agents, UMDL can attract outside
agents to provide new services, who are motivated by the
long-term profit they might accrue by participating in the
system. Since the UMDL is open, we treat all agents as
selfish.
Selling and buying of services are done through auction
markets, operated by auction agents. Figure 1 shows an
example of the UMDL auction, where User Interface
Agents (UIAs) want to find sources of information for
some topic (say, science) on behalf of certain kinds of
users (say, high school), and some Query Planning Agents
(QPAs) sell the services for finding such collections. Due
to space limitations, we ignore the issues of how to
describe what agents buy or sell, how to locate the right
auction to participate in, when and how to create an
auction, and so on. Interested readers may refer to (Durfee
et al., 1998).
At present, the UMDL uses the AuctionBot software
(Mullen & Wellman, 1996) parameterized for double
Sellers Buyers
QPA-n
UIA-m
Auction
Auction
for
QPA-hs-sci
sell-offers buy-offers

Figure

1: The UMDL auction for "QPA-service_high-school_science"
auctions where agents post both sell prices and buy prices.
Compared to double auctions used in some economic
models (Friedman and Rust, 1993), the UMDL auction is a
continuously-clearing double auction, well-suited for
frequent, timely transactions needed in information
economies. In the UMDL auction, a transaction is
completed as soon as a buy offer and a sell offer cross
(without waiting for the remaining agents to submit their
bids), and the clearing price is determined for each
transaction (rather than being set at some medium price
among bids). In the UMDL, the auction agent continuously
matches the highest buyer to the lowest seller, given that
the buy price is greater than the sell price. The clearing
price is based on the seller's offer price (i.e., consumers
receive all the surplus).
Since buyers (sellers) with bid prices higher (lower)
than any standing sell (buy) offer get matched, the buyers
in the auction (if any) always have lower offer prices than
the sellers (if any). That is, standing offers ordered by
lowest to highest bid are always in a (bbb.bsss.s)
sequence, as shown in Figure 2. To manage the size of the
auction, we may limit the standing offers in the auction.
The auction used in our experiments limits the number of
buy and sell offers not to exceed five each. When an
additional buyer (seller) arrives, the seller (buyer) with the
highest (lowest) offer will be kicked out first.
A Strategy based on Stochastic Modeling
Agents placed in the UMDL SMS want to maximize their
profits by increasing the possible matches and the profit
per match. In this section, we present a bidding strategy
that agents may use to maximize their profits, and examine
the performance of the seller 2 with such a strategy against
other types of sellers.
The p-strategy
We have developed an agent strategy (called p-strategy)
that finds the best offer price for the multiagent auction
1996). The four-step p-
strategy is as follows. First, the agent models the auction
process using a Markov chain (MC) with two absorbing
states (success and failure). Secondly, it computes the
sellers have a somewhat stronger incentive to be strategic
in the UMDL, as they set the clearing price and this affects their
tradeoff between the probability of trading and the profit
earned, we use the p-strategy seller (instead of buyer).
transition probabilities between the MC states. Thirdly, it
computes the probabilities and the payoffs of success and
failure. Finally, it finds the best offer price to maximize its
expected utility.
The main idea behind the p-strategy is to capture the
factors which influence the expected utility in the MC
model of the auction process. For instance, the seller is
likely to raise its offer price when there are many buyers or
when it expects more buyers to come. The MC model takes
those factors into account in the MC states and the
transition probabilities. The number of buyers and sellers at
the auction, the arrival rates of future buyers and sellers,
and the distribution of buy and sell prices are among the
identified factors.
Each state in the MC model represents the status of the
auction. The (bbss*) state, for example, represents the case
where there are 2 standing buy offers and 2 standing sell
offers and the sell offer of the p-strategy agent (represented
as s*) is higher than the other seller's offer. If we assume
that offers arrive at most one at a time, the auction can go
to any of the following states from the (bbss*) state (see

Figure

3).
arrives during the clearing interval.
. (bbs*): A buy offer arrives, and it is matched with the
lowest seller.
. (bbbss*): Because of no match, a new buy offer
becomes a standing offer.
. (bss*): A sell offer arrives, and it is matched with the
highest buyer.
. (bbss*s): Because of no match, a new sell offer
becomes the highest standing offer.
. (bbsss*): A new sell offer becomes a standing offer,
but the p-strategy agent's offer is still the highest.
bbss*
s*: my offer
bbs*
bbss*s
bbsss*
bss*
bbbss*

Figure

3: Transitions from the (bbss*) state
s2 comes
b2 comes
price b1 s2
(s1 and b2 matched at s1)
(bs) (bss) (bs)

Figure

2: Standing offers in the auction

Figure

4 depicts the MC model for the UMDL auction
with a maximum size of five buyers and sellers each 3 . In
this paper, we skip how to define the exact transition
probabilities between the MC states (step 2), how to
compute the probabilities and the payoffs of success and
failure (step 3), and how to find the best payment (step 4).
Readers may refer to (Park, Durfee & Birmingham, 1996).
Using the MC model and its transition probabilities, the
p-strategy agent is able to capture various factors that
influence the utility value and tradeoffs associated with the
factors. Figure 5 shows an example of tradeoffs between
the number of buyers and sellers. In general, the seller
raises its offer price when there are more buyers (to
increase the profit of a possible match). When the number
of sellers is five (at the right end of the graph), however,
the p-strategy seller bids a lower price when there is one
buyer than when there is no buyer. That is, the p-strategy
seller lowers its offer to increase the probability of a match
(instead of increasing the profit of a match). Offering a
higher price in this case would have served to price it out
of the auction when it might otherwise have been able to
trade profitably.
Intuitively, agents with complete models of other agents
will always do better, but without repeated encounters
complete models are unattainable. In the UMDL, an agent
in its lifetime meets many different agents, and as a result
its model of other agents is incorrect, imprecise, and
incomplete. Instead of modeling individual agents, the p-
3 The number of MC states increases with the size of the auction.
When the maximum number of standing offers is limited to m
buyers and n sellers, the number of MC states is
(m+1)((n+1)n)/2+2. Of course, one may shrink the size of the
MC model, while sacrificing the accuracy of the model.
strategy uses the model of the auction process, which is
effective, especially for very dynamic systems.
The p-strategy is an optimal strategy, provided that the
MC model represents the auction process correctly and that
all the agents have the same level of knowledge.
Obviously, the p-strategy is not optimal when its model is
incorrect (i.e., incorrect knowledge), and the p-strategy
agent can be exploited by competing agents who know
about the p-strategy (i.e., higher-level knowledge).
Advantages of p-strategy
In this section, we demonstrate the advantages of the p-
strategy in the UMDL auction, comparing the profit of the
p-strategy seller (p-QPA) with three different types of
sellers. They are:
Offer price
Number of sellers
Number of buyers
Figure

5: Tradeoffs between the number of buyers and
sellers at the auction
bs*ssss
bs*sss
bbbbbs*ss
bbbbbs*s
bs*ssss
bbbbs*sss
bbbbs*ss
bbbbs*s
bbbs*ssss
bbbs*sss
bbbs*ss
bbbs*s
bbs*ssss
bbs*sss
bbs*ss
bbs*s
bs*ssss
bs*sss
bs*ss
bs*s
s*ssss
bbbbs*
bbbs*
bbbbbs*
s*s s*ss s*sss
bss*sss
bbbbbss*ss
bbbbbss*s
bbbbss*s
ss
bbbbss*ss
bbbbss*s
bbbss*sss
bbbss*ss
bbbss*s
bbss*sss
bbss*ss
bbss*s
bss*sss
bss*ss
bss*s
bbbbss*
bbbss*
bbbbbss*
bss*
ss*
bbss*
ss*s ss*ss ss*sss
bbbbbsss*ss
bbbbbsss*s
bbbbsss*ss
bbbbss*s
bbbsss*ss
bbbsss*s
bbsss*ss
bbsss*s
bsss*ss
bsss*s
sss*ss
bbbbsss*
bbbsss*
bbbbbsss*
bsss*
sss*
bbsss*
sss*s
bbbbbssss*s
bbbbsss*s
bbbssss*s
bbssss*s
bssss*s
bbbbssss*
bbbssss*
bbbbbssss*
bssss*
ssss*
bbssss*
ssss*s
bbbbsssss*
bbbsssss*
bbbbbsssss*
bsssss*
sssss*
bbsssss*
FailureFailure
s*
bbs*
bs*
Success

Figure

4: The MC model for the UMDL auction
. A seller who bids its cost plus some fixed markup
. A seller who bids its cost plus some random markup
. A seller who bids the clearing price of the next
transaction (CP-QPA).
The experimental settings are as follows.
. Auction
The auction clears every 3 seconds. The value of the
clearing interval does not affect the results from our
experiments, provided that on average at most one offer
arrives at the auction each interval.
. Buyers
A single agent simulates multiple buyers by submitting
multiple bids. In our experiments, every 6 seconds the
buyer submits its bid with a probability of 0.8. By adjusting
the offer interval and the offer rate of the single buyer, we
can change the arrival rate of buy offers to the auction 5 .
The buyer offers valuations drawn randomly from a
uniform distribution between 10 and 30.
. Sellers
For each experiment, we compare the profits of two
sellers: p-QPA and the opponent (either FM-QPA, ZI-
QPA, or CP-QPA). Both sellers submit their bids every 24
seconds on average. In addition, similar to the buyer case, a
single agent simulates all the other sellers at the auction. Its
offer interval and offer rate are set at 12 and 0.8,
respectively.
The costs of all the sellers are based on their loads,
which are computed from the message traffic and the
current workload. That is, cost = a  (number of messages
per (number of matches per minute).
The cost function represents economies of scale. Since
the workload from matches should be higher than that from
4 ZI stands for zero-intelligence. The ZI-QPA is a "budget-
constrained zero-intelligence trader" who generates random
bids subject to a no-loss constraint (Gode & Sunder, 1993).
5 Arrival-rate-of-buy-offers @ (offer-rate/offer-interval)
clearing-interval. The arrival rate varies, however, since the
agent is allowed to submit a new offer immediately after a
match even when it hasn't reached the next offer interval.
communication, we set a to 1, and b to 5 for our
experiments.
In the first set of experiments, we have compared the
profits of the p-QPA and the FM-QPA. When competing
with FM-QPAs with various markups, the p-QPA always
gets a higher profit. This is not surprising, since the p-QPA
is able to use extra information about the auction. Figure
6-(a) shows the accumulated profits of the p-QPA and the
FM-QPA who bids its cost plus 7 as its offer (i.e., fixed-

Figure

6-(b) shows the profits of the p-QPA and the ZI-
QPA. The ZI-QPA works poorly against the p-QPA, which
indicates the randomization strategy does not work. The
ZI-QPA can be thought of as an extremely naive strategy
that fails to take advantage of a given situation (Gode &
Sunder, 1993).
In the final experiment, we have compared the p-QPA
with the CP-QPA. The CP-QPA receives a price quote
from the auction-the clearing price were the auction to
clear at the time of the quote-and submits it as its offer as
long as it is higher than its cost. Note that the clearing price
is a hypothetical one, so it will change when new offer(s)
arrive during the time between the clearing-price quote and
the CP-QPA's offer.
As shown in Figure 6-(c), the p-QPA usually gets a
higher profit when competing with the CP-QPA. Since the
CP-QPA gets more matches than the p-QPA (but its profit
per match is smaller) on average, however, the CP-QPA
works better when getting more matches does not impact
its cost much (e.g., when b is 0). Bidding the next clearing
price may seem like a good heuristic, but the profit of the
CP-QPA decreases rapidly when there is another CP-QPA,
since it no longer gets as many matches as when there is a
single CP-QPA.
The p-strategy works well in the UMDL auction due to
its dynamics. No agent can have a complete, deterministic
view about the current and future status of the auction, and
naturally, an agent strategy should be able to take into
account the dynamics and the resulting uncertainties. In our
experiments, the p-strategy which models the auction
process stochastically receives higher profit than the other
FM-
QPA
ZI-
QPA
QPA
QPA
(a) FM-QPA and p-QPA (b) ZI-QPA and p-QPA (c) CP-QPA and P-QPA

Figure

Comparison of the profits of the sellers
In our previous paper (Park, Durfee, and Birmingham,
1996), we have shown the advantages of the p-strategy in
the domain of multiagent contracts with possible retraction.
In this paper, we have demonstrated that the p-strategy
works well in the new domain. Note that we have used the
p-strategy seller (compared to the p-strategy buyer in the
previous paper).
Collective Behavior of p-strategy Agents in the
UMDL Auction
Given that the p-strategy is effective in the UMDL auction
(from the previous section), nothing prohibits any self-interested
agent from adopting the p-strategy. We expect
many p-strategy agents to coexist in the UMDL, and thus
are interested in the collective behavior of such agents. In
this section, therefore, we investigate (1) how the absolute
and relative performance of a p-strategy agent changes
against other p-strategy agents, and (2) how the UMDL is
affected by multiple p-strategy agents.
Experimental Setting

Figure

7 shows six experimental settings with 7 buyers and
7 sellers. Although we fix the number of buyers and sellers
to seven each, by changing the offer rates and the offer
intervals, we can simulate a large number of agents and
different levels of activities in the auction. By increasing
the offer rates or decreasing the offer intervals, for
instance, we can simulate a more dynamic auction.
In our experiments, we deliberately set supply to be
higher than demand to emphasize competition among
sellers; each buyer submits its bid every seconds with a
probability of 0.5, while the offer interval and the offer rate
of each seller are set to 30 seconds and a probability of 0.7,
respectively.
The buyers bid their true valuations, while the sellers
bid their sell prices based on their strategies. In Session 1,
all seven sellers bid their true costs. Since traders honestly
report their reservation prices, Session 1 gets the most
matches and serves as a benchmark for comparing market
efficiency. From Session 2 through Session 6, we introduce
more p-strategy agents into the auction.
Efficiency of the system is measured in two ways. First,
we measure the efficiency of allocation, by comparing the
p-strategy agent's absolute and relative profits. Second, we
measure the efficiency of the market, using the number of
matches made and the total profit generated.
Experimental Results
Although we have shown that the p-strategy agent has an
upper hand over other-strategy agents, this observation
may not hold in the presence of other p-strategy agents. To
test this, we compare the profits of Seller 7 (p-strategy
agent) across Sessions 2 to 6. As shown in Figure 8, the
marginal profit of the p-strategy (smart) agent decreases as
the number of p-strategy (equally smart) agents increases.1 00

Figure

8: Profits of p-QPA
Now that we have established the fact that the profit of
the p-strategy agent decreases as more agents use p-
strategy, another question arises. How will a simpler
strategy agent perform in the presence of multiple p-
strategy agents? In Figure 9, by replacing Seller 1 with the
fixed-markup QPA (with markup = 5), we measure the
relative performance of the FM-QPA and the p-QPA. The
FM-QPA's profit is generally less than that of the p-QPA,
but the difference decreases with the increase of p-strategy
agents 6 . That is, the disadvantages of being less smart
decreases as the number of smart agents increases.
The result indicates that an agent may want to switch
between using p-strategy and using a simpler strategy
depending on what the other agents are doing. By
dynamically switching to a simpler strategy, an agent can
6 The FM-QPA's profit exceeds that of the p-QPA in Session 5 (in

Figure

9), but at present we cannot conclude whether this is
statistically significant.
Bidding strategy
Session Description Seller1 Seller2 Seller3 Seller4 Seller5 Seller6 Seller7
(1) All competitive sellers C C C C C C C

Figure

7: Experimental setting
achieve a similar profit (to that of using the p-strategy)
while exerting less effort (time and computation) on
computing
FM-QPA
p-QPA

Figure

9: Profits of FM-QPA and p-QPA
In terms of market efficiency, we first measure the
number of total transactions made at the auction, as shown
in

Figure

10. When the number of p-strategy agents
increases, the number of matches decreases, since the p-
strategy agents usually get fewer matches but more profit
per match.100300500SessionSessionSessionSessionSess ionSess ion
Figure

10: Efficiency measured by the number of
transactions
In addition, we measure the market efficiency using the
total profit generated from buyers and sellers (see Figure
11). The total profit eventually decreases with increasing
numbers of p-strategy agents, as the market becomes
inefficient due to strategic misrepresentation of p-strategy
agents (and therefore missed opportunities of matches).
The total profit, however, does not decrease as sharply
as one might expect due to the inherent inefficiency of the
UMDL auction mechanism (it in fact increases slightly up
to Session 4). If an auction waits for the bids from all
agents and decides on the most efficient clearing,
inefficiency due to the auction mechanism may not occur.
However, this kind of periodic, clearing-house style double
auction is unrealistic for the UMDL system where the
participants of the auction change and matches should be
made quickly.
We conjecture that having strategic sellers poses
interesting tradeoffs between strategic inefficiency and
surplus extraction. By misrepresenting their true costs, the
strategic sellers miss out on possible transactions. By
anticipating the future arrival of buyers, on the other hand,
they are able to seize more surplus.500150025003500
rs
Buye rs ' p r

Figure

Efficiency measured by the total profit
Lessons Learned
A conventional way of designing a system that exhibits
certain properties is to engineer it. Incentive engineering,
however, is unsuccessful in developing the UMDL system
because of its complexity and dynamics. Instead, by
making the p-strategy available to the agents, we have
studied the effects of strategic agents in the UMDL system.
We summarize the following observations. First,
although a self-interested agent in the UMDL system has
the capability of complex strategic reasoning, our
experiments show that such reasoning is not always
beneficial. As shown in Figure 8, the advantage of being
smart decreases with the arrival of equally smart agents.
Second, if all the other agents use the p-strategy, an
agent with a simple strategy (e.g., fixed markup) can do
just as well, while incurring less overhead to gather
information and compute bids. An agent may want to
switch between a complex strategy and a simple one
depending on the behavior of other agents. As the overhead
of complex reasoning becomes more costly, an adaptive
strategy that dynamically decides on which strategy to use
will be more desirable.
Third, we expect the UMDL is likely to evolve to a
point where some agents use simpler strategies while some
use more complex strategies that use more knowledge
(such as the p-strategy). It follows from the above
observation that if enough other agents use complex
reasoning, an agent can achieve additional profit even
when it continues using a simple strategy.
Finally, the market efficiency of the UMDL
(represented by the total profit) will not decrease as sharply
as one might expect. As shown in Figure 11, having
multiple p-strategy agents increases the market efficiency
slightly up to a certain point. Moreover, the profit-seeking
behavior of self-interested agents will keep the UMDL
agent population mixed with agents of various strategies.
Even though the market efficiency eventually decreases
with the increase in the number of p-strategy agents,
because of its mixed agent population, the UMDL will not
suffer market inefficiency of the worst case.
Conclusion
In this paper, we have used the p-strategy to examine the
collective behavior of strategic agents in the UMDL
system. In particular, we have examined market and
allocation efficiency with varying numbers of p-strategy
agents.
The findings are useful to both system designers and
agent designers. It is reassuring from the system designers'
viewpoints that the market efficiency of the UMDL does
not decrease as sharply as one might expect and that the
worst-case market inefficiency is less likely to be realized
(since even though self-interested agents have the
capability of complex strategic reasoning, not all of them
will behave so). At present, we cannot determine the exact
demographics of the agent population for the best market
efficiency, but we are continuing experiments on many
different types of agent populations to get a better
understanding of the overall system behavior.
From the allocation-efficiency perspective, on the other
hand, agent designers learn that using the p-strategy does
not always pay off and that a simple strategy is sometimes
as effective. We are currently developing an adaptive p-
strategy to dynamically determine when to use the p-
strategy and when not to. An adaptive p-strategy will be
beneficial not only to a self-interested agent but also to the
overall system efficiency.

Acknowledgments

This research has been funded in part by the joint
NSF/DARPA/NASA Digital Libraries Initiative under
CERA IRI-9411287. The first author is partially supported
by the Horace H. Rackham Barbour scholarship.



--R

On Partially Controlled Multi-Agent Systems
Flexible Social Laws.
The Dynamics of the UMDL Service Market Society.
The Double Auction Market.
Lower Bounds for Efficiency of Surplus Extraction in Double Auctions.


Rules of Encounter: Designing Conventions for Automated Negotiation among Computers: The MIT Press.

Advantages of Strategic Thinking in Multiagent Contracts
Limitations of the Vickery Auction in Computational Multiagent Systems.
Advantages of a Leveled Commitment Contracting Protocol.
Social Laws for Artificial Agent Societies: Off-line Design

The Impact of Nested Agent Models in an Information Economy.
A Market-Oriented Programming Environment and its Application to Distributed Multicommodity Flow Problems
Mechanism Design for Automated Negotiation and its Application to Task Oriented Domains.
--TR
Rules of encounter
On social laws for artificial agent societies
Mechanism design for automated negotiation, and its application to task oriented domains
Online learning about other agents in a dynamic multiagent system
Price-war dynamics in a free-market economy of software agents
Conjectural Equilibrium in Multiagent Learning
The Dynamics of the UMDL Service Market Society
Dynamics of an Information-Filtering Economy
Emergent Properties of a Market-based Digital Library with Strategic Agents

--CTR
Samuel P. M. Choi , Jiming Liu, A dynamic mechanism for time-constrained trading, Proceedings of the fifth international conference on Autonomous agents, p.568-575, May 2001, Montreal, Quebec, Canada
Sascha Ossowski , Andrea Omicini, Coordination knowledge engineering, The Knowledge Engineering Review, v.17 n.4, p.309-316, December 2002
Hiranmay Ghosh , Santanu Chaudhury, Distributed and Reactive Query Planning in R-MAGIC: An Agent-Based Multimedia Retrieval System, IEEE Transactions on Knowledge and Data Engineering, v.16 n.9, p.1082-1095, September 2004
Ricardo Buttner, A Classification Structure for Automated Negotiations, Proceedings of the 2006 IEEE/WIC/ACM international conference on Web Intelligence and Intelligent Agent Technology, p.523-530, December 18-22, 2006
