--T
Slipping and Tripping Reflexes for Bipedal Robots.
--A
Many robot applications require legged robots to traverse rough or
unmodeled terrain. This paper explores strategies that would enable
legged robots to respond to two common types of surface contact
error: slipping and tripping. Because of the rapid response required
and the difficulty of sensing uneven terrain, we propose a set of
reflexes that would permit the robot to react without modeling or
analyzing the error condition in detail. These reflexive responses
allow robust recovery from a variety of contact errors. We present
simulation trials for single-slip tasks with varying coefficients of
friction and single-trip tasks with varying obstacle heights.
--B
Introduction
R OUGH terrain occurs not only in natural environments
but also in environments that have been constructed
or modified for human use. Currently, most legged
robots lack the control techniques that would allow them
to behave robustly on such relatively simple rough terrain
as stairs, curbs, grass, and slopes. Even smooth terrain
becomes difficult to traverse if it includes small obstacles,
loose particles, and slippery areas. Many control systems
for bipedal robots have assumed steady-state running over
smooth surfaces, but some have explored control techniques
for rough terrain. Statically stable robots, which always
maintain their balance over at least three legs, have used
controllers with foot-placement algorithms to insure viable
footholds. However, for dynamically stable robots,
which run with a ballistic flight phase, constraints on timing
and foot placement increase the difficulty of designing
controllers that can anticipate rough terrain or react to er-
rors. This paper demonstrates the effectiveness of preprogrammed
high-level responses to errors during locomotion
in a complex dynamic environment. A suite of responses
allows a simulated, three-dimensional, bipedal robot to recover
from slipping on low friction surfaces and tripping
over small obstacles (Figure 1).
Many ground contact errors would be avoided if the control
system could guide the robot around slippery areas
and obstacles. However, the approximate nature of sensor
information obtained at a distance means that it is not
always possible to sense the surface properties of terrain
before making contact. For example, small holes, bumps,
debris, and sticky or slippery areas are difficult to detect
from a distance with current technology. If the robot cannot
detect and avoid or prepare for surface features in ad-
vance, then robust locomotion on rough terrain requires
that the robot respond to unexpected features after the
contact error has occured and before the robot crashes. For
College of Computing, Georgia Institute of Technology, Atlanta,
GA 30332-0280. [gboonejjkh]@cc.gatech.edu.
Submitted to Autonomous Robots.
Slip Sequence
Trip Sequence
Fig. 1. Examples of a Slip and Trip. Without the addition of
reflexes for recovering from slips and trips, the simulated robot does
not respond successfully to slippery areas or contact with an obstacle.
Foot Foot
3 degree of freedom
hip joint for each leg
1 degree of freedom
telescoping leg joint
for each leg
Rearward Leg
Body
Direction of Travel
Forward Leg
Fig. 2. Biped Structure. The simulated bipedal robot consists of a
body and two telescoping legs. Each leg has three degrees of freedom
at the hip and a fourth degree of freedom for the length of the leg.
dynamically stable robots, the time available for modeling
the surface and planning an appropriate reaction is severely
limited. In the case of the dynamically stable bipedal robot
shown in Figure 2, the controller may have less than a few
hundredths of a second in which to choose or plan an appropriate
recovery.
We define reflexes as responses with limited sensing and
no explicit modeling. That is, the robot can detect a slip
or a trip, but makes no attempt to estimate the properties
of the surface or obstacle or to calculate a corresponding
recovery plan. Instead, the slipping and tripping sensors
trigger fixed responses. These reflexes are defined at a high
level, such as reconfigurations of the leg positions, and at
a low level, such as modifications of servo gains. Just as
animal motor programs can be considered both open-loop
and closed-loop[1], several low-level feedback control laws
operate during the primarily open-loop reflex responses.
For example, a reflex may reconfigure the leg position, but
sensing is used to determine transitions in the leg controller
state machine during the recovery step.
Fig. 3. Physical Biped Slip. Planar two-legged robot running
across an oily spot on the floor. Footage from the MIT Leg Labora-
tory. [Frames: 0, 35, 70, 91, 105, 140]
During experimentation with a physical, planar biped,
the robot sometimes slipped on hydraulic oil or tripped on
cables in its path. Because the robot had no responses
customized for these error conditions, it almost always immediately
crashed. This paper reports a set of fixed reflexes
that enable robust recoveries for a simulated three-dimensional
robot in tasks involving a single slip or trip.
In the next section, we describe previous approaches to
legged locomotion in rough terrain. In Section III, we consider
biological reflexes. Section IV describes the simulated
bipedal robot and its control system. The slipping prob-
lem, slipping reflexes, and simulation results are presented
in Section V, followed by the tripping problem, tripping re-
flexes, and results in Section VI. The reflex approach and
results are discussed in Section VII.
II. Locomotion on Rough Terrain
A suitable foothold is one that allows a legged system
to maintain balance and continue walking or running. For
statically stable locomotion, the difficulty is not in placing
the robot's feet on footholds, but in deciding which
locations on the terrain provide suitable footholds. Successful
locomotion on rough terrain was demonstrated by
the Adaptive Suspension Vehicle[2] and by the Ambler[3],
[4], [5]. These large, statically stable machines traversed
grassy slopes, muddy cornfields, and surfaces that included
railroad ties and large rocks. Static stability allowed these
robots to emphasize detection at a distance and avoidance
of obstacles and uncertain footholds.
Klein and Kittivatcharapong[6] proposed algorithms for
insuring that foot forces remain within the friction cone
and identifying situations in which these constraints, or the
desired body forces and torques, could not be achieved.
Their work addressed prevention of slipping and did not
consider sensor noise or responses to unmodeled surfaces.
For dynamically stable robots, the control of step length
for locomotion on rough terrain interacts with the control
of balance. Hodgins and Raibert[7] implemented three
methods for controlling step length of a running bipedal
robot. Each method adjusted one parameter of the run-0.5hip
altitude
forward
speed
(m/s)
pitch
-2020leg
angle
foot
position
time
Fig. 4. Slipping Data of the Physical Robot. The physical
planar robot slipped on oil during a laboratory experiment at the
point indicated by the vertical dotted lines. The top three graphs
show the height, forward speed, and orientation of the body. The
bottom two graphs show the angles of each leg and the position of
each foot on the ground. For each step but the last, the foot is
stationary while it is on the ground.
ning cycle: forward running speed, running height, or duration
of ground contact. In laboratory demonstrations, a
biped running machine used these methods for adjusting
step length to place its feet on targets, leap over obstacles,
and run up and down a short flight of stairs. However,
unlike the tasks described below, the size and location of
the objects were known to the controller in advance.
developed algorithms for running on terrain that
was known to be slippery. By running slowly, the robot
generated nearly vertical foot forces. His controller used
a priori knowledge or estimation of friction coefficients to
prevent slipping by confining control forces and torques to
slip-free regions.
Kajita and Tani[9] used an ultrasonics sensor to construct
a ground profile of terrain that consisted of horizontal
surfaces at varying heights. Yamaguchi et al have
built a bipedal robot that uses feet to sense ground inclinations
and plan appropriately[10], although it was not able
to react to slips or trips.
III. Reflexive Responses to Errors
Biological systems use many different reflexes in locomotion
and manipulation. Reflexes help to restore balance
when perturbations occur during walking or stand-
ing[11], [12], [13]. The role of reflexes in walking is com-
plex: the same stimulus elicits a different response in the
stance phase than in the swing phase[14], [15], [16]. Touching
the foot of a cat or human during a swing phase, for
example, will cause the leg to flex, raising the foot. If an
obstacle caused the stimulus, this response might lift the
foot over the obstacle and allow walking to continue. During
the stance phase, a stimulus delivered to the foot causes
the leg to push down harder, resulting in a shorter stance
phase. Although these actions are opposite, both facilitate
the continuation of locomotion.
Robotics has adopted the term "reflex" from the biological
literature, but in both biology and robotics the precise
definition of the term varies from study to study. Most
researchers in robotics use the term to mean a quick response
initiated by sensory input. Some require reflexes to
be open-loop and to proceed independently of subsequent
sensory input[17], [18]; others apply the term more loosely
to describe actions that are performed with feedback until
a terminating sensory event occurs[19]. In some cases, reflexes
refer to general purpose actions[20], [21] and in others
only to actions taken to correct errors or to compensate for
disturbances[19] or transitions[22].
Brooks's subsumption architecture[21] combined several
simple reflex-like actions to produce complex behaviors
such as six-legged walking. A global gait generator specified
the order of leg use while inhibitory connections between
the legs prevented conflicting reflexes from acting
simultaneously. Other hexapod robot researchers have designed
subsumption controllers for rough terrain[23] and
have integrated reactive leg control with gait planning for
rough terrain[24].
Hirose[20] built and controlled a statically stable
quadruped that used a reflexive probing action to climb
over objects and to walk up and down steps without visual
input or a map of the terrain.
Wong and Orin[19] implemented two reflex responses for
a prototype leg of the Adaptive Suspension Vehicle. Using
velocity and hydraulic pressure information from sensors
at the joints, they were able to detect foot contact and
slippage. A foot contact reflex reduced the peak forces at
touchdown. A foot slippage reflex was used to detect and
halt slipping.
Reflex responses have also been used in manipulation.
Tomovic and Boni[17] used a reflex response to implement
grasping for the Belgrade prosthetic hand. Bekey and To-
movic[18] continued the exploration of prosthetic control
systems with a rule-based technique that relied on sensory
data and fixed response patterns.
IV. Dynamic Bipedal Robots
The simulated robot used in our research is based on
a planar bipedal robot constructed by Raibert and col-
leagues[25], [26]. The simulated robot is three-dimensional
and has three controlled degrees of freedom at each hip and
one for the length of each leg (Figure 2). In the physical
robot, the leg contains a hydraulic actuator in series with
an air spring. The simulation models the spring and actuator
as a linear spring with a controllable rest length. In
Fig. 5. Simulated Biped Slip. The dark circle represents an area
of the floor with a reduced coefficient of friction. Without slipping
reflexes, the simulated robot is unable to complete a step on a slippery
surface. The first leg slips, almost immediately becoming airborne
as it accelerates forward. As the body falls, the second leg hits the
surface and also slips. The second leg continues to accelerate forward.
[Friction coefficient: 0.04. Times (s): 0.0, 0.06, 0.09, 0.11, 0.12, 0.13]
experiments with the physical robots, hydraulic fluid occasionally
created slippery spots that caused the robot to fall

Figures

3 and 4). A simulation of a similar fall is plotted
in

Figures

5 and 6. The physical robot was also able to
climb stairs and jump over boxes[26]; however, the positions
of the obstacles were known in advance. The current
research extends the controller to handle unexpected slips
and unanticipated collisions with a box.
The controller achieves dynamically stable, steady-state
running by decomposing the control problem into three
largely decoupled subtasks: hopping height, forward ve-
locity, and body attitude. Hopping height is maintained
by adding enough energy to the spring in the leg during
stance to account for the system's dissipative losses.
Forward velocity is maintained by choosing a leg angle at
touchdown that provides symmetric deceleration and acceleration
as the leg compresses and extends. The attitude
of the body (pitch, roll, and yaw) is maintained with
proportional-derivative servos that apply torques between
the body and the leg while the foot is on the ground.
The robot control system is implemented as a state machine
that sequences through the flight and stance phases
for each leg, applying the control laws that are appropriate
for each state. As shown in Figure 7, flight is followed
by a stance phase of four states. During loading , the
foot makes contact with the ground and begins to bear the
weight of the robot. During compression, the leg spring
is compressed by the downward velocity of the robot. After
the spring has stopped the vertical deceleration of the
body, the body begins to rebound during thrust . As the leg
reaches maximum extension during unloading , it ceases to
bear weight. After liftoff, the roles of the legs are reversed
and the second leg is positioned forward in anticipation
of touchdown. For further details on the control system,
see [26] and [25].
The control system's state machine depends on measurements
of leg length to determine state transitions dur-0.20.61.0
hip
altitude
forward
speed
(m/s)
-0.3
-0.2
-0.0pitch
(rad)
leg
angle
(rad)
foot
position
time
Fig. 6. Slipping Data of the Simulated Robot. After taking
five steps on a surface with a friction coefficient of 1.0, the simulated
robot steps on a region with a coefficient of 0.20 and slips. Because
no slipping recovery strategies are active, the robot falls. The top
three graphs show the height, forward speed, and orientation of the
body. The bottom two graphs show the leg angles of both legs and
the position of each foot on the ground. When the foot slips (vertical
dotted line), it leaves the ground and the other foot soon impacts.
Loading Compression Thrust Unloading
Direction of Travel
Flight
Fig. 7. Control States. Running is achieved by dividing each step
into several states and applying the appropriate control laws during
each part of the running step.
ing steps. Slips may interfere with control by altering leg
lengths unexpectedly. The transition from loading to com-
pression, for example, occurs when the leg has shortened
by a small amount. After a slip, the leg may lengthen. Not
only must slipping reactions prevent these errors, but they
must minimize interference with normal control, such as
the adjustment of body attitude.
V. Slipping
The impact of the foot on the ground, the weight of the
robot, and the forces and torques generated by the hip and
leg servos create a force on the ground during a step (Fig-
F
Direction
of Travel
Fig. 8. Foot Forces and the Friction Cone. During a step, the
foot produces forces on the ground, F , with horizontal and vertical
components,F h and Fv . Slipping occurs when the angle of the impact
force is outside the friction cone.
ure 8). Slipping occurs when the horizontal component of
the force of the foot on the ground, F h , exceeds the maximum
force of static friction generated by the ground. A
simple model of this interaction is that the maximum force
of static friction is directly proportional to the normal force
of the ground on the foot, F v . Under this model, slipping
will occur when the horizontal component of F exceeds the
vertical component times the coefficient of static friction:
where - s is the coefficient of static friction. When slipping
occurs, the horizontal force returned by the ground is given
by
where - d is the coefficient of dynamic friction and the sign
of F h should remain unchanged. These relationships define
a friction cone, illustrated in Figure 8. When the force of
the foot on the ground lies within the friction cone, the
foot does not slip. The angle of the cone is given by
Note that this cone is defined for foot forces, not leg angles.
The motion of the leg prior to impact affects the direction
of the foot's force on the ground, as do the control torques
applied to the hip joint and the leg spring. Foot forces are
most likely to exceed the friction cone at the beginning or
end of a step, when the angle of the force vector is greatest.
Slips at the beginning of a step are more likely than slips
at liftoff because the foot is moving with respect to the
ground at touchdown. In contrast, the foot is stationary at
liftoff. Slips during liftoff are often less critical because the
step is nearly complete; the controller has already executed
corrections during the step.
Our simulations assumed minimal sensory information:
the properties of the surface and the extent of the slipping
area were not available to the control system. The
controller could not adjust the leg configuration prior to
touchdown or try to position the foot outside the slippery
area to find a secure foothold. Neither the forces on the feet
nor the coefficients of friction were available to the control
system. However, the control system could detect slips.
In the simulation, slips were detected when a foot moved
while in contact with the ground. The control system of a
Increase Leg Force
Increase Hip Torque
Direction of Travel
Fig. 9. Same-Step Reactions. When a slip has been detected, a
torque can be applied at the hip to reduce the horizontal force on the
ground or the leg can be extended to increase the vertical force.
physical robot can detect slips indirectly by measuring joint
angles and velocities or structural forces. Direct methods
include encoder wheels and micro-slip detectors.
When the control system has detected a slip, it can attempt
to continue the step or abandon that step and pull
the leg off the ground. In the first case, hip torques or leg
forces can be applied to increase the vertical component of
the foot force while decreasing the horizontal component,
thus returning the force vector to within the friction cone.
If the step is abandoned, one of the legs can be positioned
during the next flight phase so that the leg angle at the
next touchdown will be near vertical or both legs can be
moved to a triangular configuration. In the simulations
described here, we defined a response to be successful if
the robot was able to continue running after slipping and
taking a recovery step in the slippery region, then taking
subsequent steps on a non-slippery surface. Changes in velocity
or hopping height were not considered failures provided
that the control system was able to maintain balance
and return to steady-state running.
A. Same-Step Response Strategies
Reacting to a slip requires careful management of the
horizontal and vertical components of the forces generated
by the impact of the foot on the ground. Initial responses
to a slip can attempt to alter the force vector immediately
by generating a torque at the hip or a force axial to the leg

Figure

9).
The first reaction responds to a slip by increasing the
hip torque by a fixed amount. In most cases, this action
increases the vertical component of the foot's force
on the ground. After the foot stops slipping, the hip controller
reverts to its normal task of correcting pitch errors.
This strategy may have undesirable consequences because
a torque applied at the hip also increases the forward velocity
of the body thus increasing the likelihood of a slip
on a subsequent step. Applying a torque at the hip also interferes
with the correction of body attitude during stance
and tends to increase the pitch of the body.
The second reaction responds to a slip by compressing
the leg spring a fixed amount to increase the vertical force
at the foot and regain a foothold. In a normal running
step, the leg spring stores energy during the stance phase
and causes the body mass to have approximately equal and
opposite vertical velocities at liftoff and touchdown. To
maintain the duration of flight, the control system length-
l d
l
d
l
l
Ground
Contact
Maximum
Compression
Detected
Maximum
Compression
Fig. 10. Forcing the Foot into the Ground. In a normal step
(top), energy is added into the leg spring at the moment of maximum
compression. In the forced step (bottom), the loading on the leg is
increased just after touchdown, forcing the foot into the ground and
shortening the step duration. l d is the desired leg length. \Deltal is the
change in desired leg length that returns the robot to the desired
hopping height.
Rebound
Compress
Detect Slip Set Front Leg
Front Foot Reposition
Detect Slip Rebound
Compress
Set Rear Leg
Rear Foot Reposition
Detect Slip Rebound
Compress
Triangle
Stable Triangle
Fig. 11. Repositioning Strategies. After a slip has been detected,
the initial step is abandoned and one or both legs are repositioned for
the next step. The leg angle at touchdown on the next step will be
closer to vertical, keeping the impact force vector within the friction
cone.
ens the leg to add energy equivalent to that lost due to
internal mechanical losses and to the impact of the un-
sprung mass of the lower leg with the ground. In a normal
step, thrust occurs at the moment of maximum compression
of the spring (Figure 10). In responding to a slip, the
control system may alter this sequence by extending the
leg as soon as the slip is detected. If the leg is close to
vertical, this extension increases the vertical component of
the foot's force on the ground and may stop the slip. The
extension also adds energy into the leg spring. The extra
energy is removed later in the step by lengthening the leg
spring when the leg is vertical, leaving the hopping height
unchanged (Figure 10).
One effect of this reaction is to slow the robot, a desirable
6effect when the surface is slippery. However, the
foot forcing reflex may lead to a crash if the leg geometry
and velocity is such that extending the leg increases the
horizontal forces on the foot more than the vertical forces.
Thus, the foot forcing reflex may not be sufficient in itself
to recover from slips.
The foot forcing reaction shortens the period of time
during which the spring is passively compressed, leading to
a shorter stance phase and a style of running that utilizes
quick hops rather than long strides. We have observed that
this quick-stepping behavior is a useful method for running
briefly on slippery surfaces because the leg angle at touchdown
is near vertical. However, the shorter stance phase
also reduces the available time for correcting the body attitude
and makes steady-state running difficult to achieve.
B. Repositioning Strategies
The step on which the initial slip occured may be abandoned
by immediately lifting the foot; the resulting flight
phase provides a brief opportunity to prepare for another
landing on the slippery surface. By reconfiguring the legs
during the flight phase following the initial slip, the control
system can attempt to keep the foot forces within the friction
cone. Because the coefficient of friction is not known,
the size of the friction cone is unknown. Therefore, the
best place for the foot at the next touchdown is directly
under the body, making the leg vertical at touchdown.

Figure

11 diagrams the strategies that reposition the legs.

Figures

12, 13, and 14, contain sequences showing the repositioning
strategies involved in recovering from a slip.
After a slip has been detected, both legs may be used in
the recovery by configuring them in a narrow fixed triangle
vertically centered under the body. The control system
attempts to hold this triangle throughout the subsequent
step and does not apply the normal pitch, roll, and yaw
adjustments. Instead, the robot bounces, letting the geometric
configuration provide stability rather than using
active control. The leg angles in normal running are nearly
symmetric during the flight phase of steady-state running;
the control system only has to equalize the leg lengths to
create a symmetric triangle. Because the extent of the friction
cone is unknown, the triangle is narrowed so the legs
are close to vertical. When both feet contact the ground,
foot forcing is applied to each to reduce the time of stance.
After both feet have lifted off the ground, the control returns
to a normal flight state.
C. Slipping Results
The slipping strategies were tested in simulation by varying
the initial velocity of the robot and the coefficient of
friction to produce multiple runs. For each trial, a circular
slippery area was simulated at the location of the first
footfall. During successful runs, the robot stepped once in
the slippery area and then five additional times on a non-
slippery surface. The initial velocity was 2.5 \Sigma 0.25 m/s.
The size of the slippery area for each reaction strategy was
large enough to prevent a foot from sliding to the edge, a
situation that allowed an easy recovery. The slippery area
was small enough that subsequent footfalls were located
outside of it. Twenty friction coefficients between 0.025
and 0.5 were used. Both static and dynamic coefficients
were set to the same value for each trial of 20 simulations
with different initial velocities. The robot was judged able
to recover from a slip at a given coefficient of friction if at
least half of the trials were completed successfully.
For the successful trials, we computed a measure of the
error at touchdown of the step after the recovery step that
followed the slip. The error measure was the summed absolute
values of differences between the actual and desired
angles for the body yaw, ff, pitch, fi, and roll, fl:
The error calculation was designed to measure how well
the slip recovery strategy had positioned the robot after
the slip step, the recovery step, and the subsequent ballistic
flight. The errors for the successful trials were averaged
to compute the data shown in Figure 15. This graph illustrates
the tradeoff between the two types of strategies.
With no active reflexes, the controller is able to negotiate
friction coefficients as low as 0.28. Upon contact, the foot
slides; as it is loaded, the vertical and horizontal forces
increase, pushing the foot back under the body. Eventually
the forces on the foot reenter the friction cone, slipping
ceases, and a normal step ensues. The foot forcing strategy
causes the foot to slide further out from under the body,
leading to fewer recoveries at lower coefficients of friction
than the steady-state control system. We observed this
effect for several running speeds and heights. However, it
may be a consequence of the geometry of the robot design;
foot forcing may be useful for slow moving robots or those
with other gait patterns. The hip torque reflex succeeds at
pulling the leg back and enables recoveries as low as 0.22.
Note that hip torque does indeed increase the body pitch,
producing increased errors shown in the graph.
The repositioning strategies delay error correction while
the legs are reconfigured. As a result, the repositioning
strategies produce larger errors upon return to normal running
than the foot forcing and hip torque reflexes. However,
the repositioning strategies are able to recover from slips on
surfaces with smaller coefficients of friction. By lifting the
leg and repositioning it within the friction cone, the front
and rear repositioning reflexes are able to recover from surfaces
with coefficients as low as 0.07 and 0.15, respectively.
The front repositioning strategy is more successful than the
rear repositioning strategy because it more effectively reduces
the relative speed of the foot over the ground before
impact. Because the robot is moving forward while the
foot is airborne, bringing the rear leg forward increases the
relative speed between the foot and the ground. The front
repositioning strategy brings the front leg back, reducing
the relative speed. On impact, the foot with the lower relative
speed is subjected to smaller horizontal forces and is
less likely to slip.
The robot experiences increased slipping as the coefficient
of friction decreases, but it often recovers because
Fig. 12. Front Leg Repositioning. The front leg is lifted and repositioned for a more vertical impact. [Friction coefficient: 0.20. Times
Fig. 13. Rear Leg Repositioning. The rear leg is brought under the slipping robot to arrest the fall. The newly planted leg slips upon
takeoff, but the step is successful because the body attitude is not disturbed significantly. The robot is able to continue running. [Friction
coefficient: 0.20. Time (s): 0.0,
Fig. 14. Stable Triangle Recovery. After detecting a slip, the robot forms a stable triangle. Although the legs slip just prior to liftoff,
the control system is able to recover because the slip is symmetric and occurs at the end of the step. [Friction coefficient: 0.02. Times (s):
Friction Coefficient0.10.30.50.70.9Error
None
Foot Force
Hip Torque
Front Reposition
Rear Reposition
Stable Triangle
Fig. 15. Touchdown Errors. If the robot recovers from a slip,
it starts the next step with some error. This graph illustrates the
tradeoff between smooth running and slip recovery. Lower curves
indicate smaller errors in body and leg angle. Longer curves indicate
that a greater range of friction coefficients can be tolerated.
the slips occur at the end of the recovery step. Figure 13
shows a normal ground contact and rebound followed by
a slip upon takeoff. Because the hopping height, forward
speed, and body attitude control algorithms have already
been applied, the slip has little effect on the configuration
of the robot. Figure 14 shows slipping upon takeoff for
the stable triangle strategy, which applies no attitude correction
during the recovery step. However, as Figure 14
shows, both legs slip symmetrically, cancelling the effect of
their torque on the body. Thus, the stable triangle reflex
is capable of recovering from surfaces with coefficients as
low as 0.025.
VI. Tripping
For steady-state running, the control system detects expected
events, such as foot contact or initial leg spring
compression, and uses these signals to transition between
control states. During each state, it applies the appropriate
collection of control laws. Tripping occurs when the robot
feet or legs encounter unexpected obstacles, causing the
controller to execute inappropriate servo commands (Fig-
ure 16).
To explore reflexive responses to tripping, we considered
the task of returning the robot to steady-state running after
Fig. 16. Simulated Trip. The front foot contacts the vertical face
of a box and slides down the surface. With no response, the robot is
unable to continue running and crashes. [Times (s): 0.0, 0.05, 0.09,
a collision with a box. The existing controller allowed the
robot to continue running for some unexpected contacts.
For example, foot contacts on the top surfaces of boxes,
though premature in the flight phase, allowed a normal step
to occur. Oblique contacts, such as brushing the side of the
box, also did not usually prevent running from continuing.
Other contacts, such as a foot or leg contacting the vertical
face of a box, resulted in crashes.
A. Tripping Responses
As in the case of slipping, the sensing requirements were
minimal. The controller detected only that a contact with
a foot or leg had occurred. It did not detect where on
the leg the contact had occurred. These conditions could
be determined on a physical robot with contact sensors on
the legs or via the existing joint angle sensors.
When a leg or foot hits the front surface of a box, a foot
must be repositioned to find a foothold on or beyond the
box. If the forward foot hits the box, either the forward or
the rear foot can be retracted and repositioned to contact
the top surface of the box, where good footholds are avail-
able. We call these strategies the "front lift" and "rear lift"
reflexes, depending on which leg is lifted to the top surface
of the box. If the rear leg hits a box, the leg can be pulled
back, allowing it to pass over the box without contact. We
refer to this strategy as "rear pull." These reflexes are diagrammed
in Figure 17 and shown in Figures 18, 19 and 20.
B. Tripping Results
To test the tripping reactions, boxes of varying heights
were placed in the path of a robot running in steady state.
For the front lift and rear lift reflexes, the vertical face
of each box was divided into 20 impact heights and the
robot was released with the front foot 2 cm from the box
at each height. For the rear pull reflex, the robot was
placed straddling boxes of varying heights with the forward
foot making an initial ground contact in a normal running
step. As the box height increased, the rear leg eventually
contacted the box as it swung forward. In all simulations,
Compress Rebound
Detect Trip Set Front Leg
Front Lift Trip Response
Rebound
Detect Trip Compress
Set Rear Leg
Rear Lift Trip Response
Rebound
Detect Trip Compress
Pull Rear Leg
Rear Pull Trip Response
Fig. 17. Trip Recovery Strategies. After a trip has been detected,
one of the legs is repositioned in an attempt to contact the top surface
of the obstacle or avoid it entirely.
the initial forward speed of the robot was varied by a small
random factor.
With no reflex responses, the robot was unable to continue
running following a trip. The front lift and rear lift
response curves show that as the box heights increase, the
tripping reflexes are less likely to produce a recovery (Fig-
ures 21 and 22). The number of crashes increases as the
box height increases. This increase in crashes is due to the
increasing distances to the box top as the height increases.
If the foot hits the box near the top, there may be sufficient
time to lift it to the top of the box. However, as the box
height increases, fewer potential contact points are near the
top edge of the box.
To measure the disturbance to normal running, we computed
the same error measure as was used in the slipping
trials. The error measure was the sum of the absolute values
of the errors between actual and desired yaw, ff, pitch,
fi, and roll, fl:
The bottom graphs in Figures 21 and 22 show that if the
robot is able to recover, it does so with approximately the
same error independent of box height.
The front lift reflex causes less touchdown error than
does the rear lift reflex. To recover with the front foot, the
foot must lift over the box edge, whereas a recovery with
the rear foot must move the rear foot from its position behind
the robot to the box. The rear lift reflex accumulates
more errors during the additional flight time.
With no reflex responses, the robot is unable to recover
when the rear leg hits a box of any height. However, Figure
23 shows that pulling the leg back after the initial con-
Fig. 18. Front Lift Trip Response. The front leg is lifted and repositioned to achieve a better foothold. [Times (s): 0.0,
Fig. 19. Rear Lift Trip Response. The rear leg is lifted and repositioned to achieve a better foothold. [Time (s): 0.0, 0.07, 0.09, 0.11,
Fig. 20. Rear Pull Trip Response. When a leg hits an obstacle while swinging forward, it is pulled back to allow it to clear the obstacle.
[Times
0.25515Number
of
Crashes
Front Lift Response Error Curves
at
Touchdown
(rad.)
Fig. 21. Front Lift Results. The top graph shows the number
of crashes as the obstacle height increases. The bottom graph shows
the average error in body attitude at the start of the next step after
recovering from a trip. As the box height increases, trips more often
lead to crashes. Note however, that the errors remain relatively
constant for those trials where the robot is able to recover and continue
running. There were 20 runs per box height. Box heights below
5 cm did not cause trips; box heights above 28:75 cm did not allow
recovery.
tact allows the robot to pass the leg over boxes as high
as 23 cm without crashes. For boxes between 23 cm and
cm, the leg, though pulled back, hits the box again, but
may still be able to recover. Above 25 cm, the boxes are
too high for the retracted leg to pass over, increasing the
number of crashes.
VII. Discussion and Conclusions
We have considered the problem of creating reflexes for
slipping and tripping given only the information that a
slip or a trip has occurred. We evaluated two kinds of responses
to slipping, one-step strategies and two-step strate-
gies, depending on whether the correction was applied in
the slip step or in the following step. Responses that continue
the slipping step produce smoother recoveries but
only for higher friction coefficients. Responses that abandon
the slipping step are capable of negotiating surfaces
with a larger range of friction coefficients but accumulate
larger errors.
Our slipping simulations focused on traversing a patch
in which one footfall slipped; however, some observations
can be made regarding running on a slippery surface. For
higher coefficients of friction, the strategy with the smallest
errors, the hip torque reaction, is most likely to succeed.
The repositioning strategies are limited because continual
0.25515Number
of
Crashes
Rear Lift Response Error Curves
at
Touchdown
(rad.)
Fig. 22. Rear Lift Results. Taller boxes are more likely to cause a
crash. However, if the robot does recover, it does so with a relatively
constant error. The rear lift reflex recovers about as often as the front
lift reflex (Figure 21), but with higher resulting errors. There were
runs per box height.
0.25515Number
of
Crashes
Rear Pull Response Error Curves
at
Touchdown
(rad.)
Fig. 23. Rear Pull Results. Pulling the tripping foot back so it
passes over the box allows the robot to continue running, but with
some additional attitude error. For box heights below 13:75 cm, the
rear foot passes over the box without tripping due to the retraction
of the leg during running. There were 20 runs per box height with
variation in the initial velocity of the robot.
slipping would cause them to abandon every other step.
However, all of the reflexive strategies except the hip torque
strategy reduce the forward velocity during slip recovery,
thus making the foot forces more vertical on subsequent
steps. Preliminary results indicate that only a few slipping
reactions may be required to achieve steady running on a
slippery surface without slipping.
If the foot is moving with respect to the ground at touch-
down, the horizontal force on the ground is increased in the
direction of motion, thereby increasing the danger of slip-
ping. Strategies for running on slippery surfaces should
try to reduce the relative motion of the foot between the
ground prior to impact. This principle, commonly called
ground-speed matching, is useful in slip prevention. It also
reduces the impact of ground contact and is used by animals
and human runners.
We evaluated several reflexes that repositioned the foot
after a trip to find a viable foothold or to avoid the box. For
trips in which the forward foot struck the vertical face of the
lifting either the front or rear foot allowed recoveries.
However, lifting the front foot produced the smallest errors
at the start of the subsequent step. For trips in which the
rear leg hit the box, pulling the leg back to let it pass over
the box allowed the robot to continue running, but with
some additional error in body attitude.
The slipping and tripping reflexes have been validated
for single slip or trip tasks. The next task is to integrate
the reflexes to enable running through general rough terrain
with arbitrary obstacles and slippery areas. Additional
controllers may be used to select among the applicable reflexes
based on sensing or modeling of the environment.
Finally, within the time constraints of the rapidly evolving
dynamic system, limited replanning may be used to aid
recovery.
These slipping and tripping reflexes are robust despite
their minimal sensing requirements. Without determining
friction or obstacle properties, without modeling the
surface, and without online planning, the reflexes enable
the robot to continue running under many circumstances.
Even if more sensing and computational resources are available
for foot placement, surface modeling, and replanning,
reflexes such as these will remain necessary due to sensing
and modeling errors.
Slipping and tripping reflexes are fundamental to many
rough terrain problems. Slopes, uneven surfaces, and small
obstacles create oblique impact angles that can cause slips
and trips. Reflexive responses will facilitate the successful
traversal of these terrains in combination with other
reflexive strategies for foothold errors such as adhesions,
bounces, and loss of firm footing.
VIII.

Acknowledgments

This project was supported in part by NSF Grant No.
IRI-9309189 and funding from the Advanced Research
Projects Agency.



--R

Motor Control and Learning
"The adaptive suspension vehicle"
"Configuration of autonomous walkers for extreme terrain"
"Terrain mapping for a walking planetary rover"
"Perception, planning, and control for autonomous walking with the ambler planetary rover"
"Optimal force distribution for the legs of a walking machine with friction cone con- 1straints"
"Adjusting step length for rough terrain locomotion"
"Realistic animation of legged running on rough ter- rain"
"Adaptive gait control of a biped robot based on realtime sensing of the ground profile"
"De- velopment of a dynamic biped walking system for humanoid: Development of a biped walking robot adapting to the humans' living floor"
"Adapting reflexes controlling the human pos- ture"
"Fixed patterns of rapid postural responses among leg muscles during stance"
"Balance adjustments of humans perturbed while walking"
"Stumbling correct reaction: A phase-dependent compensatory reaction during locomotion"
"Phasic control of reflexes during locomotion in vertebrates"
"Corrective responses to perturbation applied during walking in humans"
"An adaptive artificial hand"
"Robot control by reflex ac- tions"
"Reflex control of the prototype leg during contact and slippage"
"A study of design and control of a quadrupedwalking vehicle"
"A robot that walks: Emergent behaviors from a carefully evolved network"
"Robot impact control inspired by human reflex"
"Control of a six-legged robot walking on abrupt terrain"
"Developing planning and reactive control for a hexapodrobot"
Legged Robots That Balance
"Running experiments with a planar biped"
--TR

--CTR
Christophe Sabourin , Olivier Bruneau , Gabriel Buche, Control Strategy for the Robust Dynamic Walk of a Biped Robot, International Journal of Robotics Research, v.25 n.9, p.843-860, September 2006
Tao Geng , Bernd Porr , Bernd Florentinwrgtter, A Reflexive Neural Network for Dynamic Biped Walking Control, Neural Computation, v.18 n.5, p.1156-1196, May 2006
