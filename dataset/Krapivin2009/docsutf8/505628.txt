--T
Extraction and Optimization of B-Spline PBD Templates for Recognition of Connected Handwritten Digit Strings.
--A
Recognition of connected handwritten digit strings is a challenging task due mainly to two problems: poor character segmentation and unreliable isolated character recognition. In this paper, we first present a rational B-spline representation of digit templates based on Pixel-to-Boundary Distance (PBD) maps. We then present a neural network approach to extract B-spline PBD templates and an evolutionary algorithm to optimize these templates. In total, 1,000 templates (100 templates for each of 10 classes) were extracted from and optimized on 10,426 training samples from the NIST Special Database 3. By using these templates, a nearest neighbor classifier can successfully reject 90.7 percent of nondigit patterns while achieving a 96.4 percent correct classification of isolated test digits. When our classifier is applied to the recognition of 4,958 connected handwritten digit strings (4,555 2-digit, 355 3-digit, and 48 4-digit strings) from the NIST Special Database 3 with a dynamic programming approach, it has a correct classification rate of 82.4 percent with a rejection rate of as low as 0.85 percent. Our classifier compares favorably in terms of correct classification rate and robustness with other classifiers that are tested.
--B
Introduction
In the field of researching on automated handwritten document processing system, hand-written
digit recognition still poses a very challenge to scientists and practitioners. The
difficulties arise not only from the different ways in which the single digit can be written,
but also from varying requirements imposed by the specific applications, such as recognition
of connected digit strings in ZIP codes reading and cheque reading.
The techniques for recognition of connected digit strings can be categorized into two
classes: Segmentation-based algorithms [1], [2], [3], [4], [5], [6], and Segmentation-free
algorithm [7], [8], [9], [10]. Recently, there are also some techniques reported to combined
the two techniques together to achieve a more reliable performance [11], [12]. In the first
class of algorithms, the segmentation procedures were applied before the recognition, and
in the later class algorithms, they combined the segmentation and recognition together.
The segmentation-based techniques were first applied in the recognition of connected char-
acters, while in recent years, more attention have been focused on the segmentation-free
techniques. The reason is that segmentation is ambiguous and prone to failure. Anther
reason that researchers paying more attention to segmentation-free techniques, especially
September 16, 1998
Fig. 1. Some samples selected randomly from NIST Special Database 3: (a), single digits; (b), connected
digit strings: from left to right, two connected digit strings, three connected digit strings, four
connected digit strings.
in handwritten word recognition, is that they believe the lexical information being used in
post-processing is powerful enough to achieve a reliable performance, and only need a not
very robust but fast classifier [13]. However, in the recognition of connected digit strings,
little lexical information can be applied in post-processing to help in choosing the correct
result from a set of recognition candidates, as in the word recognition. And from experience
gained from our previous research in segmentation-based handwritten digit string
recognition [14], [5], [6], we believe that, for both techniques, a reliable and robust classifier
that can distinguish legible digits from unsure patterns is utmost important to the system
performance, and this is the motivation that we developed the new classifier, which will
be introduced in this paper.
Fig. 1 are some samples of single and connected digits. We can see that degradation
caused by connection, overlap increase the difficult of the recognition.
Many new techniques have been presented in recently years for the recognition of isolated
digits, they are differ in the feature extraction and classification methods employed. Some
comprehensive reviews were given by Govindan [15] and Impedovo [16]; S. Lee et al gave
a classifier based on Radial Basis Network and Spatio-Temporal Features [17]; Z. Chi et
al proposed a classifier with Combined ID3-Derived Fuzzy Rules and Markov Chains [18];
another classifier based on Multilayer Cluster Neural Network and Wavelet features was
presented by S. W. Lee et al [19]; and D. H. Cheng et al presented a classifier based
on morphology [20]. Besides these, Trier presented a survey of the feature extraction
techniques [21].
Another technique applied in classifier designing is template matching, which is one of
the earliest pattern recognition techniques applied in digit recognition. In these years, it
re-attracted a lot of attention from many researchers because it is intuitive and maybe
have the ability to achieve a practical recognition performance. A number of studies
have been reported in the literature which have applied template-based techniques to
digit recognition. H. Yan proposed an Optimized Nearest-Neighbor Classifier for the
recognition of handprint digits [22], the templates are 8 \Theta 8 gray-scale images, rescaled
from the original 160 \Theta 160 normalized binary image. Wakahara uses iterated local affine
transformation (LAT) operations to deform binary images to match templates [23], the
templates here are 32 \Theta 32 binary images. Nishida presented a structure-based template
matching algorithm [24]. The templates are composite with straight lines, arcs and
corners, and the matching is based on the geometrical deformation of the templates.
Cheung et al proposed a kind of templates based on splines [25], he model digits with
a spline, and assume the spline parameters have a multivariate Gaussian distributions.
Revow et al gives another digit recognition algorithm based on spline templates [26], the
templates are elastic spline curves with ink-generating Gaussian "beads" strung along
their length. K. Jain et al presented a deformable templates matching algorithm based on
object contours [27], [28], the recognition procedure is to minimize the objective function
by iteratively updating the transformation parameters to alter the shape of the templates
so that the best match between the templates and unknown digits.
In this paper, we present a new template presentation scheme, a neural network approach
5for extracting templates and a evolutionary algorithm based templates optimization
approach based on this new presentation. Each template presented by a distance-
to-boundary distribution map is approximated by a rational B-spline surface with a set
of control knots. In training, first a cost function of the amplitude and gradient of the
distribution map is minimized by a neural network; then, the templates were optimized by
a optimization algorithm based on evolutionary algorithm. While in the matching step,
a similarity measure that takes into account of both the amplitude and gradient of the
distribution map is adopted to match an input pattern to templates.
The rest of this paper is organized as follows. The presentation of new templates is
given in section II; section III introduced the neural network for templates extraction; the
templates optimization part based on evolutionary algorithm is proposed in section IV;
section V is the experimental results and discussions; and the conclusion is given in section
VI.
II. Presentation of Templates
In our algorithm, the templates are presented by a rational B-spline surface with a set
of control knots. Curve and surface presentation and manipulation using the B-spline
form (non-rational or rational) are widely used in geometric design. In 1975, Versprille
proposed a rational B-splines to geometric design of curves and surfaces [29]. The work
outlined the important properties of rational B-splines, such as continuity, local control
property, etc. In recent years, B-spline curve (snake) have been used in the description
of objects [30], [31], as well as digits [25], [26]. With the B-spline estimation, information
concerning the shape of desired objects can be incorporated into the control parameters
of the curve or surface based templates.
However, there is a shortcoming in these approaches: the estimation of B-spline curve
exist a lot of uncertainties and prune to failure, because the corresponding parameters of
templates and input data should reflect the information in the same aspect of image. So, in
our algorithm, we use B-spline surface to estimate the distribution map of the digit image,
The number of the control points of surface, and the position of them are pre-specified, so
for each control point, the control area is certain, and the shortcoming can be avoided.
O fg
O bg
O b
Fig. 2. Definition of the distance-to-boundary distribution.
Input Binary Data
Distance Map
Distribution Map
Fig. 3. Converting binary data into a distribution map (one-dimensional example).
A. Presentation of Binary Digit Images
A binary digit image can be converted into a distribution map according to the distance
from pixel O (x;y) to the boundary between the foreground and background, as shown in
Fig. II-A. For a foreground pixel, we have d(x; y)  0, for a background pixel, we assume
it has a negative value, that is d(x;
\GammajD bg
(1)
September 16, 1998
Fig. 4. Control points of a template.
Let I(x; y) denote the value of pixel O (x;y) in the distribution map, it can be defined via
the following transformation:
where d max is the maximum value in distribution map, and is a constant to make
sure that a point on the boundary, O b with I(O b shown in Fig. 3. Obviously, the
value in distribution map reflect the posterior possibility of pixels in input binary image
belonging to foreground, and ridge of the map form the skeleton of digit.
B. Template Presented by rational B-spline Surface
Assume that the rational B-spline surfaces for the templates are fS(P j
where
are control points of template j, as shown in Figure II-B.
The rational B-spline surface can be defined as:
Normally, r is the order of the B-spline basis, and B r (x) is a vector of base
function given by
BN \Gamma1;r (x)C C C C C C C C A
For each basis, we have
and
is a knot vector of length N u , It is assumed that
The value of u i determine the position of control knots and should be pre-
defined. Here, to simplify to the B-spline surface, we define a knot vector as
f
r
z -
r
z -
In most applications,
the number of input data N i AE (N \Theta N ), the number of control points in a templates.
III. Template Extraction
The templates extraction algorithm is adapted from Yan's optimized nearest neighbor
classifier [32], which can be presented as a multi-layer neural network, as shown in Figure
5. The input data is a distribution map I. The hidden layer contains the patterns to be
selected. Each hidden node corresponds to a pattern. is the output
of the network, corresponding to N classes.
Input image
Output layer
Hidden Layer
Input Layer
Fig. 5. The template extraction model.
The output of the hidden node is given by:
OE j is a distance function that measure the similarity between the input feature I and
pattern S(P j ).
The connection weight from hidden node j to output node m is w jm , so the output of
the node is:
here, w jm can be a constance or linear function, or even non-linear function, but must
be pre-defined.
Assume that the desired and actual activities of the output node m are z m0 and z m
respectively for input I. Then for each j, we need to find p kl
so that the following energy
function is minimized:
According to generalized delta rule, a locally minimized p jk
j can be found by successively
applying an increment given by
September 16, 1998
\Deltap kl
@p kl
@zm
@zm
@p kl
@p kl
where ff is a learning factor.
In this algorithm, not only the value of the distribution map, but also the gradient
directions are considered:
1. Assuming the input distribution map is continuous, we have
where C s is a smooth factor, and
and fi j (x; y) is the angle between the gradient of prototype S j (x; y) and the gradient of
the distribution map I(x; y) at point O (x;y) . Obviously, 0  OE 1;j  1 and 0  OE 2;j  1. If
When an input image is given, its distribution map I can be obtained, so are @I
@x
@x
and
I 2
dy, therefore we have
sum
Z 1Z 1i @S j
@x I 0
@y I 0
x
I 0
x
Considering the differentiation property of the B-spline [33],
@x
r (x)
@x
similarly,
@y
@y
r (x)P y
where
ur \Gammau 0
ur \Gammau 0
ur \Gammau 0
ur \Gammau 0
ur \Gammau 0
ur \Gammau 0
The gradients of templates are also rational B-spline surfaces. Therefore, we have
September 16, 1998
kl
kl
kl
kl
I 2
sum
I
e kl
(B i;r (x)B j;r (y)) dx dy (24)
kl
I
x
dx dy (25)
where e kl is the effective control region of p kl and
nh
x I 0
y
(S y
io
io
In order to simplify the extraction algorithm, clustering algorithm was adapted: At
iteration t of the templates extraction procedure, as to an input distribution map, instead
of calculate all templates, only the templates with maximum OE j are upgraded. So, w jm
can be defined as:
where Sm is the set in which each index corresponds to a hidden node that represents
a prototype that belongs to the class represented by output node m, and m is the class
that the input distribution map belongs to. So, \Deltap j
kl can be given by:
kl
kl
kl
IV. Template Optimization by Evolutionary Algorithm
Evolutionary algorithms for optimization have been studied for more than three decades,
since L. J. Fogel et al published the first works on evolutionary simulation. Many years of
research and application have demonstrated that Evolutionary Algorithms, which simulate
the search process of natural evolution, are powerful for the global optimization. Current
Evolutionary Algorithms (EAs) include Evolutionary Programming (GP), Evolutionary
Strategies (ES), Genetic Algorithm (GA) and Genetic Programming (GP) [34]. T. Back
et al gave us a comparative study of the first three approaches [35]. And an introduction
of evolutionary techniques on optimization is given by D. B. Fogel [36].
Several applications of evolutionary templates optimization have been reported in [37],
[38], [39], [40]. However, in these algorithms, only one best template is extraction from
one set of training samples. Obviously, for most of object recognition problems, only
one template for a class of object is not enough for a reliable recognition system, more
templates should be extracted to achieve a better performance. Sarkar [41] presented
a fitness based clustering algorithm, which can be adapted for templates optimization.
In the algorithm, one opponent (parent or offspring) is a set of clustering centers with
different number. In its selection procedure, the fitness values of parents and offsprings are
compared. In comparison, a number of opponents are selected randomly as the comparison
reference. The opponent with better performance to each reference opponent can receive
a win. Based on the wins, some opponents are selected as the parents of next generation.
The shortcoming of the algorithm is that the computation requirement is in a exponential
relationship with the cluster number. If the number of cluster number is very large, the
algorithm ceases to be feasible.
Unlike Sarkar [41] use a set of cluster centers as a component in evolution and select
only one set as the winner, we use templates as the components directly in our algorithm
and the selected survivors are a group of templates. The evolutionary processing is to
September 16, 1998
simulate the evolution of a nature social system, such as ants, bees and human society, or
even the nature system.
The study of social system, as a part of Sociobiology, began at the middle of 19th cen-
tury, after Charles Darwin published his most famous book, On the Origin of Species by
Means of Natural Selection in 1859. Sociobiology seeks to extend the concept of natural
selection to social systems and social behavior of animals, including humans. The sociobi-
olists regard a social system, in simple, as a system consists in a plurality of individuals,
heterogenous and homogeneous, interacting with each other in a situation which has at
least a physical or environmental aspect, individuals who are motivated in terms of a tendency
to the "optimization of gratification" and who relation to their situations, including
each other, is defined and mediated in terms of a system of culturally structured and
shared symbols [42]. The social behavior of the individuals can be categorized into two
classes: competition and cooperation, which prompt the development of the system and
keep the system.
In our algorithm, we define a small, simple and homogeneous social system. Each
template is just like a individual in it, and the society can only tolerate a limited number of
individuals, but the number of the individuals can generate a larger number of offsprings in
each generation, so only some of the offsprings with better abilities, based on the "selection
rule", can be kept and others must be discarded, that is, "survival of the fittest". Moreover,
the relationship between the individuals is not only competition: only winners can survive,
but also cooperation: the properties of individuals are reflected by their performance in
all. After the evolution by generations and generations, a group of templates are selected
and the whole of they can achieve a good performance of the recognition system.
Our templates optimization algorithm works as fellow:
1. Initially, generate a population N P of templates P (call them parents). In our al-
gorithm, they are just the templates extracted by neural networks, as introduced in
section. III.
2. Then, create a set of offsprings O in a number of NO based on the parents set P by
evolutionary operations, which will describe in section IV-A.
3. Compare all offsprings and select a subset of templates in a number of N P as the
September 16, 1998
parents of next generation, as present in section IV-B.
4. if the number of generation is less than a pre-specified constant, go to step2.
In our algorithm, the templates in each digit class are optimized separately, that is, in
each computation, only one class of templates and training samples are considered. The
advantage of the algorithm can be easily adapted to parallel computer.
A. Generation of Offsprings
For better explanation of the selection procedure, we define:
S tr the training sample;
tr the ith training sample;
P the parent set;
k the kth component in set P ;
O the offspring set;
O k the kth component in set O;
the selected subset of O as the next generation;
k the control parameter in position (x; y) of O k ;
k the control parameter in position (x; y) of P k .
The generation of offsprings includes three ways: replication, mutation and recombination

Replication is just to copy the value from parents to generate new offsprings.
O
The number of replicated offsprings is N r
is the number of parents.
Mutation is to add some perturbation on the parents. In our algorithm, the perturbation
G are Gaussian noises.
O
The number of mutated offsprings is N m
is a positive integer.
Recombination mechanisms are used in EAs either in their usual form, producing one
new individual from two randomly selected parents, or in their global form, allowing of
taking components for one new individual from potentially all individuals available in the
parent population [35]. In our algorithm, the values of recombined offsprings are selected
randomly from the two randomly selected parents, some Gaussian noise are added as
perturbations. The positions for adding perturbation are also controlled by a random
value.
R is a continues random value of 0 and 1, R p is a discrete random value of 0 or 1 to
control perturbation position, j1 and j2 are index of two randomly selected parents. The
number of recombined templates are N c
O , which is pre-specified.
The number of offsprings
O +N c
O .
B. Selection Procedure
The selection procedure is to select a subset of templates P 0 in a number of N P from the
the offspring set O. We set the output from equation 8 between template j and training
sample i is OE i
j , and fitness of P 0 is:
The selected subset should satisfy that the fitness(P 0 ) is bigger than the fitness of any
other subsets of the offspring set O. Considering the number of possible subsets of O is
NO , it is a extremely large number if we set N In order to save
the computation resource to make this algorithm practical, a fast searching technology is
developed, which is directly based on the value OE i
.
The whole selection procedure can be divided into following steps:
1. For each training sample S i
tr , a number of N top templates with top function OE outputs
are recorded and sorted in the decreasing order. The others are discarded. We
let fT i;j be the set of the recorded output values
and fT i;j
be the index from T i;j to the
September 16, 1998
templates, so the relation between them can be presented as:
index
and for training sample S i
tr
l (34)
for 8 l 2 O and l =
index g.
Moreover, a flag is also set to each training sample: T i
2. For each template O k , add the values of remaining outputs together:
index =k
3. Find the highest Sum k and move the template O k 0
(max(Sum k )) to the parent
set P 0 for next generation:
. The training samples, which
index
are given a flag
4. If there still exist some flags of training samples that T i
for each template
O k left in set O, get the new value of Sum k
index =k
where,
f lag  0 and
f lag
f lag  0 and
f lag
September 16, 1998
if the flags of all training samples satisfy T i
f lag  0, replace equation 37 with equation
35.
5. Similar to Step 3, find the template O k 0
with highest Sum k in O and move it to P 0 ,
re-set the flag of training samples which
f lag  0, replace it
with
lag
6. Repeat step 4, 5 till the number of templates in set P 0 reach N P .
Finally, the selected subset of templates can be considered as the desired output, and the
computation resource required by the selection procedure is available to most of current
scientific calculating devices.
V. Experimental Results and Discussion
In total, 10,426 numeral samples from NIST Special Database 3 were extracted as the
training set. Each numeral was normalized into a 48 \Theta 48 binary image with 8-pixel-
wide background borders for the distribution transform. So the actual image size is 64 \Theta
64. Another independent 10,426 numeral samples were also extracted from NIST Special
Database 3 as the test set.
First, 1000 templates were first extracted from the training set by the neural network
approach discussed in section III with each numeral class having 100 templates. Every
template contain 11 \Theta 11 control points. Because the amplitude of a pixel on four borders
is close to 0, we set the control points on borders to 0, only the inner control points that
is, 9 \Theta 9 = 81 control points were upgraded in each iteration.
In this step, we test samples with different fl values. Table I is the results of the
comparison, we use three sets of templates extracted with different fl values:
0:5 the algorithm achieves a reasonable good performance.
Then, the 1000 templates were used as the input of our optimization algorithm to get
another 1000 new templates with Because each numeral class has 100
templates, in each optimization computation N
and In simulation, we also set N top = 5.

Figure

6 shows some of the optimized templates, which are presented in grey-scale
images.
For a comparison, we have also applied a few other algorithms to recognize the same
September 16, 1998
Fig. 6. Extracted templates in grey-scale images.
Fig. 7. Some examples of unsure patterns.
Experimental results of test samples with different fl values.
ff Without rejection With rejection


II
A performance comparison of our approach with other numeral recognition
algorithms by using test set.
Techniques With Rejection Without Rejection
Rejection
Optimized Templates 26.7 98.9 0.0 96.4
Extracted Templates 27.9 98.7 0.0 95.8
MLP 34.4 99.9 0.0 96.9
numeral samples. These algorithms include a three-layer MLP (Multi-Layer Perceptron),
the ONNC (Optimized Nearest-Neighbor Classifier) algorithm proposed by Yan [22], and
initial templates extracted from an MLP. Sixty-four intensities on the 8 \Theta 8 image, rescaled
from the original 160 \Theta 160 normalized binary image, were used as the inputs of the MLP
based approach and ONNC. The size of the MLP is 64-75-10, As to the ONNC algorithm,
it returns both the assigned class j and the distance D j of the image from the closest
class prototype. The quotient of the distance D j and M i , termed as the "recognition
were used as the estimation of the reliability of a classification [43], where, M i
is the mean value of the recognition measures for the correctly classified
numerals in the training samples that belong to class i. Table II shows the test results of
out algorithm together with MLP, ONNC, and the approach with the initial templates.
As it is expected, the performance with new templates from the evolutionary algorithm
September 16, 1998
Experimental results of unsure patterns with different classifiers (the threshold used
here is same as the threshold we used in Table II "With Rejection").
Techniques Rejection
Optimized Templates 90.7
Previous Templates 87.5
MLP 44.5
ONNC 69.3
is better than that with the templates extracted from an MLP. However, compared to the
MLP and ONNC classifiers, the performance of our approach is slightly lower in dealing
with such isolated numerals.
To further comparing these algorithms, we also used 10,426 unsure patterns (see the
examples shown in Figure 7) to verify the reliability of the classifiers in rejecting illegible
patterns. This ability is very important for connected character recognition. The unsure
patterns used in the experiment were generated by merging two parts of isolated numerals,
the left part of the right numeral and the right part of the left numeral. The choosing
of two numerals, the width and relative position of each parts and the overlap degree are
set randomly. Table III shows the experimental results of our algorithm together with the
other two techniques. The threshold used for each classifier is the same as the setting for
obtaining the results shown in Column 1 of Table II on isolated numerals.
We can see that the rejection rate of optimized templates is the highest on the unsure
patterns, that is, our approach can achieve a more reliable performance in rejecting illegible
numerals, which is a desirable property for connected handwriting numeral recognition.
We can also see from the experimental results that the optimized templates by using
the evolutionary algorithm can achieve a better performance than the initial templates
extracted by a neural network. It seems that the new approach is one step closer in
achieving global optimization. As any other application with evolutionary algorithms,
our approach also took long to find the solution. Two PentiumII-333 and one PentiumII-
300 with Linux operation system were used for the optimization computation. With 200
iterations, the computation took about 14 days for the ten classes of numerals. However,
the training is required once only, the approach is still feasible.
For further verification of the performance of the templates, we also applied them to
recognize some 4-connected digit strings with a dynamic-programming approach. The
main idea of the dynamic-programming approach is to apply the classifier move through
digit string image with rectangle windows in different width, and match the containing
in windows with optimized templates. In the experiment, digit string images were pre-processed
in advance by the method presented in [44]. We use Ww and W h to present the
width and height of window, and W s as the step length. Ww and W s are determined by
the W h . We use nine windows in different width fW i
w g with values:
hIn the matching between the window and templates, for the consideration of possible
include parts of neighboring digits in window, we do not simply use the equation 8, some
techniques are applied to decrease their effect. A normalization method is first applied:
find the maximal and minimal y value of the foreground, y max and y min , between the region
and at the same time, find y
j and y min
j at region in template
that fit S j (x; y)  0:5; then, scale and translate the window so that y
. Except normalization, we also make a variation to equation 8, instead of
executing the calculation in whole image, it happens only at
is a threshold between 0 and 1. That is, equation 14 and equation 15 are replace by:
H\Omega dx dy
H\Omega
I 2 (x; y) dx dy
In experiment, we set
The whole approach can be simply descript by several steps:
(a) (b)
Fig. 8. Examples of correctly recognized digit string, (a) original coonected digit strings; (b) separated
digits.
1. from left of the image, apply rectangle windows with different widths on the image,
match the containing in windows with templates;
2. if the output from a window is good enough (?0.5, for example), keep the result and
move windows to the right, the begin place is at some distance (three steps in our
experiment) left to the right edge of the previous window and of course, the windows
should be in various width;
3. if the outputs of all the windows are not good enough, move the begin place of
windows a step to right, and go to step 2;
4. repeat step 2,3, till the window reach the right end of the digit string image.
It is highly possible that more than one sequence of digits will be generated from this
approach. A score value is assigned to each sequence by:
are the results in this sequence, and L is the length. We choose the
sequence with maximal score value as the output of the approach.

Figure

8 is an example of correctly recognized digit string. The first row is the original
September 16, 1998
Fig. 9. Examples of recognition-failed digit string.
connected digit string image, and the second row is the separated and recognized digits.
And figure 9 are some recognition-failed examples. The reasons are that: 1) the writing
style of the sample is not included in trainging sets (left sample); 2) degradation (right
sample).
Recognizing this samples cost about 2-7 hours in our PentiumII-333 with linux operation
system. Obviously, this does not make for a practical approach for recognizing
connected digit strings. One way to reduce this computational burden would to bind a
simple classifier with it. Windows are first classified by the simple classifier, those can not
be satisfactorily assigned to a class are passed to the optimized templates classifier. Another
way is to re-design the dynamic-programming scheme, obviously it is not a efficient
method.
VI. Conclusion
In this paper we first propose a new presentation of handwritten numeral templates
with the rational B-spline surfaces of distance distribution maps in order to develop a
classifier that can reliablly rejects illegible patterns while achiving high recognition rate.
A two-step templates extraction algorithm is then presented. First, a multi-layer neural
network approach is adapted to extract templates from a set of training samples, then we
use an evolutionary algorithm to optimize the extracted templates. In the evolutionary
algorithm, instead of making use of a fitness measure, we directly used the function that
measures the difference between a template and a training sample for offspring selection
directly.
Experimental results on NIST Special Database 3 show that the optimized templates can
achieve better performance than the intitial templates. When compared to the MLP and
ONNC classifiers, the recognition rates from our new template presentation are slightly
lower in dealing with isolated numerals. However, the classifiers with the new template
September 16, 1998
presentation can achieve a more reliable performance in rejecting illegible patterns, which
is highly desirable in connected handwritten character recognition.



--R



Vertex directed segmentation of handwritten numerals.
Segmentation and recognition of connected handwritten numeral strings.
Separation of single- and double-touching numeral strings

Recognition of handwritten script: A hidden markov model based approach.
Character recognition without segmentation.
Handprinted word recognition on a nist data set.
Modeling and recognition of cursive words with hidden Markov models.
Handwritten word recognition using segmentation-free hidden Markov modeling and segmentation-based dynamic programming technique

A lexion driven approach to handwritten word recognition for real-time appli- cations
Handwritten word recognition with character and inter-character neural networks
Character recognition - a review
Optical character recognition - a survey
Unconstrained handwritten numeral recognition based on radial basis competitive and cooperative networks with spatio-temporal features representation
Handwritten digit recognition using combined id3-derived fuzzy rules and Markov chains
Multiresolution recognition of unstrained handwritten numerals with wavelet transform and multilayer cluster neural network.
Recognition of handwritten digits based on contour information.
Feature extraction methods for character recognition - a survey
Design and implementation of optimized nearest neighbor classifiers for handwritten digit recognition.
Shape matching using lat and its application to handwritten numeral recognition.
A structural model of shape deformation.
A unified framework for handwritten character recognition using deformable models.
Using generative models for handwritten digit recognition.
Object matching using deformable templates.
Representation and recognition of handwritten digits using deformable templates.

On modelling
An affine-invariant active contour model (ai-snake) for model-based segmenta- tion
Handwritten digit recognition using optimized prototypes.

Multiobjective optimization and multiple constrain handling with evolutionary algorithms part i: A unified formulation.
An overview of evolutionary algorithms for parameter optimization.
An introduction to simulated evolutionary optimization.

Learned deformable templates for object recognition.
Genetic algorithm and deformable geometric models for anatomical object September
Human face location in image sequences using genetic templates.
A clustering algorithm using an evolutionary programming-based approach
The Social System.
Separation of single- and double-touching handwritten numeral strings
Length estimation of digits strings using a neural network with struture based features.
--TR
Context-directed segmentation algorithm for handwritten numeral strings
Character recognitionMYAMPERSANDmdash;a review
An overview of evolutionary algorithms for parameter optimization
Using Generative Models for Handwritten Digit Recognition
A Lexicon Driven Approach to Handwritten Word Recognition for Real-Time Applications
Representation and Recognition of Handwritten Digits Using Deformable Templates
A clustering algorithm using an evolutionary programming-based approach
Postprocessing of Recognized Strings Using Nonstationary Markovian Models
Shape Matching Using LAT and its Application to Handwritten Numeral Recognition
Character Recognition Without Segmentation
Computer-aided design applications of the rational b-spline approximation form.

--CTR
Chenn-Jung Huang, Clustered defect detection of high quality chips using self-supervised multilayer perceptron, Expert Systems with Applications: An International Journal, v.33 n.4, p.996-1003, November, 2007
