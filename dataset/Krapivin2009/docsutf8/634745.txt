--T
Monotonicity and Collective Quantification.
--A
This article studies the monotonicity behavior of plural determiners
that quantify over collections. Following previous work, we describe the
collective interpretation of determiners such as all, some and
most using generalized quantifiers of a higher type that are
obtained systematically by applying a type shifting operator to the
standard meanings of determiners in Generalized Quantifier Theory. Two
processes of counting and existential quantification that
appear with plural quantifiers are unified into a single determiner
fitting operator, which, unlike previous proposals, both captures
existential quantification with plural determiners and respects their
monotonicity properties. However, some previously unnoticed facts
indicate that monotonicity of plural determiners is not always preserved
when they apply to collective predicates. We show that the proposed
operator describes this behavior correctly, and characterize the
monotonicity of the collective determiners it derives. It is proved that
determiner fitting always preserves monotonicity properties of
determiners in their second argument, but monotonicity in the first
argument of a determiner is preserved if and only if it is monotonic in
the same direction in the second argument. We argue that this asymmetry
follows from the conservativity of generalized quantifiers in
natural language.
--B
Introduction
Traditional logical studies of quantification in natural language concentrated on the
interactions between quantifiers and distributive predicates - predicates that describe
properties of atomic entities. Generalized Quantifier Theory (GQT), as was
applied to natural language semantics in the influential works of Barwise and Cooper (1981),
Benthem (1984) and Keenan and Stavi (1986), followed this tradition and concentrated
on 'atomic' quantification. The framework that emerges from these
works provides a general treatment of sentences such as the following.
(1) All the students are happy. Some girls arrived. No pilot is hungry. Most
teachers are Republican. Exactly five boys smiled. Not all the children
sneezed.
In these sentences, the denotations of both the nominal (e.g. students, girls, etc.)
and the verb phrase (e.g. be happy, arrived, etc.) are traditionally treated as distributive
predicates, which correspond to subsets of a domain of (arbitrary) atomic
entities. Standard GQT assigns determiners such as all, some and most denotations
that are relations between such sets of atomic entities.
While this general treatment is well-motivated, it does not account for the interactions
between quantifiers and collective predicates. Consider for instance the
following sentences.
(2) All the colleagues cooperated. Some girls sang together. No pilots dispersed.
Most of the sisters saw each other. Exactly five friends met at the restaurant.
Not all the children gathered.
According to most theories of plurals, nominals such as colleagues, sisters and
friends and verb phrases such as cooperated, gathered and saw each other do not
denote sets of atomic entities, but rather sets of collections of such entities. There
are various theories about the algebraic structure of such collections, but for our
purposes in this article it is sufficient to assume that collections are sets of atomic
entities. Thus, we assume that collective predicates denote sets of sets of atomic
entities. Consequently, the standard denotation of determiners in GQT as relations
between sets of atoms is not directly applicable to sentences with collective predicates

Early contributions to the study of collective quantification in natural language,
most notably Scha (1981), propose that meanings of 'collective statements' as in
(2) are derived using 'collective' denotations of determiners. 1 More recent works,
including among others Van der Does (1992,1993), Dalrymple et al. (1998) and
Winter (1998,2001), , propose to derive such collective meanings of determiners
from their standard distributive denotations in GQT using general mappings that
apply to these distributive meanings. In the works of Van der Does and Winter, type
shifting operators apply to a standard determiner denotation D, which ranges over
atomic entities, and derives a determiner of a higher type O(D), which ranges over
sets of atomic entities. 2 The study of collective quantification as in (2) is reduced in
these theories to the study of the available O mapping(s) from standard determiners
to determiners over collections. We follow Winter (2001) and adopt one general
type shifting principle for collective quantification that unifies Scha's and Van der
Does' `neutral' and 'existential' liftings of determiners into one operator. This
operator is referred to as determiner fitting (dfit).
1 For earlier works on plural quantification within Montague Grammar see Bennett (1974) and
Hauser (1974).
As we shall see below, the bounded composition operator that Dalrymple et al. propose can also
be cast to a type shifting operator on determiners.
The type shifting approach establishes a connection between standard GQT
and linguistic theories of plurality. A natural question that arises in this context is:
what are the relations between semantic properties of standard quantifiers in GQT
and properties of their 'collectivized' version? In this article we concentrate on
the monotonicity properties of determiners, which, as far as standard distributive
quantification is concerned, are one of the best studied aspects of quantification in
natural language. 3 Consider for instance the simple valid entailments (denoted by
')') in (3), with the determiner all.
a. All the students are happy ) All the rich students are happy.
b. All the students are very happy ) All the students are happy.
Intuitively, the entailments in (3a-b) show that, in simple sentences, the determiner
all licenses a replacement of its first argument (students) by any subset of this
argument (e.g. rich students), and licenses a replacement of its second argument
(very happy) by any superset of this argument (e.g. happy). Thus, the determiner
all is classified as downward monotone in its first argument but upward monotone
in its second argument.
The starting point for the investigations in this work is the observation that such
monotonicity entailments are not always preserved when the determiner quantifies
over collections. Consider for instance the contrast between the sound entailment
in (3a) and the invalid entailment in (4) below.
(4) All the students drank a whole glass of beer together All the rich students
drank a whole glass of beer together.
In a situation where the students are s 1
and s 3
and the rich students are s 1
and
assume that the group fs drank a whole glass of beer together, but
no other group did. In this situation, the antecedent in (4) is obviously true, but
the consequent is false. However, as we shall see, many other plural determiners
do not lose their monotonicity properties when they apply to collective predicates.
This variation calls for a systematic account of the monotonicity properties of determiners
in their collective usage, in relation to their monotonicity properties in
standard GQT.
The aim of this work is to study these relations in detail. We will prove that, under
the adopted determiner fitting operator, 'monotonicity loss' with all is strongly
3 See Ladusaw (1979), Fauconnier (1978) and much recent work on the linguistic centrality of
monotonicity for describing the distribution of negative polarity items like any or ever. For instance,
in correlation with the monotonicity properties of all as reflected in (3), the negative polarity item
ever can appear in the nominal argument of all (e.g. in (i) below), in which it is downward monotone,
but not in the verb phrase argument (e.g. in (ii)), where all is upward monotone:
(i) All the [students who have ever visited Haifa][came to the meeting].
(ii) \LambdaAll the [students who came to the meeting][have ever visited Haifa].
connected to the fact that the monotonicity properties of this determiner are different
in its two arguments. We show that determiner fitting preserves the monotonicity
properties of determiners in their second argument, and it further preserves
monotonicity properties of determiners which have the same monotonicity properties
in both arguments. However, with determiners such as all, not all, some but not
all, and either all or none (of the), which are monotone in their first argument, but
have a different monotonicity property in the second argument, monotonicity in the
first argument is not preserved under determiner fitting. We claim that the origin of
these (empirically welcome) results is in the 'neutral' process that Scha proposed
for collective quantification, and that the combination of this treatment with an 'ex-
istential' lifting, which is empirically well-motivated, has no effects whatsoever on
the (non-)preservation of (non-)monotonicity with collective quantifiers.
The structure of the rest of this article is as follows. Section 2 reviews some
familiar notions from GQT that are used in subsequent sections. Section 3 describes
previous treatments of collective quantification and the uniform type shifting
strategy that is adopted in this paper. Section 4 establishes the facts pertaining
to (non-)preservation of (non-)monotonicity under type shifting with all possible
monotonicity properties of determiners in GQT.
2 Notions from generalized quantifier theory
This section reviews some familiar notions from standard GQT that are important
for the developments in subsequent sections. For an exhaustive survey of standard
GQT see Keenan and Westerst-ahl (1996).
The main property of quantifiers that is studied in this article is monotonicity,
which is a general concept that describes 'order preserving' properties of functions
over partially ordered domains.
partially
ordered sets, and let f be a function from A 1
to B. The function f is called
upward (downward) monotone in its i-th argument iff for all a 1 2 A
We say that f is monotone in its i-th argument iff f is either upward or downward
monotone in its i-th argument.
Extensional denotations are given relative to an arbitrary non-empty finite set
E, to which we refer as the domain of atomic entities, or simply atoms. Given a
non-empty domain E, a determiner over E is a function from -(E) \Theta -(E) to
1g. 4 Hence, a determiner is a relation between subsets of E. The set -(E),
the power set of E, is ordered by set inclusion. The set f0; 1g, the domain of
truth values, is ordered by implication, which is simply the numerical '-' order on
4 Later in the paper, we refer to such determiners as Atom-Atom determiners, since both their
arguments are sets of atomic entities.
Determiner Denotation: for all A; B ' E: Monotonicity
all all 0
not all (:all 0
some some 0
no no
most most 0
exactly five exactly 5 0
Table

1: standard denotations of some determiners
1g. Since a determiner is a two-place function, we use the terms left monotonicity
and right monotonicity for referring to its monotonicity in the first and second
arguments respectively. We use the following notation:
ffl "MON, #MON and -MON for determiners that are upward left-monotone,
downward left-monotone and not left-monotone, respectively.
ffl MON", MON# and MON- for determiners that are upward right-mono-
tone, downward right-monotone and not right-monotone, respectively.
We combine these two notations, and say for instance that the determiner all is
#MON" according to its definition as the subset relation. The standard denotations
that are assumed for some determiners are given in table 1, together with their
monotonicity properties.
The well-known conservativity property of determiners reflects the observation
that the truth value that determiners in natural language assign to any pair of sets A
and B is identical to the truth value they assign to A and A " B. This is observed
in (seemingly obvious) equivalences such as the following.
All the/some/no/most of the/exactly five cars are blue ,
All the/some/no/most of the/exactly five cars are blue cars.
Formally, conservativity of determiner functions is defined as follows.
determiner D over E is conservative (CONS) iff
for all
Thus, in order to evaluate the truth value of a sentence D students are hungry, with
a conservative determiner D, we do not have to know the set of all hungry entities,
but only the set of hungry students.
Let us mention a useful constancy aspect of the meaning of most natural language
determiners. 5 Van Benthem (1984) defines the permutation invariant (PI)
determiners as follows.
5 The exceptions to PI are determiners such as my, her or this, which we henceforth ignore.
Definition 3 (permutation invariance) A determiner D over E is permutation invariant
(PI) iff for all permutations - of E and for all
Roughly speaking, when a determiner D is PI, this means that it is not sensitive to
the identity of the members in its arguments, but only to set-theoretical relations
between its arguments. It is easy to verify that the determiners in table 1 are all PI.
The following two definitions characterize two trivial classes of determiners.
Definition 4 (left/right triviality) A determiner D over E is called left (right)
trivial iff for all A; B; C ' E:
respectively).
Intuitively, an LTRIV (RTRIV) determiner is insensitive to the identity of its left
(right) argument. For instance, the determiners less than zero and at least zero,
which are both LTRIV and RTRIV, assign the same truth value (0 and 1 respec-
tively) to all possible arguments. We occasionally restrict our attention to determiners
that are not right trivial. This is because non-right-triviality is a stronger
restriction on conservative determiners than non-left-triviality - provably, all conservative
LTRIV determiners are RTRIV. However, a conservative RTRIV determiner
is not necessarily LTRIV. For instance, the determiner D s.t.
iff A 6= ; is conservative and RTRIV but is not LTRIV.
In this article we study the monotonicity properties of non-right-trivial conservative
determiners that satisfy permutation invariance, which are also in the main
focus of the general theory of quantification in natural language.
3 Collective determiners and type shifting principles
The type shifting account of plural determiners that was initiated by Scha (1981) is
motivated by sentences such as those in (2), which involve collective predicates. In
this section we review previous treatments of collective quantification, and concentrate
on the proposal of Winter (1998,2001) that aims to solve some of the empirical
problems for Scha's and Van der Does' proposals. As an example that illustrates
many aspects of the interpretation of collective determiners, consider the following
sentence.
Exactly five students drank a whole glass of beer together.
The denotation of the collective predicate drank a whole glass of beer together
is assumed to be an element of -(E)) - a set of sets of atomic elements. To
sentence (6), the meaning of the determiner exactly five from table 1 is
shifted so that it can combine with this collective predicate. This section deals with
the proper way(s) to define such a shifting operator.
3.1 The type shifting operators of Scha and Van der Does
Scha (1981) proposes an extension of standard GQT to the treatment of collectivity
phenomena as in sentence (6). The work in Van der Does (1992,1993) contains a
systematic reformulation of Scha's approach using type shifting operators within
contemporary GQT. In the systems of Scha and Van der Does (henceforth S&D),
both distributive and collective verbal predicates (e.g. smile, meet) denote elements
of -(E)). However, nominal predicates such as students standardly denote sub-sets
of E. Accordingly, in S&D's proposal, collective determiners are functions
from -(E) \Theta -(E)) to f0; 1g. We distinguish such Atom-Set determiners, where
the first argument is a set of atoms and the second argument is a set of sets of
atoms, from the standard Atom-Atom determiners of GQT as in table 1, where both
arguments are sets of atoms. Van der Does follows Van Benthem (1991:68) and
proposes that the Atom-Set determiners that are necessary for the interpretation
of plural sentences can be obtained systematically from Atom-Atom determiners.
There are two collective shifts that are proposed for sentences like (6) in S&D's
works. 6 One collective operator is called Existential operator). For sentence
this operator generates a statement that claims that there is a set of exactly five
students and that this set drank a whole glass of beer together. In general, for any
Atom-Atom determiner D over a domain E, applying the E operator leads to the
Atom-Set determiner E(D) which is defined for all A ' E and B ' -(E) by:
Scha proposes another collective analysis of plural determiners, which Van
der Does refers to as neutral. In sentence (6), for instance, this neutral analysis
counts all the individual students who participated in sets of students that drank a
whole glass of beer together, and requires that the total number of these students is
exactly five. For any Atom-Atom determiner D over E, the corresponding Atom-
determiner N(D) (Van der Does' N 2
is defined for all A ' E and B ' -(E)
by:
Note that the set [(B " -(A)) contains x if and only if x is an element of a subset
of A that belongs to B.
The N operator involves a mapping of the left argument A of the determiner,
which is a set of atoms, into the power set of A, which is a set of sets of atoms.
Such a mapping from sets to sets of sets is useful in S&D's strategy, as in most
other theories of plurals, since it makes a connection between distributive predicates
and collective predicates. This is required whenever a predicate over atoms
semantically interacts with other elements that range over collections (e.g. sets).
In the theory of plurals, such a mapping is often referred to as a distributivity op-
erator. The power set operator - is sufficient as a distributivity operator for our
6 S&D also assume a distributive shift, which is irrelevant for our purposes here. In addition, Van
der Does (1992) considers a third collective shift but (inconclusively) dismisses it in his 1993 article.
purposes in this paper. 7 We say that a set A ' -(E) is a distributed set of atoms
set of atoms A ' E.
In sentences where the second argument of the determiner is an ordinary distributive
predicate, its meaning under S&D's treatment can be defined as a distributed
set of atoms rather than a set of atoms. This is needed in order to match
the type of the second argument of the lifted Atom-Set determiner. For instance, the
standard meaning of sentence (7) below is captured using the N operator as in (8),
and not simply by directly applying the Atom-Atom denotation of the determiner
exactly five to two sets of atoms, as in standard GQT.
Exactly five students sang.
(N(exactly 5 0 ))(student 0 )(-(sing 0 )),
where student sing 0
It is easy to verify that this analysis is equivalent to the standard analysis of (7).
More generally, observe the following fact.
Fact 1 For every conservative Atom-Atom determiner D over E, for all
3.2 Problems for S&D's strategies
One empirical problem for S&D's type shifting analysis follows from a warning
in Van Benthem (1986:52-53), and is accordingly referred to as the Van Benthem
problem for plural quantification. Van Benthem mentions that any general existential
lifting such as the E operator is problematic, because it turns any Atom-Atom
determiner into an Atom-Set determiner that is upward right-monotone.
Quite expectedly, this property of the E operator is empirically problematic
with many Atom-Atom determiners that are not upward right monotone. For in-
stance, using the E operator, sentence (9) below, with the MON# determiner no,
gets the interpretation in (10).
met yesterday at the coffee shop.
This analysis of sentence (9) makes the strange claim that an empty set met yesterday
at the coffee shop, which is clearly not what sentence claims. 8 The
7 A more common version of a distributivity operator is the - + operator, which maps each set
to its power set minus the empty set: f;g. Using the operator would not
change the results in this paper, and therefore we use the simpler power set operator. For arguments
in favor of a distributivity operator that is a more sophisticated than - see Schwarzschild (1996).
For counterarguments see Winter (2000).
8 Using - + instead of - in the definition of the E operator (which is what S&D do), sentence
is analyzed as a contradiction. Obviously, this is not the correct analysis of the sentence either.
existential analysis reverses the monotonicity properties of the determiner no, so
that E(no 0 ) is "MON". However, the determiner no remains #MON# in this case
even though it is used for quantification over collections. For instance, sentence
sentence (11a) below and does not entail sentence (11b).
students met yesterday evening at the coffee shop.
b. No people (ever) met at the coffee shop.
The problem is manifested even more dramatically when the second argument
of the determiner is a distributive predicate (distributed by -). For instance, sentence
(12) below is analyzed as in (13), which is a tautology (for choose
Less than five students smiled.
Although the Van Benthem problem indicates that the existential operator is
inadequate, this operator still captures one effect that the N operator by itself does
not handle. To see that, reconsider sentence (6), restated in (14) below, and its
analyses using the N and E operators.
Exactly five students drank a whole glass of beer together.
a. (N(exactly 5 0 ))(student 0 )(drink beer 0
b. (E(exactly 5 0 ))(student 0 )(drink beer 0
The analysis in (14a) requires that the total number of students in sets of students
that drank a glass of beer together is five. However, in addition, sentence (14)
also requires that there was a set of five students who drank a whole glass of beer
together. The E operator in the analysis in (14b) imposes this requirement, but
fails to take into account the total number of students who drank a glass of beer,
and therefore leads to the Van Benthem problem. A similar dilemma arises with
upward monotone determiners, as in the following example.
More than five students drank a whole glass of beer together.
In this case too, the N operator imposes a requirement only on the total number
of students involved in beer drinking events, whereas what we need in this case
is an existential reading, requiring that there actually was a set with more than
five students who drank a whole glass of beer together. In S&D's systems there
9 If we replace - by - sentence (12) is analyzed as being equivalent to at least one student
smiled, which is bad enough.
is no clear specification of how to capture both aspects of collective quantification
without generating undesired truth conditions. 10
Another problem for S&D's strategy is in the type of collective determiners it
assumes. In S&D's proposal, any collective determiner is an Atom-Set determiner.
However, in many cases, a collective predicate may also appear in the left argument
of a determiner. For instance, reconsider the following example from (2).
All the colleagues cooperated.
In this case, the plural noun colleagues is collective: to say that a and b are colleagues
is not the same as saying that a is a colleague and b is a colleague. Other
collective nouns like brothers, sisters, friends etc. lead to similar problems. Other
cases where the first argument of a determiner is collective appear when a distributive
noun is modified by a collective predicate. For instance, consider the following
examples.
Exactly four similar students smiled.
(18) Most of the students who saw each other played chess.
In these cases, the interpretation of the first argument involves intersection of a distributive
predicate (distributed by -) with a collective predicate. For instance, the
denotation of the nominal similar students in (17) is obtained by intersecting the set
of sets of students with the set of sets of similar entities. These examples indicate
that collective determiners should allow collective predicates in both arguments,
and not only in the right argument as in S&D's lifting strategies.
3.3 Dalrymple et al.'s bounded composition operator
Dalrymple et al. (1998) concentrate on the semantics of reciprocal expressions (each
other, one another) in sentences with simple plural NPs such as the children and
Mary and John. However, they also address the problem of interpreting reciprocal
expressions in the following sentences, where a collective reciprocal predicate
combines with a quantifier of more complex monotonicity properties.
a. Many people are familiar to one another.
b. Most couples in the apartment complex babysit for each other.
c. At most five men hit each other.
Dalrymple et al. observe the existential requirement in sentences (19a-b), and their
treatment of such sentences, with MON" determiners, is accordingly a reformulation
of the E operator of Scha and Van der Does. However, to overcome the
problems that the existential requirement creates in sentences such as (19c), with
tries to overcome this problem by proposing a syntactic mechanism of
feature propagation that is designed to rule out some of the undesired effects of his semantic system.
non-MON" determiners, Dalrymple et al. use a different analysis for such sen-
tences. In example (19c), their analysis requires that each set of men who hit each
other contains at most five men. It seems quite likely that for the case of sentence
(19c), this analysis reflects a possible reading. 11
Dalrymple et al. combine the two processes they assume for MON" and non-
MON" determiners into one general operator that they call Bounded Composition.
This operator can be cast as a lifting operator of determiners, so that for any Atom-Atom
determiner D over E, the corresponding Atom-Set determiner BC(D) is
defined for all A ' E and B ' -(E) by: 12
The first conjunct in this definition reflects a counting process, parallel to S&D's
N operator. 13 The second conjunct adds to this process an existential requirement,
similar to S&D's E operator. However, there are two modifications in the usage of
these two processes, compared to S&D's strategies:
1. Unlike the N operator, the counting process within BC does not require the
total union of to be in the generalized quantifier D(A), but only
requires that each set of maximal cardinality within is in D(A).
2. The existential requirement overcomes Van Benthem's problem, due to the
disjunct properly weakens the E operator with
determiners that satisfy
The motivation for the introduction of the bounded composition operator is to
treat collective readings of GQs with reciprocal predicates. However, we believe
that the combination of counting and existential processes is a promising aspect of
Dalrymple et al.'s proposal also for other cases of collectivity. On the other hand,
the empirical adequacy of the counting process as implemented within the BC operator
is not completely clear to us. Some speakers we consulted accept Dalrymple
et al.'s assumption that sentences such as (19c), with a downward monotone quan-
tifier, can be true even though the 'total' set of people who participated in sets of
Dalrymple et al.'s intuitions about the meaning of (19c) seem to be similar to those of
Schein (1993), who proposes an event semantics of plurals. For some remarks on the empirical
question concerning the generality of this analysis see our discussion below.
12 The operator that Dalrymple et al. propose is defined as a 4-ary relation between a determiner,
a set of atoms, a binary relation and the meaning of the reciprocal expression. For instance, in
sentence (19a), these are (respectively) the meanings of the expressions many, people, familiar to
and one another. For our purposes it is sufficient to consider the determiner alone, because the
compositional interpretation of reciprocal predicates such as familiar to one another is not in the
focus of this article.
13 The requirement jA n Xj - jA n Y j in this conjunct is needed only when we assume infinite
domains. Over finite domains it follows from the requirement jXj - jY j.
people who hit each other is not in the quantifier (i.e. in this case - includes more
than five members). However, these judgments did not seem to be highly robust
and they vary considerably when the determiner at most five is replaced by other
non-MON" determiners such as less than five, exactly five or between five and ten.
For example, consider the following sentence.
Exactly five students hit each other.
Assume that there was a set of exactly five students who hit each other, and that in
addition there was only one other set of students A who hit each other. In case there
are four students in A, then the BC operator renders sentence (20) true. However,
if A contains six students then the BC operator takes sentence (20) to be false. We
did not trace such a difference in our informants' intuitions about the sentence.
As a general operation for deriving collective readings of GQs, the BC operator
shows some undesired effects when the quantifier it derives interacts with a
so-called 'mixed' predicate. These predicates (unlike predicates formed with re-
ciprocals) can also be true of singleton sets, in addition to sets with two or more
elements. Consider for example the following sentence.
(21) At most five students drank a whole glass of beer (together or separately).
In a situation where there are ten students and each student drank a whole glass of
beer on her own, sentence (21) is clearly false. However, if we assume that no students
shared any glass of beer between them, the BC operator makes sentence (21)
true, because there is no relevant set of students with more than five members: all
the relevant sets are singletons. For these reasons, in the proposal below we choose
to study the counting process of the N operator. We leave for further research the
empirical study of the exact interpretation of sentences such as (19c), as well as the
formal study of the BC operator that is motivated by their interpretation.
3.4 Determiner fitting and the witness condition
To overcome the two problems of S&D's mechanism that were pointed out in sub-section
3.2, Winter (1998,2001) proposes to reformulate the N and E operators as
one operator called dfit (for determiner fitting). This operator, unlike S&D's N and
operators and Dalrymple et al.'s BC operator, maps an Atom-Atom determiner
into a Set-Set determiner, i.e. a determiner where both arguments can be collective
predicates. To define the dfit operator, let us first reformulate N as an operator
from Atom-Atom determiners to Set-Set determiners. This reformulation of the N
operator is called count, and is defined as follows.
Definition 5 (counting operator) Let D be an Atom-Atom determiner over E.
The corresponding Set-Set determiner count(D) is defined for all A; B ' -(E)
by:
By giving a symmetric Set-Set denotation to collective determiners, this definition
involves two separate sub-processes within the process of counting members of
collections. The first sub-process is the intersection of the right argument with the
left argument of the determiner. The second sub-process is the union of the sets in
each of the two arguments. The intersection sub-process reflects the conservativity
of (distributive/collective) quantification in natural language: the elements of the
right argument that need to be considered are only those that also appear in the
left argument. This also holds for the Set-Set determiner count(D). 14 The union
sub-process is simply a natural 'participation' adjustment of the type of the Atom-Atom
determiner's arguments: for any collective predicate A, an atom x is in [A
iff x participates in a set in A.
The count operator generalizes S&D's N operator in the following sense.
Fact 2 For every conservative Atom-Atom determiner D over E, for all A ' E
Thus, like the N operator, count respects the semantics of conservative determiners
on distributive predicates (cf. fact 1).
Corollary 3 For every conservative Atom-Atom determiner D over E, for all
As with Dalrymple et al.'s BC operator, a counting process (of the count op-
erator) is combined with an existential requirement. In order to do that, a useful
notion is the notion of witness set from Barwise and Cooper (1981).
Definition 6 (witness set) Let D be an Atom-Atom determiner over E and let A
and W be subsets of E. We say that W is a witness set of D and A iff W ' A
and D(A)(W
For example, the only witness set of the determiner every 0 and the set man 0 is
the set man 0 itself. A witness of some 0 and man 0 is any non-empty subset of
man 0 . We sometimes sloppily refer to a witness set of a determiner D and a set A
as 'witnessing the quantifier D(A).' 15
To the count operator we now add an 'existential' condition that is formalized
using a witness operator.
14 Note that we still assume that the Atom-Atom determiner D that is lifted by the count operator
is conservative. However, even when D is conservative, lifting it by an alternative operator
count does away with the intersection process within count, would not
guarantee sound conservativity equivalences such as between (i) and (ii) below.
(i) All the students are similar.
(ii) All the students are similar students.
Using the count 0 operator, sentence (i) would be treated, contrary to intuition, as being true if every
student is similar to something else (potentially a non-student). But sentence (ii) would be treated by
the count 0 operator as being false in such a situation.
Barwise and Cooper define witness sets on quantifiers explicitly, but they reach the argument A
indirectly by defining what they call a live on set of the quantifier. This complication is unnecessary
for our purposes.
Definition 7 (witness operator) Let D be an Atom-Atom determiner over E. The
corresponding Set-Set determiner wit(D) is defined for all A; B ' -(E) by:
In words: the witness operator maps an Atom-Atom determiner D to a Set-Set
determiner that holds of any two sets of sets A; B iff their intersection A " B is
empty or contains a witness set of D and [A.
A similar strategy for quantification over witness sets is proposed in
(1997). While Szabolcsi's witness operation is used only for MON''
determiners, the witness operator that is defined above is designed to be used for
all determiners. This is the reason for the disjunction in the definition of the wit
operator with an emptiness requirement on A " B. As we shall see below, this will
allow us to apply the witness operator as a general strategy, also in cases like (9),
without imposing undesired existential requirements as in (10). The general determiner
fitting operator that we use is simply a conjunction of the counting operator
and the witness operator.
Definition 8 (determiner fitting operator) Let D be an Atom-Atom determiner
over E. The corresponding Set-Set determiner dfit(D) is defined for all
To exemplify the operation of the dfit operator, consider the analysis in (23) below
of sentence (14), repeated as (22). In this analysis, the noun students is treated as
the distributed set of atoms -(student 0 ). This is needed in order to match the
general type of the left argument of the Set-Set determiner that is derived by the
dfit operator.
Exactly 5 students drank a whole glass of beer together.
dfit(exactly 5 0 )(-(student 0 ))(drink beer 0 )
The first conjunct in this formula is derived by the count operation, and guarantees
that exactly five students participated in sets of students drinking beer. The second
conjunct is a result of the witness condition, and it verifies that there exists at least
one such set that is constituted by exactly five students.
By combining the counting process and the existential process in this way, the
dfit operator captures some properties of collective quantification that seem quite
puzzling under S&D's double lifting strategy. On the one hand, as
problem indicates, in sentences such as (9) and (12), with MON# determiners, the
existential strategy is problematic and only the N operator is needed. In sentences
such as (15), with MON" determiners, the existential strategy is needed and the N
operator is redundant. Moreover, when the determiner is MON-, as in (14), the
existential analysis is needed in combination with the neutral analysis. The dfit
operator distinguishes correctly between these cases. As we will presently see, in
those cases where a simple existential analysis would be problematic, the witness
condition is trivially met due to the counting condition within dfit. We characterize
two such cases: cases such as (12), where the two arguments of the determiner
are distributed sets of atoms, and cases such as (9), where the determiner is downward
right-monotone. In other cases, the witness condition does add a non-trivial
requirement to the counting operator.
First, let us observe that when the arguments of a Set-Set determiner dfit(D)
are two distributed sets of atoms -(A) and -(B), the witness operator adds nothing
to the requirement that
Fact 4 Let D be a conservative Atom-Atom determiner over E. Then for all
Proof. Assume that 1. By conservativity, the witness set
the existential requirement in wit.
From this fact and corollary 3 it directly follows that the witness operator is
redundant in dfit when the arguments of the determiner are both distributed sets of
atoms.
Corollary 5 Let D be a conservative Atom-Atom determiner over E. Then for all
Similarly, when a determiner is downward monotone in its right argument, the
witness operator is again redundant in the definition of dfit :
Fact 6 Let D be a MON# Atom-Atom determiner over E. Then for all
In other cases - that is, when A or B are not DSAs and D is not MON" -
(count(D))(A)(B) does not entail (wit(D))(A)(B). Accordingly, an existential
requirement is invoked by the sentence. This is illustrated by the entailments from
the sentences in (24) to sentence (25):
a. More than/exactly five students drank a whole glass of beer together.
b. More than five/exactly five students who drank a whole glass of beer
together smiled.
c. More than/exactly five students who drank a whole glass of beer together
hit each other later.
There was (at least) one group of more than/exactly five students who
drank a whole glass of beer together.
These entailments are not captured by the count operator alone, but they follow
from the wit requirement within the dfit operator.
3.5 Determiners that are trivial for plurals
Before moving on to the next section and to the monotonicity properties of Set-Set
determiners under the dfit operator, there is an additional notion that we need to
introduce, which refines the right triviality property for plural determiners. An illustration
of the point is the behavior of the definite article. In singular sentences
such as (26) below, the 'Russellian' interpretation of the definite article in GQT
analyses it as a universal determiner that in addition imposes a uniqueness condition
on its left argument. The definition of this determiner is given in (27).
(26) The student smiled.
(27) the 0
By contrast, in a plural sentence such as (28) below, this definition would be inad-
equate. The sentence here imposes a plurality requirement on the left argument of
the determiner, rather than uniqueness. A possible definition of this determiner is
given in (29).
(28) The students smiled.
(29) the 0
getting into the question of definites, us make one simple point. We
do not expect the meaning in (27), which is appropriate for the singular definite
article, to be a meaning of any plural determiner. The reason is that such a determiner
function, which imposes singularity on its left argument, would contradict
the implication, prominent with plurals, that there are at least two elements in the
left argument. 17 Consequently, no plural noun could appear with such a determiner
without leading to a trivial statement: a contradiction or a tautology. As
with singular determiners, we do not expect such trivialities with plural determin-
ers. Crucially, note that the determiner in (27) is not RTRIV (or LTRIV). We can
therefore assume that plural determiners show a stronger notion of non-triviality
than RTRIV, which we call triviality for plurals (PTRIV). Formally:
Definition 9 (triviality for plurals) A determiner D over E is called trivial for
plurals (PTRIV) iff for all
Most contemporary works assume that the definite article does not denote a determiner, but
some version of the iota operator. For works that propose a unified definition of the definite article
for singular and plural NPs, see Sharvy (1980) and Link (1983). We believe that this view on articles
is justified (cf. Winter (2001)), and that (in)definite articles such as a and the should not denote
determiners in GQT. Therefore, the dfit operator does not apply to these articles. For one thing,
it does not seem possible to derive the collective reading of the definite article from its singular
denotation in (27) using the same operator that applies to other determiners.
17 Whether this implication is truth-conditional or presuppositional is irrelevant here. See some
discussion of this point in Krifka (1992), Schwarzschild (1996), Chierchia (1998) and Winter
(1998,
Informally, a PTRIV determiner is indifferent to the identity of its right argument
whenever its left argument is a set with two or more entities. The determiner the 0
sg
as defined above is PTRIV but not RTRIV. We hypothesize that all plural determiner
expressions in natural language (though not necessarily all singular determiner
expressions) denote non-PTRIV determiners. This hypothesis about plural
determiners will play a role in the next section.
4 Monotonicity properties of collective determiners
The facts that were mentioned in the introduction indicate that standard monotonicity
properties of determiners are not always preserved when they apply to collective
predicates. In this section we show that, using the count operator, monotonicity
properties in the right argument of a determiner are always preserved, in agreement
with intuition. However, whether or not a determiner preserves its left monotonicity
property when it applies to collective predicates, depends on its monotonicity
property in the right argument. We observe that the reason for these different results
for determiners of different monotonicity properties is the asymmetric conservativity
element within the definition of the count operator, which intersects the
right argument with the left argument, but not vice versa. Further, we mention
without proof that the same results concerning (non-)preservation of monotonicity
properties hold for the dfit operator, which is defined using count.
The following fact summarizes all the cases where (non-)monotonicity is preserved
under count.
Fact 7 Let D be a determiner over E. If D belongs to one of the classes "MON",
#MON#, MON" or MON#, then the Set-Set determiner count(D) belongs to the
same class. If D is conservative and -MON (MON-), then count(D) is also
-MON (MON-).
Proof sketch. For the monotone cases the claim immediately follows from the
definition of count.
For the non-monotone cases it is enough to note that if D is -MON, then
there are A 0' A 1 ' E, A 2 ' A 0' E and B; C
tive, we can apply corollary 3 (page 13) and get:
0, which shows that count(D) is -MON too. The proof is similar when D is
MON-.
Fact 7 explains why in many cases, as in the following examples, determiners
do not show any surprising monotonicity patterns when they appear with collective
predicates.
(30) Some (rich) students drank a whole glass of (dark) beer together ) Some
students drank a whole glass of beer together. (some is "MON")
whole glass of beer together students drank
a whole glass of (dark) beer together. (no is #MON#)
(32) All/most of the students drank a whole glass of dark beer together ) All/most
of the students drank a whole glass of beer together.
(all and most are MON")
Exactly five students drank a whole glass of beer together
Exactly five rich students drank a whole glass of (dark) beer together.
(exactly five is -MON-)
However, as we saw in (4) above, determiners are sometimes more surprising in
their monotonicity behavior with collective predicates. To cover all the monotonicity
classes of determiners, we also have to consider the left argument of determiners
such as all, not all and some but not all, which are monotone in their left argument
but have a different monotonicity property in their right argument. The theorem below
will show that almost all these determiners lose their left monotonicity under
count. The only exceptions are PTRIV determiners that are #MON" or "MON#.
Provably, these determiners preserve left monotonicity under count. However, as
claimed above, PTRIV determiners are not expected in the class of plural determiners
in natural language. Moreover, it is not hard to show that in each of the
monotonicity classes #MON" and "MON# there is only one PTRIV determiner
that is conservative, PI and not RTRIV. These two determiners are the following
determiners - D 0 and its complement
Once these two special cases are observed, we can establish the following result.
Theorem Let D be a conservative determiner over E that is not RTRIV. If D satisfies
one of the conditions (i) and (ii) below, then the Set-Set determiner count(D)
is -MON.
(i) D is non-PTRIV and is either #MON" or "MON#.
(ii) D is PI and is either #MON- or "MON-.
To make the proof of this theorem more readable, we first prove the following
lemma.
Lemma 8 Let D be a conservative determiner over E. If D satisfies one of the
conditions (i) and (ii) below then there are X; Y; Y
(i) D is non-PTRIV and #MON".
(ii) D is PI and #MON-.
Proof. Assume first that D is non-PTRIV and #MON". Because D is non-
PTRIV and conservative, there are
and it follows from
Therefore, we can choose
If, on the other hand, D is PI and #MON-, then (by #MON- and conserva-
tivity) there are B s.t. the following
hold:
(D is not MON#);
(D is not MON").
It follows that both A and A 0 are not empty. If jAj ? 1 then simply choose
Let - be a permutation on E s.t.
follows from ( ) that
;. Otherwise, A fyg, and from (  ),
it follows from
Therefore, we can choose
Proof of theorem. We first prove the theorem for a determiner D that is either
#MON" or #MON-. Because D is not RTRIV, it cannot be "MON. Using the
same reasoning as in the proof of the non-monotone cases in fact 7, it is straight-forward
to show that in each of the two cases count(D) is not "MON. It is left to
be shown that count(D) is also not #MON. By lemma 8, there are X; Y; Y
s.t. and the following holds:
three subsets of -(E), A, A 0 and B as follows:
g.
it follows from ( ) that
Hence, count(D) is not #MON.
Assume now that D is either "MON# or "MON-. Again, it is straightforward
to show that count(D) is not #MON. To see that count(D) is also not "MON,
consider the negation of D: :D, defined by
The determiner :D is either "MON# or "MON-, respectively. Further, :D is
non-PTRIV if and only if D is non-PTRIV, and the same holds for the properties
CONS, PI and non-RTRIV. Thus, it follows from condition ( ) above that for the
same
Using the same A, A 0 and B as above we get that count(D) is not "MON.
In the proof of the theorem we use one construction of subsets of -(E) - A,
A 0 and B - that applies to all four classes of determiners. However, it is not always
convenient to apply this construction to sentences in natural language, because the
set A 0 is neither DSA nor a purely collective predicate (i.e. it contains singletons
in it). To overcome this empirical difficulty, assume that condition ( ) is satisfied
for some determiner D that satisfies the conditions in the theorem.
This assumption is tenable, with no loss of generality, for all determiners that are
#MON". Under this assumption, we can use the following construction. Leave A
and B as they are in the proof, and use the following A 00 instead of A
g.
Now consider the following two sentences:
a. All the students drank a whole glass of beer together.
b. All the students who've been roommates drank a whole glass of beer
together.
Assume that and that Y g. Clearly, these sets
satisfy condition ( ) with respect to the determiner all. Following the construction
Assume now that the denotation of students is A, and that the denotation of students
who've been roommates is A 00 , i.e. all the couples of students. Assume further
that the denotation of drank a whole glass of beer together is B. In this situation
it is clear that sentence (34a) is true. However, since, for instance, s 1
and s 3
were
roommates, but did not drink a whole glass of beer together, sentence (34b) is not
true in this situation.
An example for a "MON- determiner is the determiner some but not all. This
determiner is formally defined as follows, for all A; B ' E:
some but not all 0
Consider the following two sentences:
a. Some but not all of the students who've been roommates drank a whole
glass of beer together.
b. Some but not all of the students drank a whole glass of beer together.
Clearly, the same X , Y and Y 0 from the previous example satisfy condition (  )
with respect to the determiner some but not all. Following the same line, assume
that the denotations of students, students who've been roommates and drank
a whole glass of beer together are the same as in the previous example. Now,
sentence (35a) is true in this situation, since there is a set of students that were
roommates and also drank a whole glass of beer together, namely fs 1
but it is
not true that all the students who've been roommates drank a whole glass of beer
Monotonicity of D Monotonicity of count(D) Example
"MON" "MON" some
#MON#MON# less than five
#MON" -MON" (!) all
"MON# -MON# (!) not all
-MON-MON- exactly five
-MON# -MON# not all and (in fact) less than five (of the)
-MON" -MON" most
#MON-MON- (!) all or less than five (of the)
"MON-MON- (!) some but not all (of the)

Table

2: (non-)monotonicity under count
together (cf. the argument in the previous example). On the other hand, sentence
(35b) is not true in this situation, simply because all the students drank a whole
glass of beer together.

Table

2 summarizes the (non-)preservation of monotonicity properties under
count for the nine classes of determiners according to the monotonicity of their
two arguments. Note again that for each of the two classes #MON" and "MON#,
there is an exception to the result that is mentioned in the table: the PTRIV deter-
miners. The exclamation marks emphasize the cases in which left monotonicity is
not preserved.
There are two natural extensions to these results, which we state here without
proof. First, we note that fact 7 and the 'monotonicity loss' theorem equally hold
when count is replaced by dfit. Thus, adding the witness condition to count does
not change the monotonicity (non-)preservation results that were established above
for count. The proof of this claim is quite laborious, but routine. Linguistically,
it implies that existential processes in collective quantification should not lead to
problems that are similar to Van Benthem's problem, or to any other change in the
monotonicity properties of determiners beyond what was shown above.
Another point that worths mentioning is that the results that were shown above
equally hold for global determiners: functors from domains E to determiners DE
over E. It is important to appeal to global functors because linguistic items such
as all, some, five etc. have global definitions and properties, and are not simply
defined over a given domain, as assumed throughout this article. We say that a
global determiner D is conservative, permutation invariant, (left/right) trivial or
(upward/downward left/right) monotone, if the local determiner DE satisfies the
respective property for any non-empty domain E. Using this global perspective,
all the results that were proven above for local determiners equally hold of global
determiners that satisfy the extension property (cf. Van Benthem (1984)). The
When we say that a global determiner D satisfies extension, this means that given a domain E
and any two sets A;B ' E, the local determiners DE 0 s.t. all agree on the truth value that
they assign to A and B.
reason for assuming this global property is our results concerning non-monotone
determiners. Note that a global determiner D is -MON (MON-) if and only if
there is E s.t. DE is not #MON (MON#) and there is
is not "MON
(MON"). From this it does not yet automatically follow that there is a domain E
s.t. DE is -MON (MON-), as required in fact 7 and the main theorem. How-
ever, provided that a global determiner D is non-trivial in both its arguments and
satisfies extension, the existence of such a domain does follow from the assumption
that D is -MON (MON-). Since most works on GQT assume that natural
language determiners satisfy extension (see Keenan and Westerst-ahl (1996)), the
generalization of our results to global determiners is both linguistically and technically
straightforward.
5 Conclusion
The formal study of the interactions between quantifiers and collective predicates
has to deal with many seemingly conflicting pieces of evidence that threaten to blur
the interesting logical questions that these phenomena raise. In this article we have
studied the monotonicity properties of collective quantification, which is a central
aspect of the problem of collectivity. We showed that to a large extent, the principles
that underly monotonicity of collective quantification follow from standard
assumptions on quantification in natural language in general. The count opera-
tor, which is a straightforward extension of Scha's `neutral' analysis of collective
determiners, involves a simple 'conservativity element' - intersection of the right
argument with the left argument, and a 'participation element' - union of both set
of sets arguments. The conservativity element within the count operator is responsible
for the two a priori unexpected asymmetries in the monotonicity behavior of
collective determiners:
1. Only determiners with 'mixed' monotonicity properties change their behavior
when they quantify over collections.
2. Only the left monotonicity properties of such determiners may change in
these cases.
We believe that the reduction of certain asymmetries in the domain of collective
quantification to the asymmetric conservativity principle is a desirable result that
another aspect of the central role that this principle plays in natural language
semantics.
Two open questions should be mentioned. First, in this article we did not address
the 'universal' reading that certain collective determiners show, as treated
by Dalrymple et al.'s bounded composition operator. More empirical research is
needed into these phenomena, which indicate that there may be more than one
strategy of plural quantification. The formal properties of such universal strategies
and the linguistic restrictions on their application should be further explored. Sec-
ond, although we characterized the logical monotonicity properties of collective
determiners, we did not study the linguistic implications that these properties may
have for the analysis of negative polarity items. These items normally appear only
in downward entailing environments, and it should be checked whether they are
sensitive to 'monotonicity loss' under collectivity of all. For instance, a sentence
such as the following, where all is not left downward monotone, is expected not to
license the negative polarity item any in its left argument.
(36) ?All the students who had any time drank a whole glass of beer together.
Whether or not this expectation is borne out is not clear to us, and we must leave
these and other implications of 'monotonicity loss' to further research.

Acknowledgments

This research was partly supported by grant no. 1999210 ("Extensions and Implementations of Natural
Logic") from the United States-Israel Binational Science Foundation (BSF), Jerusalem, Israel.
The second author was also partly supported by NWO grants for visiting the UiL OTS of the Utrecht
University in the summers of 2000 and 2001. We are indebted to Johan van Benthem for discussions
that initiated our interest in questions of monotonicity and collectivity. Thanks also to Nissim
Francez, Richard Oehrle, Mori Rimon and Shuly Wintner for their remarks. The main results in
this article were presented at the conference Formal Grammar/Mathematics of Language(FGMOL),
Helsinki, August 2001. We are grateful to the editor of JoLLI and an anonymous reviewer for thorough
and constructive comments that helped us to improve an earlier version of this work.



--R

Generalized quantifiers and natural language.
Some Extensions of a Montague Fragment of English.
Plurality of mass nouns and the notion of 'semantic parameter'.
Reciprocal expressions and the concept of reciprocity.
Implication reversal in a natural language.
Quantification in an Extended Montague Grammar.
A semantic characterization of natural language determiners.
Generalized quantifiers in linguistics and logic.
quantifiers.
Polarity Sensitivity as Inherent Scope Relations.
The logical analysis of plurals and mass terms: a lattice theoretical approach.
In Bauerle

Plurals and Events.

A more general theory of definite descriptions.
Strategies for scope taking.
Questions about quantifiers.
Essays in Logical Semantics.
Language in Action: categories
Applied Quantifier Logics: collectives
Sums and quantifiers.
Flexible Boolean Semantics: coordination
Distributivity and dependency.
Flexibility Principles in Boolean Semantics: coordination
--TR
