We tackle a natural problem from distributed computing, involving time-stamps. Let <i>p</i>={<i>p</i><inf>1</inf>,<i>p</i><inf>2</inf>, ...,<i>p</i><inf>N</inf>} be a set of computing agents or processes which synchronize with each other from time to time and exchange information about themselves and others. The gossip problem is the following: Whenever a set <i>P</i>  <i>P</i> meets, the processes in <i>P</i> must decide amongst themselves which of them has the latest information, direct or indirect, about each agent <i>p</i> in the system. We propose an algorithm to solve this problem which is finite-state and local. Formally, this means that our algorithm can be implemented as an asynchronous automation. 