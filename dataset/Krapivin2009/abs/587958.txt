Scheduling a set of tasks on a set of machines so as to yield an efficient schedule is a basic problem in computer science and operations research.  Most of the research on this problem incorporates the potentially unrealistic assumption that communication between the different machines is instantaneous.  In this paper we remove this assumption and study the problem of network scheduling, where each job originates at some node of a network, and in order to be processed at another node must take the time to travel through the network to that node.Our main contribution is to give approximation algorithms and hardness proofs for fully general forms of the fundamental problems in network scheduling.  We consider two basic scheduling objectives: minimizing the makespan and minimizing the average completion time.  For the makespan, we prove small constant factor hardness-to-approximate and approximation results.  For the average completion time, we give a log-squared approximation algorithm for the most general form of the problem.  The techniques used in this approximation are fairly general and have several other applications.  For example, we give the first nontrivial approximation algorithm to minimize the average weighted completion time of a set of jobs on related or  unrelated machines, with or without a network. 