An algorithm is presented to answer window queries in a quadtree-based spatial database environment by retrieving all of the quadtree blocks in the underlying spatial database that cover the quadtree blocks that comprise the window. It works by decomposing the window operation into sub-operations over smaller window partitions. These partitions are the quadtree blocks corresponding to the window. Although a block b in the underlying spatial database may cover several of the smaller window partitions, b<math> is only retrieved once rather than multiple times. This is achieved by using an auxiliary main memory data structure called the active border which requires <math>O\left(n\right)<math> additional storage for a window query of size <math>n\times n<math>. As a result, the algorithm generates an optimal number of disk I/O requests to answer a window query (i.e., one request per covering quadtree block). A proof of correctness and an analysis of the algorithms execution time and space requirements are given, as are some experimental results. 