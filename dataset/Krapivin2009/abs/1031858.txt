We present an I/O-efficient dynamic data structure for point location in a general planar subdivision. Our structure uses O(<i>N/B</i>) disk blocks of size <i>B</i> to store a subdivision of size <i>N</i>. Queries can be answered in O(log<inf><i>B</i></inf><sup>2</sup><i>N</i>) I/Os in the worst-case, and insertions and deletions can be performed in O(log<inf><i>B</i></inf><sup>2</sup><i>N</i>) and O(log<inf><i>B</i></inf><i>N</i>) I/Os amortized, respectively. Part of our data structure is based on an external version of the so-called logarithmic method that allows for efficient dynamization of static external-memory data structures with certain characteristics. Another important part of our structure is an external data structure for vertical ray-shooting among line segments in the plane with endpoints on <i>B</i> lines, developed using an external version of dynamic fractional cascading. We believe that these methods could prove helpful in the development of other dynamic external memory data structures. 