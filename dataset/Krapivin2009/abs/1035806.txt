A naming protocol assigns unique names (keys) to every process out of a set of communicating processes. We construct a randomized wait-free naming protocol using wait-free atomic read/write registers (shared variables) as process intercommunication primitives. Each process has its own private register and can read all others. The addresses/names each one uses for the others are possibly different: Processes <i>p</i> and <i>q</i> address the register of process <i>r</i> in a way not known to each other. For <i>n</i> processes and  > 0, the protocol uses a name space of size (1 + )<i>n</i> and <i>O</i>(<i>n</i> log <i>n</i> log log <i>n</i>) running time (read/writes to shared bits) with probability at least 1-<i>o</i>(1), and <i>O</i>(<i>n</i>log<sup>2</sup><i>n</i>) overall expected running time. The protocol is based on the wait-free implementation of a novel -Test&SetOnce object that randomly and fast selects a winner from a set of <i>q</i> contenders with probability at least  in the face of the strongest possible adaptive adversary. 